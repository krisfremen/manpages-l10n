.\"
.\"	Copyright 1993 Sebastian Hetze und der/die in der Sektion
.\"	AUTOR genannten Autor/Autoren
.\"
.\"	Dieser Text steht unter der GNU General Public License.
.\"	Er darf kopiert und verändert, korrigiert und verbessert werden.
.\"	Die Copyright und Lizenzbestimmung müssen allerdings erhalten
.\"	bleiben. Die Hinweise auf das LunetIX Linuxhandbuch, aus dem
.\"	dieser Text stammt, dürfen nicht entfernt werden.
.\"
.TH SED 1 "1. Juli 1993" "LunetIX Linuxhandbuch" "Dienstprogramme für Benutzer"
.SH BEZEICHNUNG 
sed \- (stream editor) ist ein Editor zur nicht-interaktiven Textbearbeitung
.SH SYNTAX 
.B sed
.RB [ \-nV ] 
.RB [ \--quiet ] 
.RB [ \-\-silent ] 
.RB [ \-\-version ] 
.RB [ \-e 
.IR Editorkommando ] 
.RB [ \-f 
.IR Scriptdatei ]
.RB [ \-\-expression=
.IR Editorkommando ] 
.RB [ \-\-file=
.IR Scriptdatei ] 
.RI [ Datei  ...]
.SH BESCHREIBUNG
.B sed
ist ein Editor zur automatischen Textbearbeitung.
.PP
Die Bearbeitung erfolgt mit Editorkommandos, die dem
.B sed
in einer separaten
.I Scriptdatei
oder direkt in der Kommandozeile übergeben werden.  Um in der
Kommandozeile mehrere
.I Editorkommandos
zu übergeben, kann die
.B \-e
Option mehrfach verwendet werden. Die Editorkommandos können auch
durch ein Semikolon getrennt werden.  Wird nur ein einziges Editorkommando
in der Kommandozeile übergeben, kann die Kennzeichnung mit der
.B \-e
Option auch weggelassen werden.  Damit die Shell keine
Veränderungen an der Zeichenkette mit dem Editorkommando vornimmt, muß
sie in Hochkommata eingeschlossen werden.
.PP
Eine Scriptdatei kann beliebig viele Editorkommandos enthalten, die
durch Zeilenende oder Semikolon von einander getrennt werden müssen.
.PP
Jedes Kommando besteht aus einem Adreßteil und einem Funktionsteil. 
Der Adreßteil gibt an, welche Zeilen einer Textdatei mit diesem
Kommando bearbeitet werden sollen, und der Funktionsteil beschreibt
die Veränderung, die an den im Adreßteil bestimmten Zeilen
vorgenommen werden soll.  Wenn kein Adreßteil angegeben ist, wird die
Funktion mit jeder Zeile ausgeführt.
.PP
Die Bearbeitung eines Textes erfolgt, indem die Eingabe zeilenweise in
einen Arbeitsspeicher gelesen wird, und dann die Adreßteile aller
Editorkommandos der Reihe nach mit dem Text im Arbeitsspeicher
verglichen werden.  Die Funktionen der passenden Kommandos werden in der
Reihenfolge ihres Auftretens ausgeführt.  Normalerweise wird nach der
Bearbeitung aller Kommandos der Inhalt des Arbeitsspeichers auf die
Standardausgabe ausgegeben und danach durch die nächste Eingabezeile
ersetzt.  Die automatische Ausgabe des Arbeitsspeichers nach jeder
Zeile kann mit der Option
.B \-n
unterdrückt werden.
.PP
Zusätzlich zu dem Arbeitsspeicher gibt es noch einen Zwischenspeicher
(Puffer), der von verschiedenen Funktionen benutzt werden kann.
.PP
Der Arbeitsspeicher kann auch mehrere Zeilen auf einmal enthalten.
.PP
Im Adreßteil können die Zeilen entweder durch ihre Zeilennummern, oder
durch reguläre Ausdrücke ausgewählt werden.  Alle Funktionen außer den
.BR a ", " i ", " q " und " =
akzeptieren einen Adressbereich, bei dem eine Start- und eine Endadresse
durch ein Komma getrennt angegeben werden.  Ein Dollarzeichen steht für
die letzte Zeile.  Wenn eine Endadresse mit einem regulären Ausdruck
bezeichnet ist, wird die erste passende Zeile als Bereichsende eingesetzt.
.PP
Reguläre Ausdrücke müssen in einfachen Schrägstrichen (Slashes
.BR / )
eingeschlossen werden. 
.B sed
benutzt die gleichen Routinen zur Auswertung regulärer Ausdrücke wie
.BR emacs " oder " grep .
Darüberhinaus kann auch die an die
.B sed
Syntax angelehnte Konstruktion
\fB\\#\fIMuster\fB\\#\fR
(mit jedem beliebigen Zeichen für \fB\\#\fP) benutzt werden, die wie
.BI / Muster / 
interpretiert wird.
.PP
Im
.I Muster
kann auch ein \fB\\n\fP vorkommen, das auf das Zeilenende paßt.
.PP
Der sed kann folgende Funktionen ausführen:
.TP
\fBa\\\fIText\fR
schreibt den
.I Text
in die Standardausgabe, bevor die nächste Eingabezeile gelesen wird
.TP
.BI b " Marke"
springt zur der mit der
.RI : " Marke"
markierten Zeile im Script (nicht im Text) und fährt dort mit dem
Programm fort
.TP
\fBc\\\fIText\fR
die im Arbeitsspeicher von
.B sed
befindliche Zeilen werden gelöscht, und der Text in die Standardausgabe
geschrieben; wenn ein Adressbereich angegeben ist, wird der Text erst am
Bereichsende einmal ausgegeben
.TP
.B d
alle aktuell im Arbeitsspeicher von
.B sed
befindlichen Zeichen werden gelöscht und die nächste Eingabezeile gelesen;
die auf diesen Befehl folgenden Befehle werden nicht mehr bearbeitet, auch
wenn die Zeilen im Arbeitsspeicher im passenden Bereich liegen
.TP
.B D
die erste Zeile im Arbeitsspeicher von
.B sed
wird gelöscht und die nächste Zeile wird gelesen; die auf diesen Befehl
folgenden Befehle werden nicht mehr bearbeitet, auch wenn die Zeilen
im Arbeitsspeicher im passenden Bereich liegen
.TP
.B g
der Arbeitsspeicher von
.B sed
wird durch den Inhalt des Puffers ersetzt; der Inhalt des
Arbeitsspeichers geht dabei verloren
.TP
.B G
der Pufferinhalt wird an den Inhalt des Arbeitsspeichers angehängt
.TP
.B h
der Inhalt des Arbeitsspeichers wird in den Puffer geschrieben; der Inhalt
des Puffers geht dabei verloren
.TP
.B H
der Inhalt des Arbeitsspeichers von
.B sed
wird an den Puffer angehängt
.TP
\fBi\\\fIText\fR
(insert) der Text wird sofort in die Standardausgabe geschrieben
.TP
.B l
der Inhalt des Arbeitsspeichers von
.B sed
wird ausgegeben; nichtdruckbare Zeichen werden als Oktalzahl dargestellt
.TP
.B n
der Inhalt des Arbeitsspeichers wird unverändert in die Ausgabe
geschrieben und der Arbeitsspeicher durch die nächste Eingabezeile ersetzt
.TP
.B N
die nächste Eingabezeile wird an den Arbeitsspeicher angehängt; das
Zeilenende wird mit in den Arbeitsspeicher geschrieben; die Zeilennummer
des aktuellen Bereiches erhöht sich um eins
.TP
.B p
der Inhalt des Arbeitsspeichers wird in die Standardausgabe geschrieben
.TP
.B P
die erste Zeile im Arbeitsspeicher wird in die Standardausgabe geschrieben
.TP
.B q
beendet
.BR sed ;
es werden keine weiteren Befehle ausgeführt und keine Zeilen mehr gelesen
.TP
.BI r " Datei"
der Inhalt der Datei wird ausgegeben, bevor die nächste Zeile gelesen wird
.TP
\fBs/\fIAusdruck\fB/\fIErsetzung\fB/\fR[\fIModus\fR]
(substitute) ersetzt den (ersten) auf den regulären Ausdruck
passenden Text durch den Ersetzungstext; es kann auch ein
beliebiges anderes Zeichen anstelle von
.B /
benutzt werden; als Modus können ein oder mehrere der folgenden
angegeben werden
.RS
.TP
.I n
eine Zahl von 1 bis 512 ersetzt nur das n-te Auftreten des Musters
.TP
.B g
(global) alle auf den Ausdruck passenden Textteile werden ersetzt
.TP
.B p
wenn eine Ersetzung stattgefunden hat, wird der Inhalt des Arbeitsspeichers
von
.B sed
in die Standardausgabe geschrieben
.RE
.TP
.BI w " Datei"
wenn eine Ersetzung stattgefunden hat, wird der Inhalt des Arbeitsspeichers
in die
.I Datei
geschrieben
.TP
.BI t " Marke"
verzweigt zur mit der
.RI : Marke
versehenen Zeile in der Programmdatei, wenn eine Ersetzung am Inhalt
des Arbeitsspeichers vorgenommen wurde, seit die letzte Eingabezeile
gelesen wurde, oder seit der letzte
.B t
Befehl bearbeitet wurde; wenn keine
.I Marke
angegeben ist, wird an das Ende der Programmdatei verzweigt
.TP
.BI w " Datei"
schreibt den Inhalt des Arbeisspeichers in die benannte
.I Datei
.TP
.B x
vertauscht den Inhalt des Puffers mit dem Arbeitsspeicher
.TP
.BI y/ Zeichenkette1 / Zeichenkette2 /
vertauscht jedes auftretende Zeichen aus der Zeichenkette1 mit dem
entsprechenden Zeichen der Zeichenkette2; die beiden Zeichenketten
müssen gleich lang sein
.TP
.BI ! " Funktion"
führt die Funktion für alle Zeilen aus, die NICHT in den Bereich passen
.TP
.BI : "Marke"
setzt eine
.I Marke
für den b und den t Befehl
.TP
.B {...}
die von den Klammern eingeschlossenen und durch Zeilenende
oder Semikolon getrennten Funktionen werden als Einheit behandelt
.TP
.B =
gibt die aktuelle Eingabezeilennummer aus
.TP
.B \\\\#
leitet einen Kommentar ein; alle folgenden Zeichen bis zum Zeilenende
werden ignoriert
.SH OPTIONEN
.TP
.B \-n
gibt nur die Zeilen aus, die explizit (durch die Anweisung p)
ausgedruckt werden sollen
.TP
.B \-V
gibt die Versionsnummer und eine Kurzhilfe aus
.TP
.BI \-e "Zeichenkette"
wendet die Editorbefehle aus
.I Zeichenkette
auf den Text an
.TP
.BI \-f " Datei"
liest die Editorbefehle aus der
.I Datei
.SH SIEHE AUCH
das LunetIX Linuxhandbuch
.SH AUTOR
Unbekannt

