.\" Copyright 2002 Walter Harms (walter.harms@informatik.uni-oldenburg.de)
.\" Distributed under GPL
.\" Translated into German by Jens Rohler(jkcr@rohler.de)
.\"
.TH COMPLEX 5 "16. März 2006" "" "Dateiformate"
.SH BEZEICHNUNG
complex \- Grundlagen der komplexen Mathematik
.SH "ÜBERSICHT"
.B #include <complex.h>
.SH BESCHREIBUNG
Komplexe Zahlen sind Zahlen der Form z = a+b*i, wobei a und b reelle Zahlen
sind und i = sqrt(-1), also i*i = -1.  
.br
Es gibt andere Arten diese Zahl zu repräsentieren.  Das Paar (a,b) aus
reellen Zahlen kann als Punkt in der Ebene betrachtet werden, der durch 
die X- und Y-Koordinaten gegeben ist.  Derselbe Punkt kann auch durch
ein Paar (r,phi) von reellen Zahlen beschrieben werden, wobei r der Abstand
vom Ursprung 0 ist, und phi der Winkel zwischen der X-Achse und der Geraden
0z.  Nun ist z = r*exp(i*phi) = r*(cos(phi)+i*sin(phi)).  
.PP
Die grundlegenden Operationen sind auf z = a+b*i und w = c+d*i 
folgendermaßen definiert:
.TP
.B Addition: z+w = (a+c) + (b+d)*i
.TP
.B Multiplikation: z*w = (a*c - b*d) + (a*d + b*c)*i
.TP
.B Division: z/w = ((a*c + b*d)/(c*c + d*d)) + ((b*c - a*d)/(c*c + d*d))*i
.PP
Nahezu alle mathematischen Funktionen haben komplexe Gegenstücke, aber
es gibt einige nur-komplexe Funktionen.  
.SH BEISPIEL
Ihr C-Compiler kann mit komplexen Zahlen arbeiten, wenn er den C99-Standard
unterstützt.  Sie müssen mit \-lm linken.  Die imaginäre Einheit wird durch 
I repräsentiert.
.sp
.nf
/* überprüfe exp(i*pi) == -1 */
#include <math.h>	/* für atan */
#include <complex.h>
main() {
	double pi = 4*atan(1);
	complex z = cexp(I*pi);
	printf("%f+%f*i\\n", creal(z), cimag(z));
}
.fi
.SH "SIEHE AUCH"
.BR cabs (3),
.BR carg (3),
.BR cexp (3),
.BR cimag (3),
.BR creal (3).
