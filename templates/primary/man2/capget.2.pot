# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2017-07-23 16:01+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: TH
#, no-wrap
msgid "CAPGET"
msgstr ""

#. type: TH
#, no-wrap
msgid "2015-07-23"
msgstr ""

#. type: TH
#, no-wrap
msgid "Linux"
msgstr ""

#. type: TH
#, no-wrap
msgid "Linux Programmer's Manual"
msgstr ""

#. type: SH
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
msgid "capget, capset - set/get capabilities of thread(s)"
msgstr ""

#. type: SH
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
msgid "B<#include E<lt>sys/capability.hE<gt>>"
msgstr ""

#. type: Plain text
msgid "B<int capget(cap_user_header_t >I<hdrp>B<, cap_user_data_t >I<datap>B<);>"
msgstr ""

#. type: Plain text
msgid ""
"B<int capset(cap_user_header_t >I<hdrp>B<, const cap_user_data_t "
">I<datap>B<);>"
msgstr ""

#. type: SH
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
msgid ""
"As of Linux 2.2, the power of the superuser (root) has been partitioned into "
"a set of discrete capabilities.  Each thread has a set of effective "
"capabilities identifying which capabilities (if any) it may currently "
"exercise.  Each thread also has a set of inheritable capabilities that may "
"be passed through an B<execve>(2)  call, and a set of permitted capabilities "
"that it can make effective or inheritable."
msgstr ""

#. type: Plain text
msgid ""
"These two system calls are the raw kernel interface for getting and setting "
"thread capabilities.  Not only are these system calls specific to Linux, but "
"the kernel API is likely to change and use of these system calls (in "
"particular the format of the I<cap_user_*_t> types) is subject to extension "
"with each kernel revision, but old programs will keep working."
msgstr ""

#. type: Plain text
msgid ""
"The portable interfaces are B<cap_set_proc>(3)  and B<cap_get_proc>(3); if "
"possible, you should use those interfaces in applications.  If you wish to "
"use the Linux extensions in applications, you should use the easier-to-use "
"interfaces B<capsetp>(3)  and B<capgetp>(3)."
msgstr ""

#. type: SS
#, no-wrap
msgid "Current details"
msgstr ""

#. type: Plain text
msgid ""
"Now that you have been warned, some current kernel details.  The structures "
"are defined as follows."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"#define _LINUX_CAPABILITY_VERSION_1  0x19980330\n"
"#define _LINUX_CAPABILITY_U32S_1     1\n"
msgstr ""

#.  commit e338d263a76af78fe8f38a72131188b58fceb591
#.  Added 64 bit capability support
#. type: Plain text
#, no-wrap
msgid ""
"        /* V2 added in Linux 2.6.25; deprecated */\n"
"#define _LINUX_CAPABILITY_VERSION_2  0x20071026\n"
"#define _LINUX_CAPABILITY_U32S_2     2\n"
msgstr ""

#.  commit ca05a99a54db1db5bca72eccb5866d2a86f8517f
#. type: Plain text
#, no-wrap
msgid ""
"        /* V3 added in Linux 2.6.26 */\n"
"#define _LINUX_CAPABILITY_VERSION_3  0x20080522\n"
"#define _LINUX_CAPABILITY_U32S_3     2\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"typedef struct __user_cap_header_struct {\n"
"   __u32 version;\n"
"   int pid;\n"
"} *cap_user_header_t;\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"typedef struct __user_cap_data_struct {\n"
"   __u32 effective;\n"
"   __u32 permitted;\n"
"   __u32 inheritable;\n"
"} *cap_user_data_t;\n"
msgstr ""

#. type: Plain text
msgid ""
"The I<effective>, I<permitted>, and I<inheritable> fields are bit masks of "
"the capabilities defined in B<capabilities>(7).  Note that the B<CAP_*> "
"values are bit indexes and need to be bit-shifted before ORing into the bit "
"fields.  To define the structures for passing to the system call, you have "
"to use the I<struct __user_cap_header_struct> and I<struct "
"__user_cap_data_struct> names because the typedefs are only pointers."
msgstr ""

#. type: Plain text
msgid ""
"Kernels prior to 2.6.25 prefer 32-bit capabilities with version "
"B<_LINUX_CAPABILITY_VERSION_1>.  Linux 2.6.25 added 64-bit capability sets, "
"with version B<_LINUX_CAPABILITY_VERSION_2>.  There was, however, an API "
"glitch, and Linux 2.6.26 added B<_LINUX_CAPABILITY_VERSION_3> to fix the "
"problem."
msgstr ""

#. type: Plain text
msgid ""
"Note that 64-bit capabilities use I<datap>[0] and I<datap>[1], whereas "
"32-bit capabilities use only I<datap>[0]."
msgstr ""

#. type: Plain text
msgid ""
"On kernels that support file capabilities (VFS capability support), these "
"system calls behave slightly differently.  This support was added as an "
"option in Linux 2.6.24, and became fixed (nonoptional) in Linux 2.6.33."
msgstr ""

#. type: Plain text
msgid ""
"For B<capget>()  calls, one can probe the capabilities of any process by "
"specifying its process ID with the I<hdrp-E<gt>pid> field value."
msgstr ""

#. type: SS
#, no-wrap
msgid "With VFS capability support"
msgstr ""

#. type: Plain text
msgid ""
"VFS Capability support creates a file-attribute method for adding "
"capabilities to privileged executables.  This privilege model obsoletes "
"kernel support for one process asynchronously setting the capabilities of "
"another.  That is, with VFS support, for B<capset>()  calls the only "
"permitted values for I<hdrp-E<gt>pid> are 0 or B<gettid>(2), which are "
"equivalent."
msgstr ""

#. type: SS
#, no-wrap
msgid "Without VFS capability support"
msgstr ""

#. type: Plain text
msgid ""
"When the kernel does not support VFS capabilities, B<capset>()  calls can "
"operate on the capabilities of the thread specified by the I<pid> field of "
"I<hdrp> when that is nonzero, or on the capabilities of the calling thread "
"if I<pid> is 0.  If I<pid> refers to a single-threaded process, then I<pid> "
"can be specified as a traditional process ID; operating on a thread of a "
"multithreaded process requires a thread ID of the type returned by "
"B<gettid>(2).  For B<capset>(), I<pid> can also be: -1, meaning perform the "
"change on all threads except the caller and B<init>(1); or a value less than "
"-1, in which case the change is applied to all members of the process group "
"whose ID is -I<pid>."
msgstr ""

#. type: Plain text
msgid "For details on the data, see B<capabilities>(7)."
msgstr ""

#. type: SH
#, no-wrap
msgid "RETURN VALUE"
msgstr ""

#. type: Plain text
msgid ""
"On success, zero is returned.  On error, -1 is returned, and I<errno> is set "
"appropriately."
msgstr ""

#. type: Plain text
msgid ""
"The calls will fail with the error B<EINVAL>, and set the I<version> field "
"of I<hdrp> to the kernel preferred value of B<_LINUX_CAPABILITY_VERSION_?> "
"when an unsupported I<version> value is specified.  In this way, one can "
"probe what the current preferred capability revision is."
msgstr ""

#. type: SH
#, no-wrap
msgid "ERRORS"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<EFAULT>"
msgstr ""

#. type: Plain text
msgid ""
"Bad memory address.  I<hdrp> must not be NULL.  I<datap> may be NULL only "
"when the user is trying to determine the preferred capability version format "
"supported by the kernel."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<EINVAL>"
msgstr ""

#. type: Plain text
msgid "One of the arguments was invalid."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<EPERM>"
msgstr ""

#. type: Plain text
msgid ""
"An attempt was made to add a capability to the Permitted set, or to set a "
"capability in the Effective or Inheritable sets that is not in the Permitted "
"set."
msgstr ""

#. type: Plain text
msgid ""
"The caller attempted to use B<capset>()  to modify the capabilities of a "
"thread other than itself, but lacked sufficient privilege.  For kernels "
"supporting VFS capabilities, this is never permitted.  For kernels lacking "
"VFS support, the B<CAP_SETPCAP> capability is required.  (A bug in kernels "
"before 2.6.11 meant that this error could also occur if a thread without "
"this capability tried to change its own capabilities by specifying the "
"I<pid> field as a nonzero value (i.e., the value returned by B<getpid>(2))  "
"instead of 0.)"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ESRCH>"
msgstr ""

#. type: Plain text
msgid "No such thread."
msgstr ""

#. type: SH
#, no-wrap
msgid "CONFORMING TO"
msgstr ""

#. type: Plain text
msgid "These system calls are Linux-specific."
msgstr ""

#. type: SH
#, no-wrap
msgid "NOTES"
msgstr ""

#. type: Plain text
msgid ""
"The portable interface to the capability querying and setting functions is "
"provided by the I<libcap> library and is available here:"
msgstr ""

#. type: Plain text
msgid ""
"E<.UR "
"http://git.kernel.org/cgit\\:/linux\\:/kernel\\:/git\\:/morgan\\:\\:/libcap.git> "
"E<.UE>"
msgstr ""

#. type: SH
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
msgid "B<clone>(2), B<gettid>(2), B<capabilities>(7)"
msgstr ""

#. type: SH
#, no-wrap
msgid "COLOPHON"
msgstr ""

#. type: Plain text
msgid ""
"This page is part of release 4.12 of the Linux I<man-pages> project.  A "
"description of the project, information about reporting bugs, and the latest "
"version of this page, can be found at "
"\\%https://www.kernel.org/doc/man-pages/."
msgstr ""
