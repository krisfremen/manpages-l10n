# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2017-07-23 16:01+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: TH
#, no-wrap
msgid "ALLOCA"
msgstr ""

#. type: TH
#, no-wrap
msgid "2015-03-02"
msgstr ""

#. type: TH
#, no-wrap
msgid "GNU"
msgstr ""

#. type: TH
#, no-wrap
msgid "Linux Programmer's Manual"
msgstr ""

#. type: SH
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
msgid "alloca - allocate memory that is automatically freed"
msgstr ""

#. type: SH
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
msgid "B<#include E<lt>alloca.hE<gt>>"
msgstr ""

#. type: Plain text
msgid "B<void *alloca(size_t >I<size>B<);>"
msgstr ""

#. type: SH
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
msgid ""
"The B<alloca>()  function allocates I<size> bytes of space in the stack "
"frame of the caller.  This temporary space is automatically freed when the "
"function that called B<alloca>()  returns to its caller."
msgstr ""

#. type: SH
#, no-wrap
msgid "RETURN VALUE"
msgstr ""

#. type: Plain text
msgid ""
"The B<alloca>()  function returns a pointer to the beginning of the "
"allocated space.  If the allocation causes stack overflow, program behavior "
"is undefined."
msgstr ""

#. type: SH
#, no-wrap
msgid "ATTRIBUTES"
msgstr ""

#. type: Plain text
msgid "For an explanation of the terms used in this section, see B<attributes>(7)."
msgstr ""

#. type: tbl table
#, no-wrap
msgid "Interface"
msgstr ""

#. type: tbl table
#, no-wrap
msgid "Attribute"
msgstr ""

#. type: tbl table
#, no-wrap
msgid "Value"
msgstr ""

#. type: tbl table
#, no-wrap
msgid "B<alloca>()\n"
msgstr ""

#. type: tbl table
#, no-wrap
msgid "Thread safety"
msgstr ""

#. type: tbl table
#, no-wrap
msgid "MT-Safe"
msgstr ""

#. type: SH
#, no-wrap
msgid "CONFORMING TO"
msgstr ""

#. type: Plain text
msgid "This function is not in POSIX.1."
msgstr ""

#. type: Plain text
msgid ""
"There is evidence that the B<alloca>()  function appeared in 32V, PWB, "
"PWB.2, 3BSD, and 4BSD.  There is a man page for it in 4.3BSD.  Linux uses "
"the GNU version."
msgstr ""

#. type: SH
#, no-wrap
msgid "NOTES"
msgstr ""

#. type: Plain text
msgid ""
"The B<alloca>()  function is machine- and compiler-dependent.  For certain "
"applications, its use can improve efficiency compared to the use of "
"B<malloc>(3)  plus B<free>(3).  In certain cases, it can also simplify "
"memory deallocation in applications that use B<longjmp>(3)  or "
"B<siglongjmp>(3).  Otherwise, its use is discouraged."
msgstr ""

#. type: Plain text
msgid ""
"Because the space allocated by B<alloca>()  is allocated within the stack "
"frame, that space is automatically freed if the function return is jumped "
"over by a call to B<longjmp>(3)  or B<siglongjmp>(3)."
msgstr ""

#. type: Plain text
msgid "Do not attempt to B<free>(3)  space allocated by B<alloca>()!"
msgstr ""

#. type: SS
#, no-wrap
msgid "Notes on the GNU version"
msgstr ""

#. type: Plain text
msgid ""
"Normally, B<gcc>(1)  translates calls to B<alloca>()  with inlined code.  "
"This is not done when either the I<-ansi>, I<-std=c89>, I<-std=c99>, or the "
"I<-std=c11> option is given B<and> the header I<E<lt>alloca.hE<gt>> is not "
"included.  Otherwise, (without an -ansi or -std=c* option) the glibc version "
"of I<E<lt>stdlib.hE<gt>> includes I<E<lt>alloca.hE<gt>> and that contains "
"the lines:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    #ifdef  __GNUC__\n"
"    #define alloca(size)   __builtin_alloca (size)\n"
"    #endif\n"
msgstr ""

#. type: Plain text
msgid "with messy consequences if one has a private version of this function."
msgstr ""

#. type: Plain text
msgid ""
"The fact that the code is inlined means that it is impossible to take the "
"address of this function, or to change its behavior by linking with a "
"different library."
msgstr ""

#. type: Plain text
msgid ""
"The inlined code often consists of a single instruction adjusting the stack "
"pointer, and does not check for stack overflow.  Thus, there is no NULL "
"error return."
msgstr ""

#. type: SH
#, no-wrap
msgid "BUGS"
msgstr ""

#. type: Plain text
msgid ""
"There is no error indication if the stack frame cannot be extended.  "
"(However, after a failed allocation, the program is likely to receive a "
"B<SIGSEGV> signal if it attempts to access the unallocated space.)"
msgstr ""

#. type: Plain text
msgid ""
"On many systems B<alloca>()  cannot be used inside the list of arguments of "
"a function call, because the stack space reserved by B<alloca>()  would "
"appear on the stack in the middle of the space for the function arguments."
msgstr ""

#. type: SH
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
msgid "B<brk>(2), B<longjmp>(3), B<malloc>(3)"
msgstr ""

#. type: SH
#, no-wrap
msgid "COLOPHON"
msgstr ""

#. type: Plain text
msgid ""
"This page is part of release 4.12 of the Linux I<man-pages> project.  A "
"description of the project, information about reporting bugs, and the latest "
"version of this page, can be found at "
"\\%https://www.kernel.org/doc/man-pages/."
msgstr ""
