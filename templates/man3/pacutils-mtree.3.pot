# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-08-27 16:50+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: ds C+
#: archlinux
#, no-wrap
msgid "C\\v'-.1v'\\h'-1p'\\s-2+\\h'-1p'+\\s0\\v'.1v'\\h'-1p'"
msgstr ""

#. type: ds :
#: archlinux
#, no-wrap
msgid "\\k:\\h'-(\\n(.wu*8/10-\\*(#H+.1m+\\*(#F)'\\v'-\\*(#V'\\z.\\h'.2m+\\*(#F'.\\h'|\\n:u'\\v'\\*(#V'"
msgstr ""

#. type: ds 8
#: archlinux
#, no-wrap
msgid "\\h'\\*(#H'\\(*b\\h'-\\*(#H'"
msgstr ""

#. type: ds o
#: archlinux
#, no-wrap
msgid "\\k:\\h'-(\\n(.wu+\\w'\\(de'u-\\*(#H)/2u'\\v'-.3n'\\*(#[\\z\\(de\\v'.3n'\\h'|\\n:u'\\*(#]"
msgstr ""

#. type: ds d-
#: archlinux
#, no-wrap
msgid "\\h'\\*(#H'\\(pd\\h'-\\w'~'u'\\v'-.25m'I<\\(hy>\\v'.25m'\\h'-\\*(#H'"
msgstr ""

#. type: ds D-
#: archlinux
#, no-wrap
msgid "D\\k:\\h'-\\w'D'u'\\v'-.11m'\\z\\(hy\\v'.11m'\\h'|\\n:u'"
msgstr ""

#. type: ds th
#: archlinux
#, no-wrap
msgid "\\*(#[\\v'.3m'\\s+1I\\s-1\\v'-.3m'\\h'-(\\w'I'u*2/3)'\\s-1o\\s+1\\*(#]"
msgstr ""

#. type: ds Th
#: archlinux
#, no-wrap
msgid "\\*(#[\\s+2I\\s-2\\h'-\\w'I'u*3/5'\\v'-.3m'o\\v'.3m'\\*(#]"
msgstr ""

#. type: ds ae
#: archlinux
#, no-wrap
msgid "a\\h'-(\\w'a'u*4/10)'e"
msgstr ""

#. type: ds Ae
#: archlinux
#, no-wrap
msgid "A\\h'-(\\w'A'u*4/10)'E"
msgstr ""

#.  ========================================================================
#. type: IX
#: archlinux
#, no-wrap
msgid "Title"
msgstr ""

#.  ========================================================================
#. type: IX
#: archlinux
#, no-wrap
msgid "pacutils-mtree 3"
msgstr ""

#. type: TH
#: archlinux
#, no-wrap
msgid "pacutils-mtree"
msgstr ""

#. type: TH
#: archlinux
#, no-wrap
msgid "2021-08-14"
msgstr ""

#. type: TH
#: archlinux
#, no-wrap
msgid "pacutils"
msgstr ""

#. type: SH
#: archlinux
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: archlinux
msgid "pacutils-mtree - read mtree data for installed packages"
msgstr ""

#. type: IX
#: archlinux
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: IX
#: archlinux
#, no-wrap
msgid "Header"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"\\& #include E<lt>pacutils/mtree.hE<gt> \\& \\& typedef struct pu_mtree_t "
"{ \\& char *path; \\& char *type; \\& uid_t uid; \\& gid_t gid; \\& mode_t "
"mode; \\& off_t size; \\& char *md5digest; \\& char *sha256digest; \\& } "
"pu_mtree_t; \\& \\& typedef struct { \\& FILE *stream; \\& int eof; \\& "
"pu_mtree_t defaults; \\& } pu_mtree_reader_t; \\& \\& pu_mtree_reader_t "
"*pu_mtree_reader_open_stream(FILE *stream); \\& pu_mtree_reader_t "
"*pu_mtree_reader_open_package(alpm_handle_t *h, alpm_pkg_t *p); \\& "
"pu_mtree_t *pu_mtree_reader_next(pu_mtree_reader_t *reader, pu_mtree_t "
"*dest); \\& void pu_mtree_reader_free(pu_mtree_reader_t *reader); \\& void "
"pu_mtree_free(pu_mtree_t *mtree); \\& \\& /* deprecated */ \\& alpm_list_t "
"*pu_mtree_load_pkg_mtree(alpm_handle_t *handle, alpm_pkg_t *pkg);"
msgstr ""

#. type: IX
#: archlinux
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"Package mtree reading functions are provided to fill gaps in libarchive's "
"mtree reader, notably CW<\\*(C`md5digest\\*(C'> and CW<\\*(C`sha256digest"
"\\*(C'> which are currently not read by libarchive.  Support is incomplete "
"and should only be used to supplement libalpm's native mtree reader."
msgstr ""

#. type: IP
#: archlinux
#, no-wrap
msgid "pu_mtree_reader_t *pu_mtree_reader_open_stream(\\s-1FILE\\s0 *stream);"
msgstr ""

#. type: IX
#: archlinux
#, no-wrap
msgid "Item"
msgstr ""

#. type: IX
#: archlinux
#, no-wrap
msgid "pu_mtree_reader_t *pu_mtree_reader_open_stream(FILE *stream);"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Open a file stream for parsing."
msgstr ""

#. type: IX
#: archlinux
#, no-wrap
msgid "pu_mtree_reader_t *pu_mtree_reader_open_package(alpm_handle_t *h, alpm_pkg_t *p);"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"Open an installed package's mtree file for parsing.  Results are undefined "
"if \\&CW<\\*(C`p\\*(C'> is not a locally installed package."
msgstr ""

#. type: IX
#: archlinux
#, no-wrap
msgid "pu_mtree_t *pu_mtree_reader_next(pu_mtree_reader_t *reader, pu_mtree_t *dest);"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"Read and return the next entry in the mtree file.  If CW<\\*(C`dest\\*(C'> "
"is CW<\\*(C`NULL\\*(C'> a new \\&CW<\\*(C`pu_mtree_t\\*(C'> object will be "
"allocated that should be freed by the caller.  Otherwise, it will be filled "
"with the parsed data.  Internally allocated memory will automatically be "
"freed as needed."
msgstr ""

#. type: IX
#: archlinux
#, no-wrap
msgid "void pu_mtree_free(pu_mtree_t *mtree);"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Free a CW<\\*(C`pu_mtree_t\\*(C'> struct."
msgstr ""

#. type: IX
#: archlinux
#, no-wrap
msgid "void pu_mtree_reader_free(pu_mtree_reader_t *reader);"
msgstr ""

#. type: Plain text
#: archlinux
msgid "Free a CW<\\*(C`pu_mtree_reader_t\\*(C'> object."
msgstr ""

#. type: IX
#: archlinux
#, no-wrap
msgid "alpm_list_t *pu_mtree_load_pkg_mtree(alpm_handle_t *handle, alpm_pkg_t *pkg);"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"Returns a list of mtree entries for CW<\\*(C`pkg\\*(C'>.  B<\\s-1DEPRECATED"
"\\s0>: use \\&CW<\\*(C`pu_mtree_reader_open_package\\*(C'> instead."
msgstr ""

#. type: IX
#: archlinux
#, no-wrap
msgid "EXAMPLES"
msgstr ""

#. type: IX
#: archlinux
#, no-wrap
msgid "Print file md5sums for a package:"
msgstr ""

#. type: Plain text
#: archlinux
msgid ""
"\\& pu_mtree_t *m; \\& pu_mtree_reader_t *r; \\& \\& if((r = "
"pu_mtree_reader_open_package(handle, pkg)) == NULL) { \\& fprintf(stderr, "
"\"error: unable to load mtree data for \\*(Aq%s\\*(Aq\\en\", \\& "
"alpm_pkg_get_name(pkg)); \\& return; \\& } \\& \\& while((m = "
"pu_mtree_reader_next(r, NULL))) { \\& const char *md5 = m-E<gt>md5digest; "
"\\& printf(\"%s: %s\\en\", m-E<gt>path, \\& md5 && md5[0] != \\*(Aq"
"\\e0\\*(Aq ? md5 : \"(no md5sum provided)\"); \\& pu_mtree_free(m); \\& } "
"\\& if(!reader-E<gt>eof) { \\& fprintf(stderr, \"error: unable to read mtree "
"data for \\*(Aq%s\\*(Aq\\en\", \\& alpm_pkg_get_name(pkg)); \\& } \\& \\& "
"pu_mtree_reader_free(r);"
msgstr ""

#. type: IX
#: archlinux
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: IP
#: archlinux
#, no-wrap
msgid "B<alpm_pkg_mtree_open>\\|(3), B<alpm_pkg_mtree_next>\\|(3), B<alpm_pkg_mtree_close>\\|(3)"
msgstr ""

#. type: IX
#: archlinux
#, no-wrap
msgid "alpm_pkg_mtree_open, alpm_pkg_mtree_next, alpm_pkg_mtree_close"
msgstr ""

#. type: IX
#: archlinux
#, no-wrap
msgid "mtree - description of pu_mtree_t members"
msgstr ""
