# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-08-27 17:43+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: TH
#: debian-bullseye debian-unstable
#, no-wrap
msgid "PTHREAD_MUTEX"
msgstr ""

#. type: TH
#: debian-bullseye debian-unstable
#, no-wrap
msgid "LinuxThreads"
msgstr ""

#. type: SH
#: debian-bullseye debian-unstable
#, no-wrap
msgid "NAME"
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid ""
"pthread_mutex_init, pthread_mutex_lock, pthread_mutex_trylock, "
"pthread_mutex_unlock, pthread_mutex_destroy - operations on mutexes"
msgstr ""

#. type: SH
#: debian-bullseye debian-unstable
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid "B<#include E<lt>pthread.hE<gt>>"
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid "B<pthread_mutex_t >I<fastmutex>B< = PTHREAD_MUTEX_INITIALIZER;>"
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid ""
"B<pthread_mutex_t >I<recmutex>B< = PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP;>"
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid ""
"B<pthread_mutex_t >I<errchkmutex>B< = "
"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP;>"
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid ""
"B<int pthread_mutex_init(pthread_mutex_t *>I<mutex>B<, const "
"pthread_mutexattr_t *>I<mutexattr>B<);>"
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid "B<int pthread_mutex_lock(pthread_mutex_t *>I<mutex>B<);>"
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid "B<int pthread_mutex_trylock(pthread_mutex_t *>I<mutex>B<);>"
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid "B<int pthread_mutex_unlock(pthread_mutex_t *>I<mutex>B<);>"
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid "B<int pthread_mutex_destroy(pthread_mutex_t *>I<mutex>B<);>"
msgstr ""

#. type: SH
#: debian-bullseye debian-unstable
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid ""
"A mutex is a MUTual EXclusion device, and is useful for protecting shared "
"data structures from concurrent modifications, and implementing critical "
"sections and monitors."
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid ""
"A mutex has two possible states: unlocked (not owned by any thread), and "
"locked (owned by one thread). A mutex can never be owned by two different "
"threads simultaneously. A thread attempting to lock a mutex that is already "
"locked by another thread is suspended until the owning thread unlocks the "
"mutex first."
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid ""
"B<pthread_mutex_init> initializes the mutex object pointed to by I<mutex> "
"according to the mutex attributes specified in I<mutexattr>.  If "
"I<mutexattr> is B<NULL>, default attributes are used instead."
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid ""
"The LinuxThreads implementation supports only one mutex attributes, the "
"I<mutex kind>, which is either ``fast'', ``recursive'', or ``error "
"checking''. The kind of a mutex determines whether it can be locked again by "
"a thread that already owns it.  The default kind is ``fast''. See "
"B<pthread_mutexattr_init>(3) for more information on mutex attributes."
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid ""
"Variables of type B<pthread_mutex_t> can also be initialized statically, "
"using the constants B<PTHREAD_MUTEX_INITIALIZER> (for fast mutexes), "
"B<PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP> (for recursive mutexes), and "
"B<PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP> (for error checking mutexes)."
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid ""
"B<pthread_mutex_lock> locks the given mutex. If the mutex is currently "
"unlocked, it becomes locked and owned by the calling thread, and "
"B<pthread_mutex_lock> returns immediately. If the mutex is already locked by "
"another thread, B<pthread_mutex_lock> suspends the calling thread until the "
"mutex is unlocked."
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid ""
"If the mutex is already locked by the calling thread, the behavior of "
"B<pthread_mutex_lock> depends on the kind of the mutex. If the mutex is of "
"the ``fast'' kind, the calling thread is suspended until the mutex is "
"unlocked, thus effectively causing the calling thread to deadlock. If the "
"mutex is of the ``error checking'' kind, B<pthread_mutex_lock> returns "
"immediately with the error code B<EDEADLK>.  If the mutex is of the "
"``recursive'' kind, B<pthread_mutex_lock> succeeds and returns immediately, "
"recording the number of times the calling thread has locked the mutex. An "
"equal number of B<pthread_mutex_unlock> operations must be performed before "
"the mutex returns to the unlocked state."
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid ""
"B<pthread_mutex_trylock> behaves identically to B<pthread_mutex_lock>, "
"except that it does not block the calling thread if the mutex is already "
"locked by another thread (or by the calling thread in the case of a ``fast'' "
"mutex). Instead, B<pthread_mutex_trylock> returns immediately with the error "
"code B<EBUSY>."
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid ""
"B<pthread_mutex_unlock> unlocks the given mutex. The mutex is assumed to be "
"locked and owned by the calling thread on entrance to "
"B<pthread_mutex_unlock>. If the mutex is of the ``fast'' kind, "
"B<pthread_mutex_unlock> always returns it to the unlocked state. If it is of "
"the ``recursive'' kind, it decrements the locking count of the mutex (number "
"of B<pthread_mutex_lock> operations performed on it by the calling thread), "
"and only when this count reaches zero is the mutex actually unlocked."
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid ""
"On ``error checking'' and ``recursive'' mutexes, B<pthread_mutex_unlock> "
"actually checks at run-time that the mutex is locked on entrance, and that "
"it was locked by the same thread that is now calling "
"B<pthread_mutex_unlock>.  If these conditions are not met, an error code is "
"returned and the mutex remains unchanged.  ``Fast'' mutexes perform no such "
"checks, thus allowing a locked mutex to be unlocked by a thread other than "
"its owner. This is non-portable behavior and must not be relied upon."
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid ""
"B<pthread_mutex_destroy> destroys a mutex object, freeing the resources it "
"might hold. The mutex must be unlocked on entrance. In the LinuxThreads "
"implementation, no resources are associated with mutex objects, thus "
"B<pthread_mutex_destroy> actually does nothing except checking that the "
"mutex is unlocked."
msgstr ""

#. type: SH
#: debian-bullseye debian-unstable
#, no-wrap
msgid "CANCELLATION"
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid ""
"None of the mutex functions is a cancellation point, not even "
"B<pthread_mutex_lock>, in spite of the fact that it can suspend a thread for "
"arbitrary durations. This way, the status of mutexes at cancellation points "
"is predictable, allowing cancellation handlers to unlock precisely those "
"mutexes that need to be unlocked before the thread stops executing. "
"Consequently, threads using deferred cancellation should never hold a mutex "
"for extended periods of time."
msgstr ""

#. type: SH
#: debian-bullseye debian-unstable
#, no-wrap
msgid "ASYNC-SIGNAL SAFETY"
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid ""
"The mutex functions are not async-signal safe. What this means is that they "
"should not be called from a signal handler. In particular, calling "
"B<pthread_mutex_lock> or B<pthread_mutex_unlock> from a signal handler may "
"deadlock the calling thread."
msgstr ""

#. type: SH
#: debian-bullseye debian-unstable
#, no-wrap
msgid "RETURN VALUE"
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid ""
"B<pthread_mutex_init> always returns 0. The other mutex functions return 0 "
"on success and a non-zero error code on error."
msgstr ""

#. type: SH
#: debian-bullseye debian-unstable
#, no-wrap
msgid "ERRORS"
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid ""
"The B<pthread_mutex_lock> function returns the following error code on error:"
msgstr ""

#. type: TP
#: debian-bullseye debian-unstable
#, no-wrap
msgid "B<EINVAL>"
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid "the mutex has not been properly initialized."
msgstr ""

#. type: TP
#: debian-bullseye debian-unstable
#, no-wrap
msgid "B<EDEADLK>"
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid ""
"the mutex is already locked by the calling thread (``error checking'' "
"mutexes only)."
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid ""
"The B<pthread_mutex_trylock> function returns the following error codes on "
"error:"
msgstr ""

#. type: TP
#: debian-bullseye debian-unstable
#, no-wrap
msgid "B<EBUSY>"
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid "the mutex could not be acquired because it was currently locked."
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid ""
"The B<pthread_mutex_unlock> function returns the following error code on "
"error:"
msgstr ""

#. type: TP
#: debian-bullseye debian-unstable
#, no-wrap
msgid "B<EPERM>"
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid ""
"the calling thread does not own the mutex (``error checking'' mutexes only)."
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid ""
"The B<pthread_mutex_destroy> function returns the following error code on "
"error:"
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid "the mutex is currently locked."
msgstr ""

#. type: SH
#: debian-bullseye debian-unstable
#, no-wrap
msgid "AUTHOR"
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid "Xavier Leroy E<lt>Xavier.Leroy@inria.frE<gt>"
msgstr ""

#. type: SH
#: debian-bullseye debian-unstable
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid ""
"B<pthread_mutexattr_init>(3), B<pthread_mutexattr_setkind_np>(3), "
"B<pthread_cancel>(3)."
msgstr ""

#. type: SH
#: debian-bullseye debian-unstable
#, no-wrap
msgid "EXAMPLE"
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid "A shared global variable I<x> can be protected by a mutex as follows:"
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
#, no-wrap
msgid ""
"B<int x;\n"
"pthread_mutex_t mut = PTHREAD_MUTEX_INITIALIZER;>\n"
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
msgid ""
"All accesses and modifications to I<x> should be bracketed by calls to "
"B<pthread_mutex_lock> and B<pthread_mutex_unlock> as follows:"
msgstr ""

#. type: Plain text
#: debian-bullseye debian-unstable
#, no-wrap
msgid ""
"B<pthread_mutex_lock(&mut);\n"
"/* operate on x */\n"
"pthread_mutex_unlock(&mut);>\n"
msgstr ""
