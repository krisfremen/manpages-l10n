.\" Copyright (C) 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 18:06:49 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Fri Aug 25 23:17:51 1995 by Andries Brouwer (aeb@cwi.nl)
.\" Modified Wed Dec 18 00:47:18 1996 by Andries Brouwer (aeb@cwi.nl)
.\" 2007-06-15, Marc Boyer <marc.boyer@enseeiht.fr> + mtk
.\"     Improve discussion of strncpy().
.\"
.TH STRCPY 3  2010-09-20 "GNU" "Linux Programmer's Manual"
.SH NAME
strcpy, strncpy \- copy a string
.SH SYNOPSIS
.nf
.B #include <string.h>
.sp
.BI "char *strcpy(char *" dest ", const char *" src );
.sp
.BI "char *strncpy(char *" dest ", const char *" src ", size_t " n );
.fi
.SH DESCRIPTION
The
.BR strcpy ()
function copies the string pointed to by \fIsrc\fP,
including the terminating null byte (\(aq\\0\(aq),
to the buffer pointed to by \fIdest\fP.
The strings may not overlap, and the destination string
\fIdest\fP must be large enough to receive the copy.
.PP
The
.BR strncpy ()
function is similar, except that at most
\fIn\fP bytes of \fIsrc\fP are copied.
.BR Warning :
If there is no null byte
among the first \fIn\fP bytes of \fIsrc\fP,
the string placed in \fIdest\fP will not be null-terminated.
.PP
If the length of
.I src
is less than
.IR n ,
.BR strncpy ()
pads the remainder of
.I dest
with null bytes.
.PP
A simple implementation of
.BR strncpy ()
might be:
.in +4n
.nf

char*
strncpy(char *dest, const char *src, size_t n){
    size_t i;

    for (i = 0 ; i < n && src[i] != \(aq\\0\(aq ; i++)
        dest[i] = src[i];
    for ( ; i < n ; i++)
        dest[i] = \(aq\\0\(aq;

    return dest;
}
.fi
.in
.SH "RETURN VALUE"
The
.BR strcpy ()
and
.BR strncpy ()
functions return a pointer to
the destination string \fIdest\fP.
.SH "CONFORMING TO"
SVr4, 4.3BSD, C89, C99.
.SH NOTES
Some programmers consider
.BR strncpy ()
to be inefficient and error prone.
If the programmer knows (i.e., includes code to test!)
that the size of \fIdest\fP is greater than
the length of \fIsrc\fP, then
.BR strcpy ()
can be used.

If there is no terminating null byte in the first \fIn\fP
characters of \fIsrc\fP,
.BR strncpy ()
produces an unterminated string in \fIdest\fP.
Programmers often prevent this mistake by forcing termination
as follows:
.in +4n
.nf

strncpy(buf, str, n);
if (n > 0)
    buf[n \- 1]= \(aq\\0\(aq;
.fi
.in
.SH BUGS
If the destination string of a
.BR strcpy ()
is not large enough, then anything might happen.
Overflowing fixed-length string buffers is a favorite cracker technique
for taking complete control of the machine.
Any time a program reads or copies data into a buffer,
the program first needs to check that there's enough space.
This may be unnecessary if you can show that overflow is impossible,
but be careful: programs can get changed over time,
in ways that may make the impossible possible.
.SH "SEE ALSO"
.BR bcopy (3),
.BR memccpy (3),
.BR memcpy (3),
.BR memmove (3),
.BR stpcpy (3),
.BR string (3),
.BR strdup (3),
.BR wcscpy (3),
.BR wcsncpy (3)
.SH COLOPHON
This page is part of release 3.27 of the Linux
.I man-pages
project.
A description of the project,
and information about reporting bugs,
can be found at
http://www.kernel.org/doc/man-pages/.
