# French translation of manpages
# This file is distributed under the same license as the manpages-l10n package.
# Copyright © of this file:
# Christophe Blaess <http://www.blaess.fr/christophe/>, 1996-2003.
# Stéphan Rafin <stephan.rafin@laposte.net>, 2002.
# Thierry Vignaud <tvignaud@mandriva.com>, 1999, 2002.
# François Micaux, 2002.
# Alain Portal <aportal@univ-montp2.fr>, 2003-2008.
# Jean-Philippe Guérard <fevrier@tigreraye.org>, 2005-2006.
# Jean-Luc Coulon (f5ibh) <jean-luc.coulon@wanadoo.fr>, 2006-2007.
# Julien Cristau <jcristau@debian.org>, 2006-2007.
# Thomas Huriaux <thomas.huriaux@gmail.com>, 2006-2008.
# Nicolas François <nicolas.francois@centraliens.net>, 2006-2008.
# Florentin Duneau <fduneau@gmail.com>, 2006-2010.
# Simon Paillard <simon.paillard@resel.enst-bretagne.fr>, 2006.
# Denis Barbier <barbier@debian.org>, 2006, 2010.
# David Prévot <david@tilapin.org>, 2010, 2012, 2013.
# Cédric Boutillier <cedric.boutillier@gmail.com>, 2011, 2012.
# Frédéric Hantrais <fhantrais@gmail.com>, 2013, 2014.
msgid ""
msgstr ""
"Project-Id-Version: perkamon\n"
"POT-Creation-Date: 2019-11-29 11:37+01:00\n"
"PO-Revision-Date: 2018-09-10 20:55+0000\n"
"Last-Translator: Weblate Admin <jean-baptiste@holcroft.fr>\n"
"Language-Team: French <https://translate.holcroft.fr/projects/man-pages-fr/"
"sched/fr/>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n > 1;\n"
"X-Generator: Weblate 3.1.1\n"

#. type: TH
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "CLONE"
msgstr "CLONE"

#. type: TH
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid "2019-11-19"
msgstr "19 novembre 2019"

#. type: TH
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "Linux"
msgstr "Linux"

#. type: TH
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "Linux Programmer's Manual"
msgstr "Manuel du programmeur Linux"

#. type: SH
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "NAME"
msgstr "NOM"

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid "clone, __clone2 - create a child process"
msgid "clone, __clone2, clone3 - create a child process"
msgstr "clone, __clone2 - Créer un processus fils (child)"

#. type: SH
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "SYNOPSIS"
msgstr "SYNOPSIS"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "/* Prototype for the glibc wrapper function */\n"
msgstr "/* Prototype de la fonction d'appel d'enrobage de glibc */\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid ""
"B<#define _GNU_SOURCE>\n"
"B<#include E<lt>sched.hE<gt>>\n"
msgstr ""
"B<#define _GNU_SOURCE>\n"
"B<#include E<lt>sched.hE<gt>>\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy, no-wrap
msgid ""
"B<int clone(int (*>I<fn>B<)(void *), void *>I<stack>B<, int >I<flags>B<, void *>I<arg>B<, ... >\n"
"B<          /* pid_t *>I<parent_tid>B<, void *>I<tls>B<, pid_t *>I<child_tid>B< */ );>\n"
msgstr ""
"B<int clone(int (*>I<fn>B<)(void *), void *>I<child_stack>B<,>\n"
"B<          int >I<flags>B<, void *>I<arg>B<, ... >\n"
"B<          /* pid_t *>I<ptid>B<, struct user_desc *>I<tls>B<, pid_t *>I<ctid>B< */ );>\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy, no-wrap
msgid "/* For the prototype of the raw clone() system call, see NOTES */\n"
msgstr "/* Prototype de l'appel système brut */\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid "B<long clone3(struct clone_args *>I<cl_args>B<, size_t >I<size>B<);>\n"
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid "I<Note>: There is not yet a glibc wrapper for B<clone3>(); see NOTES."
msgstr ""

#. type: SH
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "DESCRIPTION"
msgstr "DESCRIPTION"

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid ""
#| "B<clone>()  creates a new process, in a manner similar to B<fork>(2)."
msgid ""
"These system calls create a new (\"child\") process, in a manner similar to "
"B<fork>(2)."
msgstr "B<clone>() crée un nouveau processus, de façon analogue à B<fork>(2)."

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"By contrast with B<fork>(2), these system calls provide more precise control "
"over what pieces of execution context are shared between the calling process "
"and the child process.  For example, using these system calls, the caller "
"can control whether or not the two processes share the virtual address "
"space, the table of file descriptors, and the table of signal handlers.  "
"These system calls also allow the new child process to be placed in separate "
"B<namespaces>(7)."
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"Note that in this manual page, \"calling process\" normally corresponds to "
"\"parent process\".  But see the description of B<CLONE_PARENT> below."
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid "This page describes the following interfaces:"
msgstr ""

#. type: IP
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid "*"
msgstr "*"

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid ""
#| "This page describes both the glibc B<clone>()  wrapper function and the "
#| "underlying system call on which it is based.  The main text describes the "
#| "wrapper function; the differences for the raw system call are described "
#| "toward the end of this page."
msgid ""
"The glibc B<clone>()  wrapper function and the underlying system call on "
"which it is based.  The main text describes the wrapper function; the "
"differences for the raw system call are described toward the end of this "
"page."
msgstr ""
"Cette page présente à la fois la fonction d'enrobage B<clone>() de glibc et "
"l'appel système sous-jacent sur lequel elle s'appuie. Le texte principal "
"décrit la fonction d'enrobage ; les différences avec l'appel système brut "
"sont précisées plus bas dans l'article."

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid "The newer B<clone3>()  system call."
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"In the remainder of this page, the terminology \"the clone call\" is used "
"when noting details that apply to all of these interfaces,"
msgstr ""

#. type: SS
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid "The clone() wrapper function"
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
msgid ""
"When the child process is created with the B<clone>()  wrapper function, it "
"commences execution by calling the function pointed to by the argument "
"I<fn>.  (This differs from B<fork>(2), where execution continues in the "
"child from the point of the B<fork>(2)  call.)  The I<arg> argument is "
"passed as the argument of the function I<fn>."
msgstr ""
"Quand le processus fils est créé par B<clone>(), il exécute la fonction "
"I<fn>(I<arg>). Ceci est différent de B<fork>(2),  pour lequel l'exécution "
"continue dans le processus fils à partir du moment de l'appel de B<fork>(2). "
"L'argument I<fn> est un pointeur vers la fonction appelée par le processus "
"fils lors de son démarrage. L'argument I<arg> est transmis à la fonction "
"I<fn> lors de son invocation."

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, fuzzy
msgid ""
"When the I<fn>(I<arg>)  function returns, the child process terminates.  The "
"integer returned by I<fn> is the exit status for the child process.  The "
"child process may also terminate explicitly by calling B<exit>(2)  or after "
"receiving a fatal signal."
msgstr ""
"Quand la fonction I<fn>(I<arg>) revient, le processus fils se termine. La "
"valeur entière renvoyée par I<fn> est utilisée comme code de retour du "
"processus fils. Ce dernier peut également se terminer de manière explicite "
"en invoquant la fonction B<exit>(2) ou après la réception d'un signal fatal."

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid ""
#| "The I<child_stack> argument specifies the location of the stack used by "
#| "the child process.  Since the child and calling process may share memory, "
#| "it is not possible for the child process to execute in the same stack as "
#| "the calling process.  The calling process must therefore set up memory "
#| "space for the child stack and pass a pointer to this space to "
#| "B<clone>().  Stacks grow downward on all processors that run Linux "
#| "(except the HP PA processors), so I<child_stack> usually points to the "
#| "topmost address of the memory space set up for the child stack."
msgid ""
"The I<stack> argument specifies the location of the stack used by the child "
"process.  Since the child and calling process may share memory, it is not "
"possible for the child process to execute in the same stack as the calling "
"process.  The calling process must therefore set up memory space for the "
"child stack and pass a pointer to this space to B<clone>().  Stacks grow "
"downward on all processors that run Linux (except the HP PA processors), so "
"I<stack> usually points to the topmost address of the memory space set up "
"for the child stack.  Note that B<clone>()  does not provide a means whereby "
"the caller can inform the kernel of the size of the stack area."
msgstr ""
"L'argument I<child_stack> indique l'emplacement de la pile utilisée par le "
"processus fils. Comme les processus fils et appelant peuvent partager de la "
"mémoire, il n'est généralement pas possible pour le fils d'utiliser la même "
"pile que son père. Le processus appelant doit donc préparer un espace "
"mémoire pour stocker la pile de son fils, et transmettre à B<clone> un "
"pointeur sur cet emplacement. Les piles croissent vers le bas sur tous les "
"processeurs implémentant Linux (sauf le HP PA), donc I<child_stack> doit "
"pointer sur la plus haute adresse de l'espace mémoire prévu pour la pile du "
"processus fils."

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid "The remaining arguments to B<clone>()  are discussed below."
msgstr ""

#. type: SS
#: archlinux debian-buster debian-unstable
#, fuzzy, no-wrap
#| msgid "B<clone>(2)"
msgid "clone3()"
msgstr "B<clone>(2)"

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"The B<clone3>()  system call provides a superset of the functionality of the "
"older B<clone>()  interface.  It also provides a number of API improvements, "
"including: space for additional flags bits; cleaner separation in the use of "
"various arguments; and the ability to specify the size of the child's stack "
"area."
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"As with B<fork>(2), B<clone3>()  returns in both the parent and the child.  "
"It returns 0 in the child process and returns the PID of the child in the "
"parent."
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"The I<cl_args> argument of B<clone3>()  is a structure of the following form:"
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid ""
"struct clone_args {\n"
"    u64 flags;        /* Flags bit mask */\n"
"    u64 pidfd;        /* Where to store PID file descriptor\n"
"                         (I<pid_t *>) */\n"
"    u64 child_tid;    /* Where to store child TID,\n"
"                         in child's memory (I<pid_t *>) */\n"
"    u64 parent_tid;   /* Where to store child TID,\n"
"                         in parent's memory (I<int *>) */\n"
"    u64 exit_signal;  /* Signal to deliver to parent on\n"
"                         child termination */\n"
"    u64 stack;        /* Pointer to lowest byte of stack */\n"
"    u64 stack_size;   /* Size of stack */\n"
"    u64 tls;          /* Location of new TLS */\n"
"};\n"
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"The I<size> argument that is supplied to B<clone3>()  should be initialized "
"to the size of this structure.  (The existence of the I<size> argument "
"permits future extensions to the I<clone_args> structure.)"
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"The stack for the child process is specified via I<cl_args.stack>, which "
"points to the lowest byte of the stack area, and I<cl_args.stack_size>, "
"which specifies the size of the stack in bytes.  In the case where the "
"B<CLONE_VM> flag (see below) is specified, a stack must be explicitly "
"allocated and specified.  Otherwise, these two fields can be specified as "
"NULL and 0, which causes the child to use the same stack area as the parent "
"(in the child's own virtual address space)."
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid "The remaining fields in the I<cl_args> argument are discussed below."
msgstr ""

#. type: SS
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid "Equivalence between clone() and clone3() arguments"
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"Unlike the older B<clone>()  interface, where arguments are passed "
"individually, in the newer B<clone3>()  interface the arguments are packaged "
"into the I<clone_args> structure shown above.  This structure allows for a "
"superset of the information passed via the B<clone>()  arguments."
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"The following table shows the equivalence between the arguments of "
"B<clone>()  and the fields in the I<clone_args> argument supplied to "
"B<clone3>():"
msgstr ""

#. type: tbl table
#: archlinux debian-buster debian-unstable
#, fuzzy, no-wrap
#| msgid "B<clone>(2)"
msgid "clone()"
msgstr "B<clone>(2)"

#. type: tbl table
#: archlinux debian-buster debian-unstable
#, fuzzy, no-wrap
#| msgid "B<clone>(2)"
msgid "clone(3)"
msgstr "B<clone>(2)"

#. type: tbl table
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid "Notes"
msgstr ""

#. type: tbl table
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid "I<cl_args> field"
msgstr ""

#. type: tbl table
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid "flags & ~0xff"
msgstr ""

#. type: tbl table
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid "flags"
msgstr ""

#. type: tbl table
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid "For most flags; details below"
msgstr ""

#. type: tbl table
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid "parent_tid"
msgstr ""

#. type: tbl table
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid "pidfd"
msgstr ""

#. type: tbl table
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid "See CLONE_PIDFD"
msgstr ""

#. type: tbl table
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid "child_tid"
msgstr ""

#. type: tbl table
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid "See CLONE_CHILD_SETTID"
msgstr ""

#. type: tbl table
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid "See CLONE_PARENT_SETTID"
msgstr ""

#. type: tbl table
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid "flags & 0xff"
msgstr ""

#. type: tbl table
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid "exit_signal"
msgstr ""

#. type: tbl table
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid "stack"
msgstr ""

#. type: tbl table
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid "I<--->"
msgstr ""

#. type: tbl table
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid "stack_size"
msgstr ""

#. type: tbl table
#: archlinux debian-buster debian-unstable
#, fuzzy, no-wrap
#| msgid "Details"
msgid "tls"
msgstr "Details"

#. type: tbl table
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid "See CLONE_SETTLS"
msgstr ""

#. type: SS
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid "The child termination signal"
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid ""
#| "The low byte of I<flags> contains the number of the I<termination signal> "
#| "sent to the parent when the child dies.  If this signal is specified as "
#| "anything other than B<SIGCHLD>, then the parent process must specify the "
#| "B<__WALL> or B<__WCLONE> options when waiting for the child with "
#| "B<wait>(2).  If no signal is specified, then the parent process is not "
#| "signaled when the child terminates."
msgid ""
"When the child process terminates, a signal may be sent to the parent.  The "
"termination signal is specified in the low byte of I<flags> (B<clone>())  or "
"in I<cl_args.exit_signal> (B<clone3>()).  If this signal is specified as "
"anything other than B<SIGCHLD>, then the parent process must specify the "
"B<__WALL> or B<__WCLONE> options when waiting for the child with "
"B<wait>(2).  If no signal (i.e., zero) is specified, then the parent process "
"is not signaled when the child terminates."
msgstr ""
"L'octet de poids faible de I<flags> contient le numéro du signal qui sera "
"envoyé au père lorsque le processus fils se terminera. Si ce signal est "
"différent de B<SIGCHLD>, le processus parent doit également spécifier les "
"options B<__WALL> ou B<__WCLONE> lorsqu'il attend la fin du fils avec "
"B<wait>(2). Si aucun signal n'est indiqué, le processus parent ne sera pas "
"notifié de la terminaison du fils."

#. type: SS
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid "The flags mask"
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"Both B<clone>()  and B<clone3>()  allow a flags bit mask that modifies their "
"behavior and allows the caller to specify what is shared between the calling "
"process and the child process.  This bit mask\\(emthe I<flags> argument of "
"B<clone>()  or the I<cl_args.flags> field passed to B<clone3>()\\(emis "
"referred to as the I<flags> mask in the remainder of this page."
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"The I<flags> mask is specified as a bitwise-OR of zero or more of the "
"constants listed below.  Except as noted below, these flags are available "
"(and have the same effect) in both B<clone>()  and B<clone3>()."
msgstr ""

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<CLONE_CHILD_CLEARTID> (since Linux 2.5.49)"
msgstr "B<CLONE_CHILD_CLEARTID> (depuis Linux 2.5.49)"

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
msgid ""
"Clear (zero) the child thread ID at the location pointed to by I<child_tid> "
"(B<clone>())  or I<cl_args.child_tid> (B<clone3>())  in child memory when "
"the child exits, and do a wakeup on the futex at that address.  The address "
"involved may be changed by the B<set_tid_address>(2)  system call.  This is "
"used by threading libraries."
msgstr ""
"Effacer l'ID du thread enfant à I<ctid> dans la mémoire du fils lorsqu'il se "
"termine, et réveiller le futex à cette adresse. L'adresse concernée peut "
"être modifiée par l'appel système B<set_tid_address>(2). Cela est utilisé "
"dans les bibliothèques de gestion de threads."

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<CLONE_CHILD_SETTID> (since Linux 2.5.49)"
msgstr "B<CLONE_CHILD_SETTID> (depuis Linux 2.5.49)"

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"Store the child thread ID at the location pointed to by I<child_tid> "
"(B<clone>())  or I<cl_args.child_tid> (B<clone3>())  in the child's memory.  "
"The store operation completes before the clone call returns control to user "
"space in the child process.  (Note that the store operation may not have "
"completed before the clone call returns in the parent process, which will be "
"relevant if the B<CLONE_VM> flag is also employed.)"
msgstr ""

#. type: TP
#: archlinux debian-buster debian-unstable
#, fuzzy, no-wrap
#| msgid "B<CLONE_PTRACE> (since Linux 2.2)"
msgid "B<CLONE_DETACHED> (historical)"
msgstr "B<CLONE_PTRACE> (depuis Linux 2.2)"

#.  added in 2.5.32; removed in 2.6.0-test4
#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"For a while (during the Linux 2.5 development series)  there was a "
"B<CLONE_DETACHED> flag, which caused the parent not to receive a signal when "
"the child terminated.  Ultimately, the effect of this flag was subsumed "
"under the B<CLONE_THREAD> flag and by the time Linux 2.6.0 was released, "
"this flag had no effect.  Starting in Linux 2.6.2, the need to give this "
"flag together with B<CLONE_THREAD> disappeared."
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"This flag is still defined, but it is usually ignored when calling "
"B<clone>().  However, see the description of B<CLONE_PIDFD> for some "
"exceptions."
msgstr ""

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<CLONE_FILES> (since Linux 2.0)"
msgstr "B<CLONE_FILES> (depuis Linux 2.0)"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, fuzzy
msgid ""
"If B<CLONE_FILES> is set, the calling process and the child process share "
"the same file descriptor table.  Any file descriptor created by the calling "
"process or by the child process is also valid in the other process.  "
"Similarly, if one of the processes closes a file descriptor, or changes its "
"associated flags (using the B<fcntl>(2)  B<F_SETFD> operation), the other "
"process is also affected.  If a process sharing a file descriptor table "
"calls B<execve>(2), its file descriptor table is duplicated (unshared)."
msgstr ""
"Si l'attribut B<CLONE_FILES> est positionné, le processus appelant et le "
"processus fils partagent la même table des descripteurs de fichier. Tout "
"descripteur créé par un processus est également valide pour l'autre "
"processus. De même si un processus ferme un descripteur, ou modifie ses "
"attributs (en utilisant l'opération B<fcntl>(2) B<F_SETFD>), l'autre "
"processus en est aussi affecté."

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
msgid ""
"If B<CLONE_FILES> is not set, the child process inherits a copy of all file "
"descriptors opened in the calling process at the time of the clone call.  "
"Subsequent operations that open or close file descriptors, or change file "
"descriptor flags, performed by either the calling process or the child "
"process do not affect the other process.  Note, however, that the duplicated "
"file descriptors in the child refer to the same open file descriptions as "
"the corresponding file descriptors in the calling process, and thus share "
"file offsets and file status flags (see B<open>(2))."
msgstr ""
"Si B<CLONE_FILES> n'est pas positionné, le processus fils hérite d'une copie "
"des descripteurs de fichier ouverts par l'appelant au moment de l'appel "
"B<clone>(). (Les copies des descripteurs de fichier dans le fils sont "
"associées aux mêmes descriptions de fichiers ouverts (consultez B<open>(2)) "
"que les descripteurs de fichier correspondants dans le processus appelant.) "
"Les opérations effectuées ensuite sur un descripteur par un des processus "
"n'affectent pas l'autre processus."

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<CLONE_FS> (since Linux 2.0)"
msgstr "B<CLONE_FS> (depuis Linux 2.0)"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"If B<CLONE_FS> is set, the caller and the child process share the same "
"filesystem information.  This includes the root of the filesystem, the "
"current working directory, and the umask.  Any call to B<chroot>(2), "
"B<chdir>(2), or B<umask>(2)  performed by the calling process or the child "
"process also affects the other process."
msgstr ""
"Si l'attribut B<CLONE_FS> est positionné, le processus appelant et le "
"processus fils partagent les mêmes informations concernant le système de "
"fichiers. Ceci inclut la racine du système de fichiers, le répertoire de "
"travail, et l'umask. Tout appel à B<chroot>(2), B<chdir>(2) ou B<umask>(2) "
"effectué par un processus aura également influence sur l'autre processus."

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
msgid ""
"If B<CLONE_FS> is not set, the child process works on a copy of the "
"filesystem information of the calling process at the time of the clone "
"call.  Calls to B<chroot>(2), B<chdir>(2), or B<umask>(2)  performed later "
"by one of the processes do not affect the other process."
msgstr ""
"Si B<CLONE_FS> n'est pas choisi, le processus travaille sur une copie des "
"informations de l'appelant concernant le système de fichiers. Cette copie "
"est effectuée lors de l'invocation de B<clone>(). Les appels à B<chroot>(2), "
"B<chdir>(2), B<umask>(2) effectués par un processus n'affectent pas l'autre "
"processus."

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<CLONE_IO> (since Linux 2.6.25)"
msgstr "B<CLONE_IO> (depuis Linux 2.6.25)"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"If B<CLONE_IO> is set, then the new process shares an I/O context with the "
"calling process.  If this flag is not set, then (as with B<fork>(2))  the "
"new process has its own I/O context."
msgstr ""
"Si B<CLONE_IO> est défini, alors le nouveau processus partage un contexte "
"d'entrées-sorties avec le processus appelant. Si cet attribut n'est pas "
"défini, alors (comme pour B<fork>(2)) le nouveau processus a son propre "
"contexte d'entrées-sorties."

#.  The following based on text from Jens Axboe
#.  the anticipatory and CFQ scheduler
#.  with CFQ and AS.
#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, fuzzy
msgid ""
"The I/O context is the I/O scope of the disk scheduler (i.e., what the I/O "
"scheduler uses to model scheduling of a process's I/O).  If processes share "
"the same I/O context, they are treated as one by the I/O scheduler.  As a "
"consequence, they get to share disk time.  For some I/O schedulers, if two "
"processes share an I/O context, they will be allowed to interleave their "
"disk access.  If several threads are doing I/O on behalf of the same process "
"(B<aio_read>(3), for instance), they should employ B<CLONE_IO> to get better "
"I/O performance."
msgstr ""
"Le contexte d'entrées-sorties correspond à la visibilité que l'ordonnanceur "
"de disques a des entrées-sorties (c'est-à-dire, ce que l'ordonnanceur "
"d'entrée-sorties utilise pour modéliser l'ordonnancement des entrées-sorties "
"d'un processus). Si des processus partagent le même contexte d'entrées-"
"sorties, ils sont traités comme un seul par l'ordonnanceur d'entrées-"
"sorties. Par conséquent, ils partagent le même temps d'accès aux disques. "
"Pour certains ordonnanceurs d'entrées-sorties, si deux processus partagent "
"un contexte d'entrées-sorties, ils seront autorisés à intercaler leurs accès "
"disque. Si plusieurs threads utilisent des entrées-sorties pour le même "
"processus (B<aio_read>(3), par exemple), ils devraient utiliser B<CLONE_IO> "
"pour obtenir de meilleurs performances d'entrées-sorties."

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"If the kernel is not configured with the B<CONFIG_BLOCK> option, this flag "
"is a no-op."
msgstr ""
"Si le noyau n'a pas été configuré avec l'option B<CONFIG_BLOCK>, cet "
"attribut n'a aucun effet."

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<CLONE_NEWCGROUP> (since Linux 4.6)"
msgstr "B<CLONE_NEWCGROUP> (depuis Linux 4.6)"

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid ""
#| "If B<CLONE_NEWUSER> is set, then create the process in a new user "
#| "namespace.  If this flag is not set, then (as with B<fork>(2))  the "
#| "process is created in the same user namespace as the calling process."
msgid ""
"Create the process in a new cgroup namespace.  If this flag is not set, then "
"(as with B<fork>(2))  the process is created in the same cgroup namespaces "
"as the calling process."
msgstr ""
"Si B<CLONE_NEWUSER> est invoqué, alors le processus est créé dans un nouvel "
"espace de noms utilisateur. Si cet attribut n'est pas invoqué, alors (comme "
"pour B<fork>(2)) le processus est créé dans le même espace de noms "
"utilisateur que le processus appelant."

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, fuzzy
msgid ""
"For further information on cgroup namespaces, see B<cgroup_namespaces>(7)."
msgstr ""
"Pour plus d'informations sur les espaces de noms de montage, consultez "
"B<namespaces>(7)."

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, fuzzy
msgid ""
"Only a privileged process (B<CAP_SYS_ADMIN>)  can employ B<CLONE_NEWCGROUP>."
msgstr ""
"Seul un processus disposant de privilèges (B<CAP_SYS_ADMIN>) peut utiliser "
"B<CLONE_NEWUTS>."

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<CLONE_NEWIPC> (since Linux 2.6.19)"
msgstr "B<CLONE_NEWIPC> (depuis Linux 2.6.19)"

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid ""
#| "If B<CLONE_NEWUSER> is set, then create the process in a new user "
#| "namespace.  If this flag is not set, then (as with B<fork>(2))  the "
#| "process is created in the same user namespace as the calling process."
msgid ""
"If B<CLONE_NEWIPC> is set, then create the process in a new IPC namespace.  "
"If this flag is not set, then (as with B<fork>(2)), the process is created "
"in the same IPC namespace as the calling process."
msgstr ""
"Si B<CLONE_NEWUSER> est invoqué, alors le processus est créé dans un nouvel "
"espace de noms utilisateur. Si cet attribut n'est pas invoqué, alors (comme "
"pour B<fork>(2)) le processus est créé dans le même espace de noms "
"utilisateur que le processus appelant."

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid "For further information on IPC namespaces, see B<namespaces>(7)."
msgid "For further information on IPC namespaces, see B<ipc_namespaces>(7)."
msgstr ""
"Pour plus d'informations sur les espaces de noms IPC, reportez vous à "
"B<namespaces>(7)."

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"Only a privileged process (B<CAP_SYS_ADMIN>)  can employ B<CLONE_NEWIPC>.  "
"This flag can't be specified in conjunction with B<CLONE_SYSVSEM>."
msgstr ""
"Seul un processus disposant de privilèges (B<CAP_SYS_ADMIN>) peut utiliser "
"B<CLONE_NEWIPC>. Cet attribut ne peut pas être employé en association avec "
"B<CLONE_SYSVSEM>."

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<CLONE_NEWNET> (since Linux 2.6.24)"
msgstr "B<CLONE_NEWNET> (depuis Linux 2.6.24)"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"(The implementation of this flag was completed only by about kernel version "
"2.6.29.)"
msgstr ""
"(L'implémentation de cet attribut n'est complète que depuis le noyau 2.6.29.)"

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid ""
#| "If B<CLONE_NEWUSER> is set, then create the process in a new user "
#| "namespace.  If this flag is not set, then (as with B<fork>(2))  the "
#| "process is created in the same user namespace as the calling process."
msgid ""
"If B<CLONE_NEWNET> is set, then create the process in a new network "
"namespace.  If this flag is not set, then (as with B<fork>(2))  the process "
"is created in the same network namespace as the calling process."
msgstr ""
"Si B<CLONE_NEWUSER> est invoqué, alors le processus est créé dans un nouvel "
"espace de noms utilisateur. Si cet attribut n'est pas invoqué, alors (comme "
"pour B<fork>(2)) le processus est créé dans le même espace de noms "
"utilisateur que le processus appelant."

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid "For further information on IPC namespaces, see B<namespaces>(7)."
msgid ""
"For further information on network namespaces, see B<network_namespaces>(7)."
msgstr ""
"Pour plus d'informations sur les espaces de noms IPC, reportez vous à "
"B<namespaces>(7)."

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"Only a privileged process (B<CAP_SYS_ADMIN>)  can employ B<CLONE_NEWNET>."
msgstr ""
"Seul un processus disposant de privilèges (B<CAP_SYS_ADMIN>) peut appeler "
"B<CLONE_NEWNET>."

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<CLONE_NEWNS> (since Linux 2.4.19)"
msgstr "B<CLONE_NEWNS> (depuis Linux 2.4.19)"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"If B<CLONE_NEWNS> is set, the cloned child is started in a new mount "
"namespace, initialized with a copy of the namespace of the parent.  If "
"B<CLONE_NEWNS> is not set, the child lives in the same mount namespace as "
"the parent."
msgstr ""
"Si l'attribut B<CLONE_NEWNS> est invoqué, le fils cloné démarre dans un "
"nouvel espace de noms de montage, initialisé avec une copie de l'espace de "
"noms du père. Si B<CLONE_NEWNS> n'est pas invoqué, alors le fils existe dans "
"le même espace de noms de montage que le père."

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, fuzzy
msgid ""
"For further information on mount namespaces, see B<namespaces>(7)  and "
"B<mount_namespaces>(7)."
msgstr ""
"Pour plus d'informations sur les espaces de noms utilisateurs, consultez "
"B<namespaces>(7) et B<user_namespaces>(7)"

#.  See https://lwn.net/Articles/543273/
#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid ""
#| "Only a privileged process (B<CAP_SYS_ADMIN>)  can employ B<CLONE_NEWNS>.  "
#| "It is not permitted to specify both B<CLONE_NEWNS> and B<CLONE_FS> in the "
#| "same B<clone>()  call."
msgid ""
"Only a privileged process (B<CAP_SYS_ADMIN>)  can employ B<CLONE_NEWNS>.  It "
"is not permitted to specify both B<CLONE_NEWNS> and B<CLONE_FS> in the same "
"clone call."
msgstr ""
"Seul un processus disposant de privilèges (B<CAP_SYS_ADMIN>) peut utiliser "
"l'attribut B<CLONE_NEWNS>. Il n'est pas possible de spécifier à la fois "
"B<CLONE_NEWNS> et B<CLONE_FS> pour le même appel B<clone>()."

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<CLONE_NEWPID> (since Linux 2.6.24)"
msgstr "B<CLONE_NEWPID> (depuis Linux 2.6.24)"

#.  This explanation draws a lot of details from
#.  http://lwn.net/Articles/259217/
#.  Authors: Pavel Emelyanov <xemul@openvz.org>
#.  and Kir Kolyshkin <kir@openvz.org>
#.  The primary kernel commit is 30e49c263e36341b60b735cbef5ca37912549264
#.  Author: Pavel Emelyanov <xemul@openvz.org>
#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid ""
#| "If B<CLONE_NEWUSER> is set, then create the process in a new user "
#| "namespace.  If this flag is not set, then (as with B<fork>(2))  the "
#| "process is created in the same user namespace as the calling process."
msgid ""
"If B<CLONE_NEWPID> is set, then create the process in a new PID namespace.  "
"If this flag is not set, then (as with B<fork>(2))  the process is created "
"in the same PID namespace as the calling process."
msgstr ""
"Si B<CLONE_NEWUSER> est invoqué, alors le processus est créé dans un nouvel "
"espace de noms utilisateur. Si cet attribut n'est pas invoqué, alors (comme "
"pour B<fork>(2)) le processus est créé dans le même espace de noms "
"utilisateur que le processus appelant."

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, fuzzy
msgid ""
"For further information on PID namespaces, see B<namespaces>(7)  and "
"B<pid_namespaces>(7)."
msgstr ""
"Pour plus d'informations sur les espaces de noms de PID, consultez "
"B<namespaces>(7) et B<pid_namespaces>(7)"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"Only a privileged process (B<CAP_SYS_ADMIN>)  can employ B<CLONE_NEWPID>.  "
"This flag can't be specified in conjunction with B<CLONE_THREAD> or "
"B<CLONE_PARENT>."
msgstr ""
"Seul un processus disposant de privilèges (B<CAP_SYS_ADMIN>) peut utiliser "
"B<CLONE_NEWPID>. Cet attribut ne peut être utilisé en association avec "
"B<CLONE_THREAD> ou avec B<CLONE_PARENT>."

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<CLONE_NEWUSER>"
msgstr "B<CLONE_NEWUSER>"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, fuzzy
msgid ""
"(This flag first became meaningful for B<clone>()  in Linux 2.6.23, the "
"current B<clone>()  semantics were merged in Linux 3.5, and the final pieces "
"to make the user namespaces completely usable were merged in Linux 3.8.)"
msgstr ""
"(Cet attribut est apparu dans B<clone>() pour la première fois dans Linux "
"2.6.23, les sémantiques actuelles de B<clone>() ont été ajoutées dans Linux "
"3.5, et les derniers modules rendant les espaces de noms utilisateur "
"complètement opérationnels sont apparus dans Linux 3.8.)"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"If B<CLONE_NEWUSER> is set, then create the process in a new user "
"namespace.  If this flag is not set, then (as with B<fork>(2))  the process "
"is created in the same user namespace as the calling process."
msgstr ""
"Si B<CLONE_NEWUSER> est invoqué, alors le processus est créé dans un nouvel "
"espace de noms utilisateur. Si cet attribut n'est pas invoqué, alors (comme "
"pour B<fork>(2)) le processus est créé dans le même espace de noms "
"utilisateur que le processus appelant."

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, fuzzy
msgid ""
"For further information on user namespaces, see B<namespaces>(7)  and "
"B<user_namespaces>(7)."
msgstr ""
"Pour plus d'informations sur les espaces de noms utilisateurs, consultez "
"B<namespaces>(7) et B<user_namespaces>(7)"

#.  Before Linux 2.6.29, it appears that only CAP_SYS_ADMIN was needed
#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"Before Linux 3.8, use of B<CLONE_NEWUSER> required that the caller have "
"three capabilities: B<CAP_SYS_ADMIN>, B<CAP_SETUID>, and B<CAP_SETGID>.  "
"Starting with Linux 3.8, no privileges are needed to create a user namespace."
msgstr ""
"Avant Linux 3.8, les processus appelant devait disposer de trois capacités "
"pour utiliser B<CLONE_NEWUSER> :  B<CAP_SYS_ADMIN>, B<CAP_SETUID> et "
"B<CAP_SETGID>.  À partir de Linux 3.8, il n'est plus nécessaire de disposer "
"de privilèges pour créer des espaces de noms utilisateur."

#.  commit e66eded8309ebf679d3d3c1f5820d1f2ca332c71
#.  https://lwn.net/Articles/543273/
#.  The fix actually went into 3.9 and into 3.8.3. However, user namespaces
#.  were, for practical purposes, unusable in earlier 3.8.x because of the
#.  various filesystems that didn't support userns.
#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"This flag can't be specified in conjunction with B<CLONE_THREAD> or "
"B<CLONE_PARENT>.  For security reasons, B<CLONE_NEWUSER> cannot be specified "
"in conjunction with B<CLONE_FS>."
msgstr ""
"Cet attribut ne peut être utilisé en association avec B<CLONE_THREAD> ou "
"avec B<CLONE_PARENT>. Pour des raisons de sécurité, B<CLONE_NEWUSER> ne peut "
"pas être utilisé en association avec B<CLONE_FS>."

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<CLONE_NEWUTS> (since Linux 2.6.19)"
msgstr "B<CLONE_NEWUTS> (depuis Linux 2.6.19)"

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid ""
#| "If B<CLONE_NEWUTS> is set, then create the process in a new UTS "
#| "namespace, whose identifiers are initialized by duplicating the "
#| "identifiers from the UTS namespace of the calling process.  If this flag "
#| "is not set, then (as with B<fork>(2))  the process is created in the same "
#| "UTS namespace as the calling process.  This flag is intended for the "
#| "implementation of containers."
msgid ""
"If B<CLONE_NEWUTS> is set, then create the process in a new UTS namespace, "
"whose identifiers are initialized by duplicating the identifiers from the "
"UTS namespace of the calling process.  If this flag is not set, then (as "
"with B<fork>(2))  the process is created in the same UTS namespace as the "
"calling process."
msgstr ""
"Si B<CLONE_NEWUTS> est défini, alors créer le processus dans un nouvel "
"espace de noms de UTS, dont les identifiants sont initialisés en dupliquant "
"les identifiants de l'espace de noms UTS du processus appelant. Si cet "
"attribut n'est pas défini, alors (comme pour B<fork>(2)) le processus est "
"créé dans le même espace de noms UTS que le processus appelant. Cet attribut "
"est sensé être utilisé pour l'implémentation de conteneurs."

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid "For further information on UTS namespaces, see B<namespaces>(7)."
msgid "For further information on UTS namespaces, see B<uts_namespaces>(7)."
msgstr ""
"Pour obtenir plus d'informations sur les espaces de noms UTS, consultez "
"B<namespaces>(7)."

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"Only a privileged process (B<CAP_SYS_ADMIN>)  can employ B<CLONE_NEWUTS>."
msgstr ""
"Seul un processus disposant de privilèges (B<CAP_SYS_ADMIN>) peut utiliser "
"B<CLONE_NEWUTS>."

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<CLONE_PARENT> (since Linux 2.3.12)"
msgstr "B<CLONE_PARENT> (depuis Linux 2.3.12)"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"If B<CLONE_PARENT> is set, then the parent of the new child (as returned by "
"B<getppid>(2))  will be the same as that of the calling process."
msgstr ""
"Si B<CLONE_PARENT> est présent, le père du nouveau fils (comme il est "
"indiqué par B<getppid>(2)) sera le même que celui du processus appelant."

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"If B<CLONE_PARENT> is not set, then (as with B<fork>(2))  the child's parent "
"is the calling process."
msgstr ""
"Si B<CLONE_PARENT> n'est pas fourni, alors (comme pour B<fork>(2)) le père "
"du processus fils sera le processus appelant."

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"Note that it is the parent process, as returned by B<getppid>(2), which is "
"signaled when the child terminates, so that if B<CLONE_PARENT> is set, then "
"the parent of the calling process, rather than the calling process itself, "
"will be signaled."
msgstr ""
"Remarquez que c'est le processus père, tel qu'indiqué par B<getppid>(2), qui "
"est notifié lors de la fin du fils. Ainsi, si B<CLONE_PARENT> est présent, "
"alors c'est le père du processus appelant, et non ce dernier, qui sera "
"notifié."

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<CLONE_PARENT_SETTID> (since Linux 2.5.49)"
msgstr "B<CLONE_PARENT_SETTID> (depuis Linux 2.5.49)"

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
msgid ""
"Store the child thread ID at the location pointed to by I<parent_tid> "
"(B<clone>())  or I<cl_args.child_tid> (B<clone3>())  in the parent's "
"memory.  (In Linux 2.5.32-2.5.48 there was a flag B<CLONE_SETTID> that did "
"this.)  The store operation completes before the clone call returns control "
"to user space."
msgstr ""
"Enregistrer l'ID du thread enfant à I<ptid> dans la mémoire du père et du "
"fils. (Dans Linux 2.5.32-2.5.48 il y a un attribut B<CLONE_SETTID> qui fait "
"cela.)"

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, fuzzy, no-wrap
msgid "B<CLONE_PID> (Linux 2.0 to 2.5.15)"
msgstr "B<CLONE_IO> (depuis Linux 2.6.25)"

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
msgid ""
"If B<CLONE_PID> is set, the child process is created with the same process "
"ID as the calling process.  This is good for hacking the system, but "
"otherwise of not much use.  From Linux 2.3.21 onward, this flag could be "
"specified only by the system boot process (PID 0).  The flag disappeared "
"completely from the kernel sources in Linux 2.5.16.  Subsequently, the "
"kernel silently ignored this bit if it was specified in the I<flags> mask.  "
"Much later, the same bit was recycled for use as the B<CLONE_PIDFD> flag."
msgstr ""
"Si l'attribut B<CLONE_PID> est positionné, les processus appelant et fils "
"ont le même numéro de processus. C'est bien pour hacker le système, mais "
"autrement il n'est plus utilisé. Depuis 2.3.21, cet attribut ne peut être "
"utilisé que par le processus de démarrage du système (PID 0). Il a disparu "
"dans Linux 2.5.16."

#. type: TP
#: archlinux debian-buster debian-unstable
#, fuzzy, no-wrap
#| msgid "B<CLONE_NEWPID> (since Linux 3.8)"
msgid "B<CLONE_PIDFD> (since Linux 5.2)"
msgstr "B<CLONE_NEWPID> (depuis Linux 3.8)"

#.  commit b3e5838252665ee4cfa76b82bdf1198dca81e5be
#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"If this flag is specified, a PID file descriptor referring to the child "
"process is allocated and placed at a specified location in the parent's "
"memory.  The close-on-exec flag is set on this new file descriptor.  PID "
"file descriptors can be used for the purposes described in B<pidfd_open>(2)."
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"When using B<clone3>(), the PID file descriptor is placed at the location "
"pointed to by I<cl_args.pidfd>."
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"When using B<clone>(), the PID file descriptor is placed at the location "
"pointed to by I<parent_tid>.  Since the I<parent_tid> argument is used to "
"return the PID file descriptor, B<CLONE_PIDFD> cannot be used with "
"B<CLONE_PARENT_SETTID> when calling B<clone>()."
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"It is currently not possible to use this flag together with B<CLONE_THREAD.> "
"This means that the process identified by the PID file descriptor will "
"always be a thread group leader."
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"If the obsolete B<CLONE_DETACHED> flag is specified alongside B<CLONE_PIDFD> "
"when calling B<clone>(), an error is returned.  An error also results if "
"B<CLONE_DETACHED> is specified when calling B<clone3>().  This error "
"behavior ensures that the bit corresponding to B<CLONE_DETACHED> can be "
"reused for further PID file descriptor features in the future."
msgstr ""

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<CLONE_PTRACE> (since Linux 2.2)"
msgstr "B<CLONE_PTRACE> (depuis Linux 2.2)"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"If B<CLONE_PTRACE> is specified, and the calling process is being traced, "
"then trace the child also (see B<ptrace>(2))."
msgstr ""
"Si l'attribut B<CLONE_PTRACE> est positionné et si l'appelant est suivi par "
"un débogueur, alors le fils sera également suivi (consultez B<ptrace>(2))."

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<CLONE_SETTLS> (since Linux 2.5.32)"
msgstr "B<CLONE_SETTLS> (depuis Linux 2.5.32)"

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
msgid "The TLS (Thread Local Storage) descriptor is set to I<tls>."
msgstr ""
"Le paramètre I<newtls> est le nouveau descripteur TLS (Thread Local "
"Storage). (Consultez B<set_thread_area>(2).)"

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"The interpretation of I<tls> and the resulting effect is architecture "
"dependent.  On x86, I<tls> is interpreted as a I<struct user_desc\\ *> (see "
"B<set_thread_area>(2)).  On x86-64 it is the new value to be set for the %fs "
"base register (see the B<ARCH_SET_FS> argument to B<arch_prctl>(2)).  On "
"architectures with a dedicated TLS register, it is the new value of that "
"register."
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"Use of this flag requires detailed knowledge and generally it should not be "
"used except in libraries implementing threading."
msgstr ""

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<CLONE_SIGHAND> (since Linux 2.0)"
msgstr "B<CLONE_SIGHAND> (depuis Linux 2.0)"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, fuzzy
msgid ""
"If B<CLONE_SIGHAND> is set, the calling process and the child process share "
"the same table of signal handlers.  If the calling process or child process "
"calls B<sigaction>(2)  to change the behavior associated with a signal, the "
"behavior is changed in the other process as well.  However, the calling "
"process and child processes still have distinct signal masks and sets of "
"pending signals.  So, one of them may block or unblock signals using "
"B<sigprocmask>(2)  without affecting the other process."
msgstr ""
"Si l'attribut B<CLONE_SIGHAND> est positionné, le processus appelant et le "
"processus fils partagent la même table des gestionnaires de signaux. Si "
"l'appelant, ou le fils, appelle B<sigaction>(2) pour modifier le "
"comportement associé à un signal, ce comportement est également changé pour "
"l'autre processus. Néanmoins, l'appelant et le fils ont toujours des masques "
"de signaux distincts, et leurs ensembles de signaux bloqués sont "
"indépendants. L'un des processus peut donc bloquer un signal en utilisant "
"B<sigprocmask>(2) sans affecter l'autre processus."

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid ""
#| "If B<CLONE_SIGHAND> is not set, the child process inherits a copy of the "
#| "signal handlers of the calling process at the time B<clone>()  is "
#| "called.  Calls to B<sigaction>(2)  performed later by one of the "
#| "processes have no effect on the other process."
msgid ""
"If B<CLONE_SIGHAND> is not set, the child process inherits a copy of the "
"signal handlers of the calling process at the time of the clone call.  Calls "
"to B<sigaction>(2)  performed later by one of the processes have no effect "
"on the other process."
msgstr ""
"Si B<CLONE_SIGHAND> n'est pas utilisé, le processus fils hérite d'une copie "
"des gestionnaires de signaux de l'appelant lors de l'invocation de "
"B<clone>(). Les appels à B<sigaction>(2) effectués ensuite depuis un "
"processus n'ont pas d'effets sur l'autre processus."

#.  Precisely: Linux 2.6.0-test6
#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
msgid ""
"Since Linux 2.6.0, the I<flags> mask must also include B<CLONE_VM> if "
"B<CLONE_SIGHAND> is specified"
msgstr ""
"Depuis Linux 2.6.0-test6, l'attribut B<CLONE_VM> doit également être "
"spécifié dans I<flags> si B<CLONE_SIGHAND> l'est."

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, fuzzy, no-wrap
msgid "B<CLONE_STOPPED> (since Linux 2.6.0)"
msgstr "B<CLONE_STOPPED> (depuis Linux 2.6.0-test2)"

#.  Precisely: Linux 2.6.0-test2
#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"If B<CLONE_STOPPED> is set, then the child is initially stopped (as though "
"it was sent a B<SIGSTOP> signal), and must be resumed by sending it a "
"B<SIGCONT> signal."
msgstr ""
"Si l'attribut B<CLONE_STOPPED> est positionné, le fils est initialement "
"stoppé (comme s'il avait reçu le signal B<SIGSTOP>), et doit être relancé en "
"lui envoyant le signal B<SIGCONT>."

#.  glibc 2.8 removed this defn from bits/sched.h
#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"This flag was I<deprecated> from Linux 2.6.25 onward, and was I<removed> "
"altogether in Linux 2.6.38.  Since then, the kernel silently ignores it "
"without error.  Starting with Linux 4.6, the same bit was reused for the "
"B<CLONE_NEWCGROUP> flag."
msgstr ""

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<CLONE_SYSVSEM> (since Linux 2.5.10)"
msgstr "B<CLONE_SYSVSEM> (depuis Linux 2.5.10)"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"If B<CLONE_SYSVSEM> is set, then the child and the calling process share a "
"single list of System V semaphore adjustment (I<semadj>)  values (see "
"B<semop>(2)).  In this case, the shared list accumulates I<semadj> values "
"across all processes sharing the list, and semaphore adjustments are "
"performed only when the last process that is sharing the list terminates (or "
"ceases sharing the list using B<unshare>(2)).  If this flag is not set, then "
"the child has a separate I<semadj> list that is initially empty."
msgstr ""
"Si B<CLONE_SYSVSEM> est positionné, le fils et le processus appelant "
"partagent la même liste de compteurs «\\ undo\\ » pour les sémaphores "
"System V (consultez B<semop>(2)). Dans ce cas, cette liste regroupe toutes "
"les valeurs I<semadj> des processus partageant cette liste, et les "
"modifications des sémaphores sont effectuées seulement lorsque le dernier "
"processus de la liste se termine (ou cesse de partager la liste en invoquant "
"B<unshare>(2)). Si cet attribut n'est pas utilisé, le fils a une liste «\\ "
"undo\\ » séparée, initialement vide."

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, fuzzy, no-wrap
msgid "B<CLONE_THREAD> (since Linux 2.4.0)"
msgstr "B<CLONE_THREAD> (depuis Linux 2.4.0-test8)"

#.  Precisely: Linux 2.6.0-test8
#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"If B<CLONE_THREAD> is set, the child is placed in the same thread group as "
"the calling process.  To make the remainder of the discussion of "
"B<CLONE_THREAD> more readable, the term \"thread\" is used to refer to the "
"processes within a thread group."
msgstr ""
"Si B<CLONE_THREAD> est présent, le fils est placé dans le même groupe de "
"threads que le processus appelant. Afin de rendre l'explication de "
"B<CLONE_THREAD> plus lisible, le terme «\\ thread\\ » est utilisé pour "
"parler des processus dans un même groupe de threads."

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"Thread groups were a feature added in Linux 2.4 to support the POSIX threads "
"notion of a set of threads that share a single PID.  Internally, this shared "
"PID is the so-called thread group identifier (TGID) for the thread group.  "
"Since Linux 2.4, calls to B<getpid>(2)  return the TGID of the caller."
msgstr ""
"Les groupes de threads sont une fonctionnalité ajoutées dans Linux 2.4 pour "
"supporter la notion POSIX d'ensemble de threads partageant un même PID. En "
"interne, ce PID partagé est appelé identifiant de groupe de threads (TGID)."
"Depuis Linux 2.4, l'appel B<getpid>(2) renvoie l'identifiant du groupe de "
"thread de l'appelant."

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid ""
#| "The threads within a group can be distinguished by their (system-wide)  "
#| "unique thread IDs (TID).  A new thread's TID is available as the function "
#| "result returned to the caller of B<clone>(), and a thread can obtain its "
#| "own TID using B<gettid>(2)."
msgid ""
"The threads within a group can be distinguished by their (system-wide)  "
"unique thread IDs (TID).  A new thread's TID is available as the function "
"result returned to the caller, and a thread can obtain its own TID using "
"B<gettid>(2)."
msgstr ""
"Les threads dans un groupe peuvent être distingués par leur identifiant de "
"thread (TID, unique sur le système). Le TID d'un nouveau thread est renvoyé "
"par B<clone>() au processus appelant, et un thread peut obtenir son propre "
"TID en utilisant B<gettid>(2)."

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid ""
#| "When a call is made to B<clone>()  without specifying B<CLONE_THREAD>, "
#| "then the resulting thread is placed in a new thread group whose TGID is "
#| "the same as the thread's TID.  This thread is the I<leader> of the new "
#| "thread group."
msgid ""
"When a clone call is made without specifying B<CLONE_THREAD>, then the "
"resulting thread is placed in a new thread group whose TGID is the same as "
"the thread's TID.  This thread is the I<leader> of the new thread group."
msgstr ""
"Quand B<clone>() est appelé sans positionner B<CLONE_THREAD>, le nouveau "
"thread est placé dans un nouveau groupe de thread dont le TGID est identique "
"au TID du nouveau thread. Ce thread est le I<leader> du nouveau groupe."

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid ""
#| "A new thread created with B<CLONE_THREAD> has the same parent process as "
#| "the caller of B<clone>()  (i.e., like B<CLONE_PARENT>), so that calls to "
#| "B<getppid>(2)  return the same value for all of the threads in a thread "
#| "group.  When a B<CLONE_THREAD> thread terminates, the thread that created "
#| "it using B<clone>()  is not sent a B<SIGCHLD> (or other termination) "
#| "signal; nor can the status of such a thread be obtained using "
#| "B<wait>(2).  (The thread is said to be I<detached>.)"
msgid ""
"A new thread created with B<CLONE_THREAD> has the same parent process as the "
"process that made the clone call (i.e., like B<CLONE_PARENT>), so that calls "
"to B<getppid>(2)  return the same value for all of the threads in a thread "
"group.  When a B<CLONE_THREAD> thread terminates, the thread that created it "
"is not sent a B<SIGCHLD> (or other termination) signal; nor can the status "
"of such a thread be obtained using B<wait>(2).  (The thread is said to be "
"I<detached>.)"
msgstr ""
"Un nouveau thread créé en utilisant B<CLONE_THREAD> a le même processus père "
"que l'appelant de B<clone>() (de même qu'avec B<CLONE_PARENT>), ainsi les "
"appels à B<getppid>(2) renvoient la même valeur à tous les threads dans un "
"même groupe. Lorsqu'un thread créé avec B<CLONE_THREAD> termine, le thread "
"qui a appelé B<clone>() pour le créer ne reçoit pas le signal B<SIGCHLD> (ou "
"autre notification de terminaison)\\ ; de même, l'état d'un tel thread ne "
"peut être obtenu par B<wait>(2). Le thread est dit I<détaché>."

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"After all of the threads in a thread group terminate the parent process of "
"the thread group is sent a B<SIGCHLD> (or other termination) signal."
msgstr ""
"Lorsque tous les threads d'un groupe de threads terminent, le processus "
"parent du groupe reçoit un signal B<SIGCHLD> (ou autre indicateur de "
"terminaison)."

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"If any of the threads in a thread group performs an B<execve>(2), then all "
"threads other than the thread group leader are terminated, and the new "
"program is executed in the thread group leader."
msgstr ""
"Si l'un des threads dans un groupe de threads appelle B<execve>(2), tous les "
"threads sauf le leader sont tués, et le nouveau programme est exécuté dans "
"le leader du groupe de threads."

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"If one of the threads in a thread group creates a child using B<fork>(2), "
"then any thread in the group can B<wait>(2)  for that child."
msgstr ""
"Si l'un des threads dans un groupe crée un fils avec B<fork>(2), n'importe "
"lequel des threads du groupe peut utiliser B<wait>(2) sur ce fils."

#.  Precisely: Linux 2.6.0-test6
#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
msgid ""
"Since Linux 2.5.35, the I<flags> mask must also include B<CLONE_SIGHAND> if "
"B<CLONE_THREAD> is specified (and note that, since Linux 2.6.0, "
"B<CLONE_SIGHAND> also requires B<CLONE_VM> to be included)."
msgstr ""
"Depuis Linux 2.5.35, l'attribut B<CLONE_SIGHAND> de I<flags> doit être "
"positionné si B<CLONE_THREAD> l'est. Depuis Linux 2.6.0-test6, "
"B<CLONE_SIGHAND> a également besoin de B<CLONE_THREAD>."

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"Signal dispositions and actions are process-wide: if an unhandled signal is "
"delivered to a thread, then it will affect (terminate, stop, continue, be "
"ignored in)  all members of the thread group."
msgstr ""
"Les gestions de signaux sont définies au niveau des processus\\ : si un "
"signal sans gestionnaire est reçu par un thread, il affectera (tuera, "
"stoppera, relancera, ou sera ignoré par) tous les membres du groupe de "
"threads."

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid "Each thread has its own signal mask, as set by B<sigprocmask>(2)."
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"A signal may be process-directed or thread-directed.  A process-directed "
"signal is targeted at a thread group (i.e., a TGID), and is delivered to an "
"arbitrarily selected thread from among those that are not blocking the "
"signal.  A signal may be process-directed because it was generated by the "
"kernel for reasons other than a hardware exception, or because it was sent "
"using B<kill>(2)  or B<sigqueue>(3).  A thread-directed signal is targeted "
"at (i.e., delivered to)  a specific thread.  A signal may be thread directed "
"because it was sent using B<tgkill>(2)  or B<pthread_sigqueue>(3), or "
"because the thread executed a machine language instruction that triggered a "
"hardware exception (e.g., invalid memory access triggering B<SIGSEGV> or a "
"floating-point exception triggering B<SIGFPE>)."
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"A call to B<sigpending>(2)  returns a signal set that is the union of the "
"pending process-directed signals and the signals that are pending for the "
"calling thread."
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, fuzzy
msgid ""
"If a process-directed signal is delivered to a thread group, and the thread "
"group has installed a handler for the signal, then the handler will be "
"invoked in exactly one, arbitrarily selected member of the thread group that "
"has not blocked the signal.  If multiple threads in a group are waiting to "
"accept the same signal using B<sigwaitinfo>(2), the kernel will arbitrarily "
"select one of these threads to receive the signal."
msgstr ""
"Si B<kill>(2) est utilisé pour envoyer un signal à un groupe de threads, et "
"si le groupe a installé un gestionnaire pour ce signal, alors le "
"gestionnaire sera exécuté dans exactement un des membres du groupe de "
"threads, choisi de façon arbitraire parmi ceux qui n'ont pas bloqué ce "
"signal. Si plusieurs threads dans un groupe attendent le même signal en "
"utilisant B<sigwaitinfo>(2), le noyau choisira arbitrairement l'un d'entre "
"eux pour délivrer le signal envoyé par B<kill>(2)."

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<CLONE_UNTRACED> (since Linux 2.5.46)"
msgstr "B<CLONE_UNTRACED> (depuis Linux 2.5.46)"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"If B<CLONE_UNTRACED> is specified, then a tracing process cannot force "
"B<CLONE_PTRACE> on this child process."
msgstr ""
"Si l'attribut B<CLONE_UNTRACED> est positionné, alors un processus traçant "
"le père ne peut pas forcer B<CLONE_PTRACE> pour ce fils."

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<CLONE_VFORK> (since Linux 2.2)"
msgstr "B<CLONE_VFORK> (depuis Linux 2.2)"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"If B<CLONE_VFORK> is set, the execution of the calling process is suspended "
"until the child releases its virtual memory resources via a call to "
"B<execve>(2)  or B<_exit>(2)  (as with B<vfork>(2))."
msgstr ""
"Si le bit B<CLONE_VFORK> est actif, l'exécution du processus appelant est "
"suspendue jusqu'à ce que le fils libère ses ressources de mémoire virtuelle "
"par un appel B<execve>(2) ou B<_exit>(2) (comme avec B<vfork>(2))."

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"If B<CLONE_VFORK> is not set, then both the calling process and the child "
"are schedulable after the call, and an application should not rely on "
"execution occurring in any particular order."
msgstr ""
"Si B<CLONE_VFORK> n'est pas indiqué, alors les deux processus sont "
"ordonnancés à partir de la fin de l'appel, et l'application ne doit pas "
"considérer que l'ordre d'exécution soit déterminé."

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<CLONE_VM> (since Linux 2.0)"
msgstr "B<CLONE_VM> (depuis Linux 2.0)"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"If B<CLONE_VM> is set, the calling process and the child process run in the "
"same memory space.  In particular, memory writes performed by the calling "
"process or by the child process are also visible in the other process.  "
"Moreover, any memory mapping or unmapping performed with B<mmap>(2)  or "
"B<munmap>(2)  by the child or calling process also affects the other process."
msgstr ""
"Si le bit B<CLONE_VM> est actif, le processus appelant et le processus fils "
"s'exécutent dans le même espace mémoire. En particulier, les écritures en "
"mémoire effectuées par l'un des processus sont visibles par l'autre. De même "
"toute projection en mémoire, ou toute suppression de projection, effectuées "
"avec B<mmap>(2) ou B<munmap>(2) par l'un des processus affectera également "
"l'autre processus."

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid ""
#| "If B<CLONE_VM> is not set, the child process runs in a separate copy of "
#| "the memory space of the calling process at the time of B<clone>().  "
#| "Memory writes or file mappings/unmappings performed by one of the "
#| "processes do not affect the other, as with B<fork>(2)."
msgid ""
"If B<CLONE_VM> is not set, the child process runs in a separate copy of the "
"memory space of the calling process at the time of the clone call.  Memory "
"writes or file mappings/unmappings performed by one of the processes do not "
"affect the other, as with B<fork>(2)."
msgstr ""
"Si B<CLONE_VM> n'est pas actif, le processus fils utilisera une copie "
"distincte de l'espace mémoire de l'appelant. Le cliché est réalisé lors de "
"l'invocation de B<clone>(). Les écritures ou les projections de fichiers en "
"mémoire effectuées par un processus n'affectent pas l'autre processus, comme "
"cela se passe avec B<fork>(2)."

#. type: SH
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "NOTES"
msgstr "NOTES"

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
msgid ""
"One use of these systems calls is to implement threads: multiple flows of "
"control in a program that run concurrently in a shared address space."
msgstr ""
"L'appel système B<clone>() est principalement utilisé pour permettre "
"l'implémentation des threads\\ : un programme est scindé en plusieurs lignes "
"de contrôle, s'exécutant simultanément dans un espace mémoire partagée."

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"Glibc does not provide a wrapper for B<clone3>(); call it using "
"B<syscall>(2)."
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"Note that the glibc B<clone>()  wrapper function makes some changes in the "
"memory pointed to by I<stack> (changes required to set the stack up "
"correctly for the child)  I<before> invoking the B<clone>()  system call.  "
"So, in cases where B<clone>()  is used to recursively create children, do "
"not use the buffer employed for the parent's stack as the stack of the child."
msgstr ""

#. type: SS
#: archlinux debian-buster debian-unstable mageia-cauldron
#, fuzzy, no-wrap
msgid "C library/kernel differences"
msgstr "Différences entre les ABI du noyau et le bibliothèque C "

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, fuzzy
msgid ""
"The raw B<clone>()  system call corresponds more closely to B<fork>(2)  in "
"that execution in the child continues from the point of the call.  As such, "
"the I<fn> and I<arg> arguments of the B<clone>()  wrapper function are "
"omitted."
msgstr ""
"L'appel système B<clone> ressemble plus à B<fork>(2), en ceci que "
"l'exécution dans le processus fils continue à partir du point d'appel. À ce "
"titre, les arguments I<fn> et I<arg> de la fonction d'enrobage de B<clone>() "
"sont omis. De plus, l'ordre des arguments change. L'interface de l'appel "
"système brut sur x86 et sur plusieurs autres architectures est à peu près :"

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
msgid ""
"In contrast to the glibc wrapper, the raw B<clone>()  system call accepts "
"NULL as a I<stack> argument (and B<clone3>()  likewise allows I<cl_args."
"stack> to be NULL).  In this case, the child uses a duplicate of the "
"parent's stack.  (Copy-on-write semantics ensure that the child gets "
"separate copies of stack pages when either process modifies the stack.)  In "
"this case, for correct operation, the B<CLONE_VM> option should not be "
"specified.  (If the child I<shares> the parent's memory because of the use "
"of the B<CLONE_VM> flag, then no copy-on-write duplication occurs and chaos "
"is likely to result.)"
msgstr ""
"Une autre différence\\ : pour l'appel système brut, l'argument "
"I<child_stack> peut être nul, puisque la sémantique de copie-en-écriture "
"assure que le fils recevra une copie indépendante des pages de la pile dès "
"qu'un des deux processus la modifiera. Pour que cela fonctionne, il faut "
"naturellement que B<CLONE_VM> ne soit pas présent."

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"The order of the arguments also differs in the raw system call, and there "
"are variations in the arguments across architectures, as detailed in the "
"following paragraphs."
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"The raw system call interface on x86-64 and some other architectures "
"(including sh, tile, and alpha) is:"
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy, no-wrap
msgid ""
"B<long clone(unsigned long >I<flags>B<, void *>I<stack>B<,>\n"
"B<           int *>I<parent_tid>B<, int *>I<child_tid>B<,>\n"
"B<           unsigned long >I<tls>B<);>\n"
msgstr ""
"B<long clone(unsigned long >I<flags>B<, void *>I<child_stack>B<,>\n"
"B<           void * >I<ptid>B<, void *>I<ctid>B<,>\n"
"B<           struct pt_regs *>I<regs>B<);>\n"

#.  CONFIG_CLONE_BACKWARDS
#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"On x86-32, and several other common architectures (including score, ARM, ARM "
"64, PA-RISC, arc, Power PC, xtensa, and MIPS), the order of the last two "
"arguments is reversed:"
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy, no-wrap
msgid ""
"B<long clone(unsigned long >I<flags>B<, void *>I<stack>B<,>\n"
"B<          int *>I<parent_tid>B<, unsigned long >I<tls>B<,>\n"
"B<          int *>I<child_tid>B<);>\n"
msgstr ""
"B<long clone(unsigned long >I<flags>B<, void *>I<child_stack>B<,>\n"
"B<          void *>I<ptid>B<, void *>I<ctid>B<,>\n"
"B<          struct pt_regs *>I<regs>B<);>\n"

#.  CONFIG_CLONE_BACKWARDS2
#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"On the cris and s390 architectures, the order of the first two arguments is "
"reversed:"
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy, no-wrap
msgid ""
"B<long clone(void *>I<stack>B<, unsigned long >I<flags>B<,>\n"
"B<           int *>I<parent_tid>B<, int *>I<child_tid>B<,>\n"
"B<           unsigned long >I<tls>B<);>\n"
msgstr ""
"B<long clone(unsigned long >I<flags>B<, void *>I<child_stack>B<,>\n"
"B<           void * >I<ptid>B<, void *>I<ctid>B<,>\n"
"B<           struct pt_regs *>I<regs>B<);>\n"

#.  CONFIG_CLONE_BACKWARDS3
#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid "On the microblaze architecture, an additional argument is supplied:"
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy, no-wrap
msgid ""
"B<long clone(unsigned long >I<flags>B<, void *>I<stack>B<,>\n"
"B<           int >I<stack_size>B<,>         /* Size of stack */\n"
"B<           int *>I<parent_tid>B<, int *>I<child_tid>B<,>\n"
"B<           unsigned long >I<tls>B<);>\n"
msgstr ""
"B<long clone(unsigned long >I<flags>B<, void *>I<child_stack>B<,>\n"
"B<           void * >I<ptid>B<, void *>I<ctid>B<,>\n"
"B<           struct pt_regs *>I<regs>B<);>\n"

#. type: SS
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "blackfin, m68k, and sparc"
msgstr "blackfin, m68k, et sparc"

#.  Mike Frysinger noted in a 2013 mail:
#.      these arches don't define __ARCH_WANT_SYS_CLONE:
#.      blackfin ia64 m68k sparc
#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"The argument-passing conventions on blackfin, m68k, and sparc are different "
"from the descriptions above.  For details, see the kernel (and glibc) source."
msgstr ""
"Les conventions de passage des arguments sur blackfin, m68k et sparc sont "
"différentes de celles décrites précédemment. Pour plus de détails, se "
"référer aux sources du noyau (et de glibc)."

#. type: SS
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "ia64"
msgstr "ia64"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid "On ia64, a different interface is used:"
msgstr "Sur ia64, une interface différente est utilisée\\ :"

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy, no-wrap
#| msgid ""
#| "B<int __clone2(int (*>I<fn>B<)(void *), >\n"
#| "B<             void *>I<child_stack_base>B<, size_t >I<stack_size>B<,>\n"
#| "B<             int >I<flags>B<, void *>I<arg>B<, ... >\n"
#| "B<          /* pid_t *>I<ptid>B<, struct user_desc *>I<tls>B<, pid_t *>I<ctid>B< */ );>\n"
msgid ""
"B<int __clone2(int (*>I<fn>B<)(void *), >\n"
"B<             void *>I<stack_base>B<, size_t >I<stack_size>B<,>\n"
"B<             int >I<flags>B<, void *>I<arg>B<, ... >\n"
"B<          /* pid_t *>I<parent_tid>B<, struct user_desc *>I<tls>B<,>\n"
"B<             pid_t *>I<child_tid>B< */ );>\n"
msgstr ""
"B<int __clone2(int (*>I<fn>B<)(void *), >\n"
"B<             void *>I<child_stack_base>B<, size_t >I<stack_size>B<,>\n"
"B<             int >I<flags>B<, void *>I<arg>B<, ... >\n"
"B<          /* pid_t *>I<ptid>B<, struct user_desc *>I<tls>B<, pid_t *>I<ctid>B< */ );>\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"The prototype shown above is for the glibc wrapper function; for the system "
"call itself, the prototype can be described as follows (it is identical to "
"the B<clone>()  prototype on microblaze):"
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy, no-wrap
msgid ""
"B<long clone2(unsigned long >I<flags>B<, void *>I<stack_base>B<,>\n"
"B<            int >I<stack_size>B<,>         /* Size of stack */\n"
"B<            int *>I<parent_tid>B<, int *>I<child_tid>B<,>\n"
"B<            unsigned long >I<tls>B<);>\n"
msgstr ""
"B<long clone(unsigned long >I<flags>B<, void *>I<child_stack>B<,>\n"
"B<           void * >I<ptid>B<, void *>I<ctid>B<,>\n"
"B<           struct pt_regs *>I<regs>B<);>\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid ""
#| "B<__clone2>()  operates in the same way as B<clone>(), except that "
#| "I<child_stack_base> points to the lowest address of the child's stack "
#| "area, and I<stack_size> specifies the size of the stack pointed to by "
#| "I<child_stack_base>."
msgid ""
"B<__clone2>()  operates in the same way as B<clone>(), except that "
"I<stack_base> points to the lowest address of the child's stack area, and "
"I<stack_size> specifies the size of the stack pointed to by I<stack_base>."
msgstr ""
"B<__clone2>() fonctionne comme B<clone>(), aux différences suivantes près : "
"I<child_stack_base> pointe sur la plus petite adresse de la pile du fils, et "
"I<stack_size> indique la taille de la pile sur laquelle pointe "
"I<child_stack_base>."

#. type: SS
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "Linux 2.4 and earlier"
msgstr "Linux 2.4 et antérieurs"

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid ""
#| "In Linux 2.4 and earlier, B<clone>()  does not take arguments I<ptid>, "
#| "I<tls>, and I<ctid>."
msgid ""
"In Linux 2.4 and earlier, B<clone>()  does not take arguments I<parent_tid>, "
"I<tls>, and I<child_tid>."
msgstr ""
"Sous Linux\\ 2.4 et plus anciens, B<clone>() ne prend pas les arguments "
"I<ptid>, I<tls> et I<ctid>."

#. type: SH
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "RETURN VALUE"
msgstr "VALEUR DE RETOUR"

#.  gettid(2) returns current->pid;
#.  getpid(2) returns current->tgid;
#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"On success, the thread ID of the child process is returned in the caller's "
"thread of execution.  On failure, -1 is returned in the caller's context, no "
"child process will be created, and I<errno> will be set appropriately."
msgstr ""
"En cas de réussite, le TID du processus fils est renvoyé dans le thread "
"d'exécution de l'appelant. En cas d'échec, -1 est renvoyé dans le contexte "
"de l'appelant, aucun fils n'est créé, et I<errno> contiendra le code "
"d'erreur."

#. type: SH
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "ERRORS"
msgstr "ERREURS"

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<EAGAIN>"
msgstr "B<EAGAIN>"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid "Too many processes are already running; see B<fork>(2)."
msgstr "Trop de processus en cours d'exécution. Consultez B<fork>(2)."

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<EINVAL>"
msgstr "B<EINVAL>"

#.  Precisely: Linux 2.6.0-test6
#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
msgid ""
"B<CLONE_SIGHAND> was specified in the I<flags> mask, but B<CLONE_VM> was "
"not.  (Since Linux 2.6.0.)"
msgstr ""
"B<CLONE_SIGHAND> a été spécifié mais pas B<CLONE_VM> (depuis Linux 2.6.0-"
"test6)."

#.  .TP
#.  .B EINVAL
#.  Precisely one of
#.  .B CLONE_DETACHED
#.  and
#.  .B CLONE_THREAD
#.  was specified.
#.  (Since Linux 2.6.0-test6.)
#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid ""
#| "B<CLONE_THREAD> was specified, but B<CLONE_SIGHAND> was not.  (Since "
#| "Linux 2.5.35.)"
msgid ""
"B<CLONE_THREAD> was specified in the I<flags> mask, but B<CLONE_SIGHAND> was "
"not.  (Since Linux 2.5.35.)"
msgstr ""
"B<CLONE_THREAD> a été spécifié mais pas B<CLONE_SIGHAND>  (depuis Linux "
"2.5.35)."

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"B<CLONE_THREAD> was specified in the I<flags> mask, but the current process "
"previously called B<unshare>(2)  with the B<CLONE_NEWPID> flag or used "
"B<setns>(2)  to reassociate itself with a PID namespace."
msgstr ""

#.  commit e66eded8309ebf679d3d3c1f5820d1f2ca332c71
#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid "Both B<CLONE_FS> and B<CLONE_NEWNS> were specified in I<flags>."
msgid ""
"Both B<CLONE_FS> and B<CLONE_NEWNS> were specified in the I<flags> mask."
msgstr ""
"Les attributs B<CLONE_NEWNS> et B<CLONE_FS> figurent simultanément dans "
"I<flags>."

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<EINVAL> (since Linux 3.9)"
msgstr "B<EINVAL> (depuis Linux 3.9)"

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid "Both B<CLONE_NEWUSER> and B<CLONE_FS> were specified in I<flags>."
msgid ""
"Both B<CLONE_NEWUSER> and B<CLONE_FS> were specified in the I<flags> mask."
msgstr ""
"Les attributs B<CLONE_NEWUSER> et B<CLONE_FS> figurent simultanément dans "
"I<flags>."

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid ""
#| "Both B<CLONE_NEWIPC> and B<CLONE_SYSVSEM> were specified in I<flags>."
msgid ""
"Both B<CLONE_NEWIPC> and B<CLONE_SYSVSEM> were specified in the I<flags> "
"mask."
msgstr ""
"Les attributs B<CLONE_NEWIPC> et B<CLONE_SYSVSEM> figurent simultanément "
"dans I<flags>."

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid ""
#| "One (or both) of B<CLONE_NEWPID> or B<CLONE_NEWUSER> and one (or both) of "
#| "B<CLONE_THREAD> or B<CLONE_PARENT> were specified in I<flags>."
msgid ""
"One (or both) of B<CLONE_NEWPID> or B<CLONE_NEWUSER> and one (or both) of "
"B<CLONE_THREAD> or B<CLONE_PARENT> were specified in the I<flags> mask."
msgstr ""
"Au moins l'un des attributs B<CLONE_NEWPID> ou B<CLONE_NEWUSER>, et au moins "
"l'un des attributs B<CLONE_THREAD> ou B<CLONE_PARENT> figurent simultanément "
"dans I<flags>."

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
msgid ""
"Returned by the glibc B<clone>()  wrapper function when I<fn> or I<stack> is "
"specified as NULL."
msgstr ""
"Renvoyée par B<clone>() quand une valeur nulle a été indiquée pour le "
"paramètre I<child_stack>."

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid ""
#| "B<CLONE_NEWIPC> was specified in I<flags>, but the kernel was not "
#| "configured with the B<CONFIG_SYSVIPC> and B<CONFIG_IPC_NS> options."
msgid ""
"B<CLONE_NEWIPC> was specified in the I<flags> mask, but the kernel was not "
"configured with the B<CONFIG_SYSVIPC> and B<CONFIG_IPC_NS> options."
msgstr ""
"B<CLONE_NEWIPC> a été spécifié dans I<flags>, mais le noyau n'a pas été "
"configuré avec les options B<CONFIG_SYSVIPC> et B<CONFIG_IPC_NS>."

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid ""
#| "B<CLONE_NEWNET> was specified in I<flags>, but the kernel was not "
#| "configured with the B<CONFIG_NET_NS> option."
msgid ""
"B<CLONE_NEWNET> was specified in the I<flags> mask, but the kernel was not "
"configured with the B<CONFIG_NET_NS> option."
msgstr ""
"B<CLONE_NEWNET> a été spécifié dans I<flags>, mais le noyau n'a pas été "
"configuré avec l'option B<CONFIG_NET_NS>."

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid ""
#| "B<CLONE_NEWPID> was specified in I<flags>, but the kernel was not "
#| "configured with the B<CONFIG_PID_NS> option."
msgid ""
"B<CLONE_NEWPID> was specified in the I<flags> mask, but the kernel was not "
"configured with the B<CONFIG_PID_NS> option."
msgstr ""
"B<CLONE_NEWPID> a été spécifié dans I<flags>, mais le noyau n'a pas été "
"configuré avec l'option B<CONFIG_PID_NS>."

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
msgid ""
"B<CLONE_NEWUSER> was specified in the I<flags> mask, but the kernel was not "
"configured with the B<CONFIG_USER_NS> option."
msgstr ""
"B<CLONE_NEWUTS> a été spécifié dans I<flags>, mais le noyau n'a pas été "
"configuré avec l'option B<CONFIG_UTS>."

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
msgid ""
"B<CLONE_NEWUTS> was specified in the I<flags> mask, but the kernel was not "
"configured with the B<CONFIG_UTS_NS> option."
msgstr ""
"B<CLONE_NEWUTS> a été spécifié dans I<flags>, mais le noyau n'a pas été "
"configuré avec l'option B<CONFIG_UTS>."

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"I<stack> is not aligned to a suitable boundary for this architecture.  For "
"example, on aarch64, I<stack> must be a multiple of 16."
msgstr ""

#. type: TP
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid "B<EINVAL> (B<clone3>() only"
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid "Both B<CLONE_NEWUSER> and B<CLONE_FS> were specified in I<flags>."
msgid "B<CLONE_DETACHED> was specified in the I<flags> mask."
msgstr ""
"Les attributs B<CLONE_NEWUSER> et B<CLONE_FS> figurent simultanément dans "
"I<flags>."

#. type: TP
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid "B<EINVAL> (B<clone>() only"
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"B<CLONE_PIDFD> was specified together with B<CLONE_DETACHED> in the I<flags> "
"mask."
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"B<CLONE_PIDFD> was specified together with B<CLONE_THREAD> in the I<flags> "
"mask."
msgstr ""

#. type: TP
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid "B<EINVAL >(B<clone>() only)"
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"B<CLONE_PIDFD> was specified together with B<CLONE_PARENT_SETTID> in the "
"I<flags> mask."
msgstr ""

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<ENOMEM>"
msgstr "B<ENOMEM>"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"Cannot allocate sufficient memory to allocate a task structure for the "
"child, or to copy those parts of the caller's context that need to be copied."
msgstr ""
"Pas assez de mémoire pour copier les parties du contexte du processus "
"appelant qui doivent être dupliquées, ou pour allouer une structure de tâche "
"pour le processus fils."

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<ENOSPC> (since Linux 3.7)"
msgstr "B<ENOSPC> (depuis Linux 3.7)"

#.  commit f2302505775fd13ba93f034206f1e2a587017929
#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
msgid ""
"B<CLONE_NEWPID> was specified in the I<flags> mask, but the limit on the "
"nesting depth of PID namespaces would have been exceeded; see "
"B<pid_namespaces>(7)."
msgstr ""
"B<CLONE_NEWUSER> a été spécifié dans I<flags>, et l'appel provoquerait un "
"dépassement de la limite du nombre maximum d'espace de noms utilisateur "
"imbriqués. Consultez B<user_namespaces>(7)."

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<ENOSPC> (since Linux 4.9; beforehand B<EUSERS>)"
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid ""
#| "B<CLONE_NEWUSER> was specified in I<flags>, and the call would cause the "
#| "limit on the number of nested user namespaces to be exceeded.  See "
#| "B<user_namespaces>(7)."
msgid ""
"B<CLONE_NEWUSER> was specified in the I<flags> mask, and the call would "
"cause the limit on the number of nested user namespaces to be exceeded.  See "
"B<user_namespaces>(7)."
msgstr ""
"B<CLONE_NEWUSER> a été spécifié dans I<flags>, et l'appel provoquerait un "
"dépassement de la limite du nombre maximum d'espace de noms utilisateur "
"imbriqués. Consultez B<user_namespaces>(7)."

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"From Linux 3.11 to Linux 4.8, the error diagnosed in this case was B<EUSERS>."
msgstr ""

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<ENOSPC> (since Linux 4.9)"
msgstr "B<ENOSPC> (depuis Linux 4.9)"

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"One of the values in the I<flags> mask specified the creation of a new user "
"namespace, but doing so would have caused the limit defined by the "
"corresponding file in I</proc/sys/user> to be exceeded.  For further "
"details, see B<namespaces>(7)."
msgstr ""

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<EPERM>"
msgstr "B<EPERM>"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, fuzzy
msgid ""
"B<CLONE_NEWCGROUP>, B<CLONE_NEWIPC>, B<CLONE_NEWNET>, B<CLONE_NEWNS>, "
"B<CLONE_NEWPID>, or B<CLONE_NEWUTS> was specified by an unprivileged process "
"(process without B<CAP_SYS_ADMIN>)."
msgstr ""
"B<CLONE_NEWIPC>, B<CLONE_NEWNET>, B<CLONE_NEWNS>, B<CLONE_NEWPID> ou "
"B<CLONE_NEWUTS> a été spécifié par un processus non privilégié (processus "
"sans B<CAP_SYS_ADMIN>)."

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, fuzzy
msgid ""
"B<CLONE_PID> was specified by a process other than process 0.  (This error "
"occurs only on Linux 2.5.15 and earlier.)"
msgstr "B<CLONE_PID> a été réclamé par un processus autre que le processus 0."

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid ""
#| "B<CLONE_NEWUSER> was specified in I<flags>, but either the effective user "
#| "ID or the effective group ID of the caller does not have a mapping in the "
#| "parent namespace (see B<user_namespaces>(7))."
msgid ""
"B<CLONE_NEWUSER> was specified in the I<flags> mask, but either the "
"effective user ID or the effective group ID of the caller does not have a "
"mapping in the parent namespace (see B<user_namespaces>(7))."
msgstr ""
"B<CLONE_NEWUSER> a été spécifié dans I<flags>, mais l'identifiant "
"utilisateur effectif ou l'identifiant groupe effectif de l'appelant n'a pas "
"de correspondance dans l'espace de noms père (consultez "
"B<user_namespaces>(7))."

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<EPERM> (since Linux 3.9)"
msgstr "B<EPERM> (depuis Linux 3.9)"

#.  commit 3151527ee007b73a0ebd296010f1c0454a919c7d
#.  FIXME What is the rationale for this restriction?
#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
msgid ""
"B<CLONE_NEWUSER> was specified in the I<flags> mask and the caller is in a "
"chroot environment (i.e., the caller's root directory does not match the "
"root directory of the mount namespace in which it resides)."
msgstr ""
"B<CLONE_NEWUSER> figure dans I<flags> et l'appelant se trouve dans un "
"environnement chroot (c'est-à-dire que le répertoire racine de l'appelant ne "
"correspondant pas au répertoire racine de l'espace de noms de montage dans "
"lequel il se trouve)."

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "B<ERESTARTNOINTR> (since Linux 2.6.17)"
msgstr "B<ERESTARTNOINTR> (depuis Linux 2.6.17)"

#.  commit 4a2c7a7837da1b91468e50426066d988050e4d56
#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"System call was interrupted by a signal and will be restarted.  (This can be "
"seen only during a trace.)"
msgstr ""

#. type: TP
#: archlinux debian-buster debian-unstable mageia-cauldron
#, fuzzy, no-wrap
msgid "B<EUSERS> (Linux 3.11 to Linux 4.8)"
msgstr "B<EUSERS> (à partir de Linux 3.11)"

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
msgid ""
"B<CLONE_NEWUSER> was specified in the I<flags> mask, and the limit on the "
"number of nested user namespaces would be exceeded.  See the discussion of "
"the B<ENOSPC> error above."
msgstr ""
"B<CLONE_NEWUSER> a été spécifié dans I<flags>, et l'appel provoquerait un "
"dépassement de la limite du nombre maximum d'espace de noms utilisateur "
"imbriqués. Consultez B<user_namespaces>(7)."

#. type: SH
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid "VERSIONS"
msgstr "VERSIONS"

#.  There is no entry for
#.  .BR clone ()
#.  in libc5.
#.  glibc2 provides
#.  .BR clone ()
#.  as described in this manual page.
#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid "The B<clone3>()  system call first appeared in Linux 5.3."
msgstr ""

#. type: SH
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "CONFORMING TO"
msgstr "CONFORMITÉ"

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid ""
#| "B<clone>()  is Linux-specific and should not be used in programs intended "
#| "to be portable."
msgid ""
"These system calls are Linux-specific and should not be used in programs "
"intended to be portable."
msgstr ""
"B<clone>() est spécifique à Linux et ne doit pas être utilisé dans des "
"programmes conçus pour être portables."

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, fuzzy
msgid ""
"The B<kcmp>(2)  system call can be used to test whether two processes share "
"various resources such as a file descriptor table, System V semaphore undo "
"operations, or a virtual address space."
msgstr ""
"L'appel système  B<kcmp>() peut être utilisé pour vérifier si deux processus "
"identifiés par I<pid1> et I<pid2> partagent des ressources du noyau, telles "
"que de la mémoire virtuelle, des descripteurs de fichiers, etc. "

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"Handlers registered using B<pthread_atfork>(3)  are not executed during a "
"clone call."
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, fuzzy
msgid ""
"In the Linux 2.4.x series, B<CLONE_THREAD> generally does not make the "
"parent of the new thread the same as the parent of the calling process.  "
"However, for kernel versions 2.4.7 to 2.4.18 the B<CLONE_THREAD> flag "
"implied the B<CLONE_PARENT> flag (as in Linux 2.6.0 and later)."
msgstr ""
"Dans les noyaux 2.4.x, B<CLONE_THREAD> ne rend pas en général le processus "
"père de l'appelant père du nouveau thread. Cependant, pour les versions "
"2.4.7 à 2.4.18 du noyau, l'attribut B<CLONE_THREAD> impliquait "
"B<CLONE_PARENT> (de même qu'avec les noyaux 2.6)."

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"On i386, B<clone>()  should not be called through vsyscall, but directly "
"through I<int $0x80>."
msgstr ""
"Sur i386, B<clone>() ne devrait pas être appelé via vsyscall, mais "
"directement en utilisant I<int $0x80>."

#. type: SH
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "BUGS"
msgstr "BOGUES"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, fuzzy
msgid ""
"GNU C library versions 2.3.4 up to and including 2.24 contained a wrapper "
"function for B<getpid>(2)  that performed caching of PIDs.  This caching "
"relied on support in the glibc wrapper for B<clone>(), but limitations in "
"the implementation meant that the cache was not up to date in some "
"circumstances.  In particular, if a signal was delivered to the child "
"immediately after the B<clone>()  call, then a call to B<getpid>(2)  in a "
"handler for the signal could return the PID of the calling process (\"the "
"parent\"), if the clone wrapper had not yet had a chance to update the PID "
"cache in the child.  (This discussion ignores the case where the child was "
"created using B<CLONE_THREAD>, when B<getpid>(2)  I<should> return the same "
"value in the child and in the process that called B<clone>(), since the "
"caller and the child are in the same thread group.  The stale-cache problem "
"also does not occur if the I<flags> argument includes B<CLONE_VM>.)  To get "
"the truth, it was sometimes necessary to use code such as the following:"
msgstr ""
"Les versions de la bibliothèque C GNU qui gèrent la bibliothèque de gestion "
"des threads NPTL contiennent une fonction enveloppe pour B<getpid>(2) qui "
"effectue un cache des PID. Ce cache nécessite une prise en charge par "
"l'enveloppe de B<clone>() de la glibc, mais telle qu'il est actuellement "
"implémenté, le cache peut ne pas être à jour sous certaines circonstances. "
"En particulier, si un signal est distribué à un fils juste après l'appel à "
"B<clone>(), alors un appel à B<getpid>(2) dans le gestionnaire de signaux du "
"signal peut renvoyer le PID du processus appelant (le père), si l'enveloppe "
"de clone n'a toujours pas eu le temps de mettre le cache de PID à jour pour "
"le fils. (Cette discussion ignore le cas où le fils a été créé en utilisant "
"B<CLONE_THREAD>, quand B<getpid>(2) I<doit> renvoyer la même valeur pour le "
"fils et pour le processus qui a appelé B<clone>(), puisque l'appelant et le "
"fils se trouvent dans le même groupe de threads. Ce problème de cache "
"n'apparaît pas non plus si le paramètre I<flags> contient B<CLONE_VM>.) Pour "
"obtenir la véritable valeur, il peut être nécessaire d'utiliser quelque "
"chose comme ceci :"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, fuzzy, no-wrap
msgid "#include E<lt>syscall.hE<gt>\n"
msgstr "    #include E<lt>syscall.hE<gt>\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, fuzzy, no-wrap
msgid "pid_t mypid;\n"
msgstr "    pid_t mypid;\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, fuzzy, no-wrap
msgid "mypid = syscall(SYS_getpid);\n"
msgstr "    mypid = syscall(SYS_getpid);\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"Because of the stale-cache problem, as well as other problems noted in "
"B<getpid>(2), the PID caching feature was removed in glibc 2.25."
msgstr ""

#. type: SH
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "EXAMPLE"
msgstr "EXEMPLE"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
msgid ""
"The following program demonstrates the use of B<clone>()  to create a child "
"process that executes in a separate UTS namespace.  The child changes the "
"hostname in its UTS namespace.  Both parent and child then display the "
"system hostname, making it possible to see that the hostname differs in the "
"UTS namespaces of the parent and child.  For an example of the use of this "
"program, see B<setns>(2)."
msgstr ""
"Le programme suivant décrit l'usage de B<clone>() dans le but de créer un "
"processus fils qui s'exécute dans un espace de noms UTS distinct. Le "
"processus fils change le nom d'hôte (hostname) dans son propre espace UTS. "
"Les processus père et fils affichent chacun le nom d'hôte qui leur "
"correspond, permettant ainsi de constater la différence des noms d'hôtes "
"dans leurs espaces de noms UTS respectifs. "

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"Within the sample program, we allocate the memory that is to be used for the "
"child's stack using B<mmap>(2)  rather than B<malloc>(3)  for the following "
"reasons:"
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"B<mmap>(2)  allocates a block of memory that starts on a page boundary and "
"is a multiple of the page size.  This is useful if we want to establish a "
"guard page (a page with protection B<PROT_NONE>)  at the end of the stack "
"using B<mprotect>(2)."
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"We can specify the B<MAP_STACK> flag to request a mapping that is suitable "
"for a stack.  For the moment, this flag is a no-op on Linux, but it exists "
"and has effect on some other systems, so we should include it for "
"portability."
msgstr ""

#. type: SS
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "Program source"
msgstr "Source du programme"

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy, no-wrap
#| msgid ""
#| "#define _GNU_SOURCE\n"
#| "#include E<lt>sys/wait.hE<gt>\n"
#| "#include E<lt>sys/utsname.hE<gt>\n"
#| "#include E<lt>sched.hE<gt>\n"
#| "#include E<lt>string.hE<gt>\n"
#| "#include E<lt>stdio.hE<gt>\n"
#| "#include E<lt>stdlib.hE<gt>\n"
#| "#include E<lt>unistd.hE<gt>\n"
msgid ""
"#define _GNU_SOURCE\n"
"#include E<lt>sys/wait.hE<gt>\n"
"#include E<lt>sys/utsname.hE<gt>\n"
"#include E<lt>sched.hE<gt>\n"
"#include E<lt>string.hE<gt>\n"
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
"#include E<lt>unistd.hE<gt>\n"
"#include E<lt>sys/mman.hE<gt>\n"
msgstr ""
"#define _GNU_SOURCE\n"
"#include E<lt>sys/wait.hE<gt>\n"
"#include E<lt>sys/utsname.hE<gt>\n"
"#include E<lt>sched.hE<gt>\n"
"#include E<lt>string.hE<gt>\n"
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
"#include E<lt>unistd.hE<gt>\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid ""
"#define errExit(msg)    do { perror(msg); exit(EXIT_FAILURE); \\e\n"
"                        } while (0)\n"
msgstr ""
"#define errExit(msg)    do { perror(msg); exit(EXIT_FAILURE); \\e\n"
"                        } while (0)\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid ""
"static int              /* Start function for cloned child */\n"
"childFunc(void *arg)\n"
"{\n"
"    struct utsname uts;\n"
msgstr ""
"static int              /* Commencer la fonction pour le fils cloné */\n"
"childFunc(void *arg)\n"
"{\n"
"    struct utsname uts;\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "    /* Change hostname in UTS namespace of child */\n"
msgstr ""
"    /* Modifier le nom d'hôte dans l'espace de noms UTS du\n"
"       processus fils */\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid ""
"    if (sethostname(arg, strlen(arg)) == -1)\n"
"        errExit(\"sethostname\");\n"
msgstr ""
"    if (sethostname(arg, strlen(arg)) == -1)\n"
"        errExit(\"sethostname\");\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "    /* Retrieve and display hostname */\n"
msgstr "    /* Récupérer et afficher le nom d'hôte */\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid ""
"    if (uname(&uts) == -1)\n"
"        errExit(\"uname\");\n"
"    printf(\"uts.nodename in child:  %s\\en\", uts.nodename);\n"
msgstr ""
"    if (uname(&uts) == -1)\n"
"        errExit(\"uname\");\n"
"    printf(\"uts.nodename dans le fils : %s\\en\", uts.nodename);\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid ""
"    /* Keep the namespace open for a while, by sleeping.\n"
"       This allows some experimentation--for example, another\n"
"       process might join the namespace. */\n"
msgstr ""
"    /* Rester en sommeil (fonction sleep) pour conserver l'espace\n"
"       de noms ouvert pendant un moment. Cela permet de réaliser\n"
"       quelques expérimentations — par exemple, un autre processus\n"
"       pourrait rejoindre l'espace de noms. */\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "    sleep(200);\n"
msgstr "    sleep(200);\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid ""
"    return 0;           /* Child terminates now */\n"
"}\n"
msgstr ""
"    return 0;           /* Le processus fils se termine à ce moment */\n"
"}\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "#define STACK_SIZE (1024 * 1024)    /* Stack size for cloned child */\n"
msgstr ""
"#define STACK_SIZE (1024 * 1024)    /* Taille de la pile pour le\n"
"                                       fils cloné */\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid ""
"int\n"
"main(int argc, char *argv[])\n"
"{\n"
"    char *stack;                    /* Start of stack buffer */\n"
"    char *stackTop;                 /* End of stack buffer */\n"
"    pid_t pid;\n"
"    struct utsname uts;\n"
msgstr ""
"int\n"
"main(int argc, char *argv[])\n"
"{\n"
"    char *stack;                    /* Début du tampon de la pile */\n"
"    char *stackTop;                 /* Fin du tampon de la pile */\n"
"    pid_t pid;\n"
"    struct utsname uts;\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid ""
"    if (argc E<lt> 2) {\n"
"        fprintf(stderr, \"Usage: %s E<lt>child-hostnameE<gt>\\en\", argv[0]);\n"
"        exit(EXIT_SUCCESS);\n"
"    }\n"
msgstr ""
"    if (argc E<lt> 2) {\n"
"        fprintf(stderr, \"Utilisation : %s E<lt>nom_d_hôte-filsE<gt>\\en\", argv[0]);\n"
"        exit(EXIT_SUCCESS);\n"
"    }\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy, no-wrap
#| msgid "    /* Allocate stack for child */\n"
msgid "    /* Allocate memory to be used for the stack of the child */\n"
msgstr "    /* Allouer la pile pour le processus fils */\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, no-wrap
msgid ""
"    stack = mmap(NULL, STACK_SIZE, PROT_READ | PROT_WRITE,\n"
"                 MAP_PRIVATE | MAP_ANONYMOUS | MAP_STACK, -1, 0);\n"
"    if (stack == MAP_FAILED)\n"
"        errExit(\"mmap\");\n"
msgstr ""

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy, no-wrap
#| msgid ""
#| "    stack = malloc(STACK_SIZE);\n"
#| "    if (stack == NULL)\n"
#| "        errExit(\"malloc\");\n"
#| "    stackTop = stack + STACK_SIZE;  /* Assume stack grows downward */\n"
msgid "    stackTop = stack + STACK_SIZE;  /* Assume stack grows downward */\n"
msgstr ""
"    stack = malloc(STACK_SIZE);\n"
"    if (stack == NULL)\n"
"        errExit(\"malloc\");\n"
"    stackTop = stack + STACK_SIZE;  /* Pile supposée s'étendre vers\n"
"                                       le bas */\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid ""
"    /* Create child that has its own UTS namespace;\n"
"       child commences execution in childFunc() */\n"
msgstr ""
"    /* Créer un processus fils disposant de son propre\n"
"       espace de noms UTS ; le processus fils débute\n"
"       son exécution dans childFunc() */\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid ""
"    pid = clone(childFunc, stackTop, CLONE_NEWUTS | SIGCHLD, argv[1]);\n"
"    if (pid == -1)\n"
"        errExit(\"clone\");\n"
"    printf(\"clone() returned %ld\\en\", (long) pid);\n"
msgstr ""
"    pid = clone(childFunc, stackTop, CLONE_NEWUTS | SIGCHLD, argv[1]);\n"
"    if (pid == -1)\n"
"        errExit(\"clone\");\n"
"    printf(\"clone() a renvoyé %ld\\en\", (long) pid);\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "    /* Parent falls through to here */\n"
msgstr "    /* C'est ici que le processus père échoue */\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "    sleep(1);           /* Give child time to change its hostname */\n"
msgstr ""
"    sleep(1);           /* Laisser le temps au processus fils de\n"
"                           changer son nom d'hôte */\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid ""
"    /* Display hostname in parent\\(aqs UTS namespace. This will be\n"
"       different from hostname in child\\(aqs UTS namespace. */\n"
msgstr ""
"    /* Afficher le nom d'hôte pour l'espace de noms UTS du processus père.\n"
"       Celui-ci sera différent du nom d'hôte pour l'espace de noms UTS du\n"
"       processus fils. */\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid ""
"    if (uname(&uts) == -1)\n"
"        errExit(\"uname\");\n"
"    printf(\"uts.nodename in parent: %s\\en\", uts.nodename);\n"
msgstr ""
"    if (uname(&uts) == -1)\n"
"        errExit(\"uname\");\n"
"    printf(\"uts.nodename dans le père : %s\\en\", uts.nodename);\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid ""
"    if (waitpid(pid, NULL, 0) == -1)    /* Wait for child */\n"
"        errExit(\"waitpid\");\n"
"    printf(\"child has terminated\\en\");\n"
msgstr ""
"    if (waitpid(pid, NULL, 0) == -1)    /* Attendre le processus fils */\n"
"        errExit(\"waitpid\");\n"
"    printf(\"Fin du processus fils\\en\");\n"

#. type: Plain text
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid ""
"    exit(EXIT_SUCCESS);\n"
"}\n"
msgstr ""
"    exit(EXIT_SUCCESS);\n"
"}\n"

#. type: SH
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "SEE ALSO"
msgstr "VOIR AUSSI"

#. type: Plain text
#: archlinux debian-buster debian-unstable
#, fuzzy
#| msgid ""
#| "B<fork>(2), B<futex>(2), B<getpid>(2), B<gettid>(2), B<kcmp>(2), "
#| "B<set_thread_area>(2), B<set_tid_address>(2), B<setns>(2), B<tkill>(2), "
#| "B<unshare>(2), B<wait>(2), B<capabilities>(7), B<namespaces>(7), "
#| "B<pthreads>(7)"
msgid ""
"B<fork>(2), B<futex>(2), B<getpid>(2), B<gettid>(2), B<kcmp>(2), B<mmap>(2), "
"B<pidfd_open>(2), B<set_thread_area>(2), B<set_tid_address>(2), B<setns>(2), "
"B<tkill>(2), B<unshare>(2), B<wait>(2), B<capabilities>(7), "
"B<namespaces>(7), B<pthreads>(7)"
msgstr ""
"B<fork>(2), B<futex>(2), B<getpid>(2), B<gettid>(2), B<kcmp>(2), "
"B<set_thread_area>(2), B<set_tid_address>(2), B<setns>(2), B<tkill>(2), "
"B<unshare>(2), B<wait>(2), B<capabilities>(7), B<namespaces>(7), "
"B<pthreads>(7)"

#. type: SH
#: archlinux debian-buster debian-unstable mageia-cauldron
#, no-wrap
msgid "COLOPHON"
msgstr "COLOPHON"

#. type: Plain text
#: archlinux debian-buster debian-unstable
msgid ""
"This page is part of release 5.04 of the Linux I<man-pages> project.  A "
"description of the project, information about reporting bugs, and the latest "
"version of this page, can be found at \\%https://www.kernel.org/doc/man-"
"pages/."
msgstr ""
"Cette page fait partie de la publication 5.04 du projet I<man-pages> Linux. "
"Une description du projet et des instructions pour signaler des anomalies "
"peuvent être trouvées à l'adresse \\%https://www.kernel.org/doc/man-pages/."

#. type: TH
#: mageia-cauldron
#, no-wrap
msgid "2019-03-06"
msgstr "6 mars 2019"

#. type: Plain text
#: mageia-cauldron
msgid "clone, __clone2 - create a child process"
msgstr "clone, __clone2 - Créer un processus fils (child)"

#. type: Plain text
#: mageia-cauldron
#, fuzzy, no-wrap
msgid ""
"B<int clone(int (*>I<fn>B<)(void *), void *>I<child_stack>B<,>\n"
"B<          int >I<flags>B<, void *>I<arg>B<, ... >\n"
"B<          /* pid_t *>I<ptid>B<, void *>I<newtls>B<, pid_t *>I<ctid>B< */ );>\n"
msgstr ""
"B<int clone(int (*>I<fn>B<)(void *), void *>I<child_stack>B<,>\n"
"B<          int >I<flags>B<, void *>I<arg>B<, ... >\n"
"B<          /* pid_t *>I<ptid>B<, struct user_desc *>I<tls>B<, pid_t *>I<ctid>B< */ );>\n"

#. type: Plain text
#: mageia-cauldron
#, fuzzy, no-wrap
msgid "/* For the prototype of the raw system call, see NOTES */\n"
msgstr "/* Prototype de l'appel système brut */\n"

#. type: Plain text
#: mageia-cauldron
msgid "B<clone>()  creates a new process, in a manner similar to B<fork>(2)."
msgstr "B<clone>() crée un nouveau processus, de façon analogue à B<fork>(2)."

#. type: Plain text
#: mageia-cauldron
msgid ""
"This page describes both the glibc B<clone>()  wrapper function and the "
"underlying system call on which it is based.  The main text describes the "
"wrapper function; the differences for the raw system call are described "
"toward the end of this page."
msgstr ""
"Cette page présente à la fois la fonction d'enrobage B<clone>() de glibc et "
"l'appel système sous-jacent sur lequel elle s'appuie. Le texte principal "
"décrit la fonction d'enrobage ; les différences avec l'appel système brut "
"sont précisées plus bas dans l'article."

#. type: Plain text
#: mageia-cauldron
#, fuzzy
msgid ""
"Unlike B<fork>(2), B<clone>()  allows the child process to share parts of "
"its execution context with the calling process, such as the virtual address "
"space, the table of file descriptors, and the table of signal handlers.  "
"(Note that on this manual page, \"calling process\" normally corresponds to "
"\"parent process\".  But see the description of B<CLONE_PARENT> below.)"
msgstr ""
"Contrairement à B<fork>(2), B<clone>() permet le partage d'une partie du "
"contexte d'exécution entre le processus fils et le processus appelant. Le "
"partage peut s'appliquer sur l'espace mémoire, sur la table des descripteurs "
"de fichiers ou la table des gestionnaires de signaux. (Notez que sur cette "
"page de manuel, le «\\ processus appelant\\ » correspond normalement au «\\ "
"processus père\\ », mais voyez quand même la description de B<CLONE_PARENT> "
"plus bas)."

#. type: Plain text
#: mageia-cauldron
#, fuzzy
msgid ""
"One use of B<clone>()  is to implement threads: multiple flows of control in "
"a program that run concurrently in a shared address space."
msgstr ""
"L'appel système B<clone>() est principalement utilisé pour permettre "
"l'implémentation des threads\\ : un programme est scindé en plusieurs lignes "
"de contrôle, s'exécutant simultanément dans un espace mémoire partagée."

#. type: Plain text
#: mageia-cauldron
#, fuzzy
msgid ""
"When the child process is created with B<clone>(), it commences execution by "
"calling the function pointed to by the argument I<fn>.  (This differs from "
"B<fork>(2), where execution continues in the child from the point of the "
"B<fork>(2)  call.)  The I<arg> argument is passed as the argument of the "
"function I<fn>."
msgstr ""
"Quand le processus fils est créé par B<clone>(), il exécute la fonction "
"I<fn>(I<arg>). Ceci est différent de B<fork>(2),  pour lequel l'exécution "
"continue dans le processus fils à partir du moment de l'appel de B<fork>(2). "
"L'argument I<fn> est un pointeur vers la fonction appelée par le processus "
"fils lors de son démarrage. L'argument I<arg> est transmis à la fonction "
"I<fn> lors de son invocation."

#. type: Plain text
#: mageia-cauldron
msgid ""
"The I<child_stack> argument specifies the location of the stack used by the "
"child process.  Since the child and calling process may share memory, it is "
"not possible for the child process to execute in the same stack as the "
"calling process.  The calling process must therefore set up memory space for "
"the child stack and pass a pointer to this space to B<clone>().  Stacks grow "
"downward on all processors that run Linux (except the HP PA processors), so "
"I<child_stack> usually points to the topmost address of the memory space set "
"up for the child stack."
msgstr ""
"L'argument I<child_stack> indique l'emplacement de la pile utilisée par le "
"processus fils. Comme les processus fils et appelant peuvent partager de la "
"mémoire, il n'est généralement pas possible pour le fils d'utiliser la même "
"pile que son père. Le processus appelant doit donc préparer un espace "
"mémoire pour stocker la pile de son fils, et transmettre à B<clone> un "
"pointeur sur cet emplacement. Les piles croissent vers le bas sur tous les "
"processeurs implémentant Linux (sauf le HP PA), donc I<child_stack> doit "
"pointer sur la plus haute adresse de l'espace mémoire prévu pour la pile du "
"processus fils."

#. type: Plain text
#: mageia-cauldron
msgid ""
"The low byte of I<flags> contains the number of the I<termination signal> "
"sent to the parent when the child dies.  If this signal is specified as "
"anything other than B<SIGCHLD>, then the parent process must specify the "
"B<__WALL> or B<__WCLONE> options when waiting for the child with "
"B<wait>(2).  If no signal is specified, then the parent process is not "
"signaled when the child terminates."
msgstr ""
"L'octet de poids faible de I<flags> contient le numéro du signal qui sera "
"envoyé au père lorsque le processus fils se terminera. Si ce signal est "
"différent de B<SIGCHLD>, le processus parent doit également spécifier les "
"options B<__WALL> ou B<__WCLONE> lorsqu'il attend la fin du fils avec "
"B<wait>(2). Si aucun signal n'est indiqué, le processus parent ne sera pas "
"notifié de la terminaison du fils."

#. type: Plain text
#: mageia-cauldron
#, fuzzy
msgid ""
"I<flags> may also be bitwise-ORed with zero or more of the following "
"constants, in order to specify what is shared between the calling process "
"and the child process:"
msgstr ""
"I<flags> permet également de préciser ce qui sera partagé entre le père et "
"le fils, en effectuant un OU binaire entre une ou plusieurs des constantes "
"suivantes\\ :"

#. type: Plain text
#: mageia-cauldron
#, fuzzy
msgid ""
"Clear (zero) the child thread ID at the location I<ctid> in child memory "
"when the child exits, and do a wakeup on the futex at that address.  The "
"address involved may be changed by the B<set_tid_address>(2)  system call.  "
"This is used by threading libraries."
msgstr ""
"Effacer l'ID du thread enfant à I<ctid> dans la mémoire du fils lorsqu'il se "
"termine, et réveiller le futex à cette adresse. L'adresse concernée peut "
"être modifiée par l'appel système B<set_tid_address>(2). Cela est utilisé "
"dans les bibliothèques de gestion de threads."

#. type: Plain text
#: mageia-cauldron
msgid ""
"Store the child thread ID at the location I<ctid> in the child's memory.  "
"The store operation completes before B<clone>()  returns control to user "
"space in the child process.  (Note that the store operation may not have "
"completed before B<clone>()  returns in the parent process, which will be "
"relevant if the B<CLONE_VM> flag is also employed.)"
msgstr ""

#. type: Plain text
#: mageia-cauldron
#, fuzzy
msgid ""
"If B<CLONE_FILES> is not set, the child process inherits a copy of all file "
"descriptors opened in the calling process at the time of B<clone>().  "
"Subsequent operations that open or close file descriptors, or change file "
"descriptor flags, performed by either the calling process or the child "
"process do not affect the other process.  Note, however, that the duplicated "
"file descriptors in the child refer to the same open file descriptions as "
"the corresponding file descriptors in the calling process, and thus share "
"file offsets and file status flags (see B<open>(2))."
msgstr ""
"Si B<CLONE_FILES> n'est pas positionné, le processus fils hérite d'une copie "
"des descripteurs de fichier ouverts par l'appelant au moment de l'appel "
"B<clone>(). (Les copies des descripteurs de fichier dans le fils sont "
"associées aux mêmes descriptions de fichiers ouverts (consultez B<open>(2)) "
"que les descripteurs de fichier correspondants dans le processus appelant.) "
"Les opérations effectuées ensuite sur un descripteur par un des processus "
"n'affectent pas l'autre processus."

#. type: Plain text
#: mageia-cauldron
#, fuzzy
msgid ""
"If B<CLONE_FS> is not set, the child process works on a copy of the "
"filesystem information of the calling process at the time of the B<clone>()  "
"call.  Calls to B<chroot>(2), B<chdir>(2), or B<umask>(2)  performed later "
"by one of the processes do not affect the other process."
msgstr ""
"Si B<CLONE_FS> n'est pas choisi, le processus travaille sur une copie des "
"informations de l'appelant concernant le système de fichiers. Cette copie "
"est effectuée lors de l'invocation de B<clone>(). Les appels à B<chroot>(2), "
"B<chdir>(2), B<umask>(2) effectués par un processus n'affectent pas l'autre "
"processus."

#. type: Plain text
#: mageia-cauldron
#, fuzzy
msgid ""
"Create the process in a new cgroup namespace.  If this flag is not set, then "
"(as with B<fork>(2))  the process is created in the same cgroup namespaces "
"as the calling process.  This flag is intended for the implementation of "
"containers."
msgstr ""
"Si B<CLONE_NEWPID> est invoqué, alors créer le processus dans un nouvel "
"espace de noms de PID. Si cet attribut n'est pas invoqué, alors (comme pour "
"B<fork>(2)) le processus est créé dans le même espace de noms de PID que le "
"processus appelant. Cet attribut est sensé être utilisé pour "
"l'implémentation de conteneurs."

#. type: Plain text
#: mageia-cauldron
msgid ""
"If B<CLONE_NEWIPC> is set, then create the process in a new IPC namespace.  "
"If this flag is not set, then (as with B<fork>(2)), the process is created "
"in the same IPC namespace as the calling process.  This flag is intended for "
"the implementation of containers."
msgstr ""
"Si B<CLONE_NEWIPC> est défini, alors créer le processus dans un nouvel "
"espace de noms IPC. Si cet attribut n'est pas défini, alors (comme pour "
"B<fork>(2)) le processus est créé dans le même espace de noms IPC que le "
"processus appelant. Cet attribut est sensé être utilisé pour "
"l'implémentation de conteneurs."

#.  commit 7eafd7c74c3f2e67c27621b987b28397110d643f
#.  https://lwn.net/Articles/312232/
#. type: Plain text
#: mageia-cauldron
msgid ""
"An IPC namespace provides an isolated view of System\\ V IPC objects (see "
"B<svipc>(7))  and (since Linux 2.6.30)  POSIX message queues (see "
"B<mq_overview>(7)).  The common characteristic of these IPC mechanisms is "
"that IPC objects are identified by mechanisms other than filesystem "
"pathnames."
msgstr ""
"Un espace de noms IPC fournit une vue isolée des objets IPC en System V "
"(consultez B<svipc>(7)) et (à partir de Linux 2.6.30) des files d'attente de "
"messages POSIX (consultez B<mq_overview>(7)). Le point commun entre ces "
"mécanismes IPC est que les objets IPC y sont identifiés par d'autres moyens "
"que des chemins d'accès dans des systèmes de fichiers."

#. type: Plain text
#: mageia-cauldron
msgid ""
"Objects created in an IPC namespace are visible to all other processes that "
"are members of that namespace, but are not visible to processes in other IPC "
"namespaces."
msgstr ""
"Les objets créés dans un espace de noms IPC sont visibles pour tous les "
"processus qui sont membres de cet espace de noms, mais ne sont pas visibles "
"pour les processus des autres espaces de noms IPC."

#. type: Plain text
#: mageia-cauldron
msgid ""
"When an IPC namespace is destroyed (i.e., when the last process that is a "
"member of the namespace terminates), all IPC objects in the namespace are "
"automatically destroyed."
msgstr ""
"Quand un espace de noms est détruit (c'est-à-dire, quand le dernier "
"processus membre de cet espace de noms se termine), tous les objets IPC de "
"cet espace de noms sont automatiquement détruits."

#. type: Plain text
#: mageia-cauldron
msgid "For further information on IPC namespaces, see B<namespaces>(7)."
msgstr ""
"Pour plus d'informations sur les espaces de noms IPC, reportez vous à "
"B<namespaces>(7)."

#. type: Plain text
#: mageia-cauldron
msgid ""
"If B<CLONE_NEWNET> is set, then create the process in a new network "
"namespace.  If this flag is not set, then (as with B<fork>(2))  the process "
"is created in the same network namespace as the calling process.  This flag "
"is intended for the implementation of containers."
msgstr ""
"Si B<CLONE_NEWNET> est invoqué, alors créer le processus dans un nouvel "
"espace de noms réseau. Si cet attribut n'est pas invoqué, alors (comme pour "
"B<fork>(2)) le processus est créé dans le même espace de noms réseau que le "
"processus appelant. Cet attribut est sensé être utilisé pour "
"l'implémentation de conteneurs."

#. type: Plain text
#: mageia-cauldron
#, fuzzy
msgid ""
"A network namespace provides an isolated view of the networking stack "
"(network device interfaces, IPv4 and IPv6 protocol stacks, IP routing "
"tables, firewall rules, the I</proc/net> and I</sys/class/net> directory "
"trees, sockets, etc.).  A physical network device can live in exactly one "
"network namespace.  A virtual network (B<veth>(4))  device pair provides a "
"pipe-like abstraction that can be used to create tunnels between network "
"namespaces, and can be used to create a bridge to a physical network device "
"in another namespace."
msgstr ""
"Un espace de noms réseau fournit une vue isolée de la pile réseau "
"(interfaces des périphériques réseau, piles des protocoles IPv4 et IPv6, "
"tables de routage, règles de pare-feu, les arbres de répertoire I</proc/net> "
"et I</sys/class/net>, les sockets, etc.). Un périphérique réseau physique ne "
"peut être que dans un seul espace de noms réseau. Une paire d'interface "
"réseau virtuelle (« veth ») fournit une abstraction similaire à pipe qui "
"peut être utilisé pour créer un pont vers une interface réseau physique d'un "
"autre espace de noms réseau."

#. type: Plain text
#: mageia-cauldron
msgid ""
"When a network namespace is freed (i.e., when the last process in the "
"namespace terminates), its physical network devices are moved back to the "
"initial network namespace (not to the parent of the process).  For further "
"information on network namespaces, see B<namespaces>(7)."
msgstr ""
"Quand un espace de noms réseau est libéré (c'est-à-dire, quand le dernier "
"processus de l'espace de noms se termine), ses périphériques réseau "
"physiques sont remis dans l'espace de noms réseau initial (pas celui du "
"processus père). Pour en savoir plus sur les espaces de noms réseau, "
"consultez B<namespaces>(7)."

#.  See https://lwn.net/Articles/543273/
#. type: Plain text
#: mageia-cauldron
msgid ""
"Only a privileged process (B<CAP_SYS_ADMIN>)  can employ B<CLONE_NEWNS>.  It "
"is not permitted to specify both B<CLONE_NEWNS> and B<CLONE_FS> in the same "
"B<clone>()  call."
msgstr ""
"Seul un processus disposant de privilèges (B<CAP_SYS_ADMIN>) peut utiliser "
"l'attribut B<CLONE_NEWNS>. Il n'est pas possible de spécifier à la fois "
"B<CLONE_NEWNS> et B<CLONE_FS> pour le même appel B<clone>()."

#.  This explanation draws a lot of details from
#.  http://lwn.net/Articles/259217/
#.  Authors: Pavel Emelyanov <xemul@openvz.org>
#.  and Kir Kolyshkin <kir@openvz.org>
#.  The primary kernel commit is 30e49c263e36341b60b735cbef5ca37912549264
#.  Author: Pavel Emelyanov <xemul@openvz.org>
#. type: Plain text
#: mageia-cauldron
msgid ""
"If B<CLONE_NEWPID> is set, then create the process in a new PID namespace.  "
"If this flag is not set, then (as with B<fork>(2))  the process is created "
"in the same PID namespace as the calling process.  This flag is intended for "
"the implementation of containers."
msgstr ""
"Si B<CLONE_NEWPID> est invoqué, alors créer le processus dans un nouvel "
"espace de noms de PID. Si cet attribut n'est pas invoqué, alors (comme pour "
"B<fork>(2)) le processus est créé dans le même espace de noms de PID que le "
"processus appelant. Cet attribut est sensé être utilisé pour "
"l'implémentation de conteneurs."

#. type: Plain text
#: mageia-cauldron
msgid ""
"If B<CLONE_NEWUTS> is set, then create the process in a new UTS namespace, "
"whose identifiers are initialized by duplicating the identifiers from the "
"UTS namespace of the calling process.  If this flag is not set, then (as "
"with B<fork>(2))  the process is created in the same UTS namespace as the "
"calling process.  This flag is intended for the implementation of containers."
msgstr ""
"Si B<CLONE_NEWUTS> est défini, alors créer le processus dans un nouvel "
"espace de noms de UTS, dont les identifiants sont initialisés en dupliquant "
"les identifiants de l'espace de noms UTS du processus appelant. Si cet "
"attribut n'est pas défini, alors (comme pour B<fork>(2)) le processus est "
"créé dans le même espace de noms UTS que le processus appelant. Cet attribut "
"est sensé être utilisé pour l'implémentation de conteneurs."

# NOTE: other processes => all processes. Patch prepared.
#. type: Plain text
#: mageia-cauldron
msgid ""
"A UTS namespace is the set of identifiers returned by B<uname>(2); among "
"these, the domain name and the hostname can be modified by "
"B<setdomainname>(2)  and B<sethostname>(2), respectively.  Changes made to "
"the identifiers in a UTS namespace are visible to all other processes in the "
"same namespace, but are not visible to processes in other UTS namespaces."
msgstr ""
"Un espace de noms UTS est l'ensemble des identifiants renvoyés par "
"B<uname>(2) ; parmi lesquels le nom de domaine et le nom d'hôte peuvent être "
"modifiés respectivement à l'aide de B<setdomainname>(2) et "
"B<sethostname>(2). Les modifications apportés à ces identifiants dans un "
"espace de noms UTS sont visibles par tous les processus du même espace de "
"noms, mais ne sont pas visibles des processus des autres espaces de noms UTS."

#. type: Plain text
#: mageia-cauldron
msgid "For further information on UTS namespaces, see B<namespaces>(7)."
msgstr ""
"Pour obtenir plus d'informations sur les espaces de noms UTS, consultez "
"B<namespaces>(7)."

#. type: Plain text
#: mageia-cauldron
#, fuzzy
msgid ""
"Store the child thread ID at the location I<ptid> in the parent's memory.  "
"(In Linux 2.5.32-2.5.48 there was a flag B<CLONE_SETTID> that did this.)  "
"The store operation completes before B<clone>()  returns control to user "
"space."
msgstr ""
"Enregistrer l'ID du thread enfant à I<ptid> dans la mémoire du père et du "
"fils. (Dans Linux 2.5.32-2.5.48 il y a un attribut B<CLONE_SETTID> qui fait "
"cela.)"

#. type: Plain text
#: mageia-cauldron
#, fuzzy
msgid ""
"If B<CLONE_PID> is set, the child process is created with the same process "
"ID as the calling process.  This is good for hacking the system, but "
"otherwise of not much use.  From Linux 2.3.21 onward, this flag could be "
"specified only by the system boot process (PID 0).  The flag disappeared "
"completely from the kernel sources in Linux 2.5.16.  Since then, the kernel "
"silently ignores this bit if it is specified in I<flags>."
msgstr ""
"Si l'attribut B<CLONE_PID> est positionné, les processus appelant et fils "
"ont le même numéro de processus. C'est bien pour hacker le système, mais "
"autrement il n'est plus utilisé. Depuis 2.3.21, cet attribut ne peut être "
"utilisé que par le processus de démarrage du système (PID 0). Il a disparu "
"dans Linux 2.5.16."

#. type: Plain text
#: mageia-cauldron
#, fuzzy
msgid "The TLS (Thread Local Storage) descriptor is set to I<newtls>."
msgstr ""
"Le paramètre I<newtls> est le nouveau descripteur TLS (Thread Local "
"Storage). (Consultez B<set_thread_area>(2).)"

#. type: Plain text
#: mageia-cauldron
msgid ""
"The interpretation of I<newtls> and the resulting effect is architecture "
"dependent.  On x86, I<newtls> is interpreted as a I<struct user_desc\\ *> "
"(see B<set_thread_area>(2)).  On x86-64 it is the new value to be set for "
"the %fs base register (see the B<ARCH_SET_FS> argument to "
"B<arch_prctl>(2)).  On architectures with a dedicated TLS register, it is "
"the new value of that register."
msgstr ""

#. type: Plain text
#: mageia-cauldron
msgid ""
"If B<CLONE_SIGHAND> is not set, the child process inherits a copy of the "
"signal handlers of the calling process at the time B<clone>()  is called.  "
"Calls to B<sigaction>(2)  performed later by one of the processes have no "
"effect on the other process."
msgstr ""
"Si B<CLONE_SIGHAND> n'est pas utilisé, le processus fils hérite d'une copie "
"des gestionnaires de signaux de l'appelant lors de l'invocation de "
"B<clone>(). Les appels à B<sigaction>(2) effectués ensuite depuis un "
"processus n'ont pas d'effets sur l'autre processus."

#.  Precisely: Linux 2.6.0-test6
#. type: Plain text
#: mageia-cauldron
#, fuzzy
msgid ""
"Since Linux 2.6.0, I<flags> must also include B<CLONE_VM> if "
"B<CLONE_SIGHAND> is specified"
msgstr ""
"Depuis Linux 2.6.0-test6, l'attribut B<CLONE_VM> doit également être "
"spécifié dans I<flags> si B<CLONE_SIGHAND> l'est."

#. type: Plain text
#: mageia-cauldron
msgid ""
"The threads within a group can be distinguished by their (system-wide)  "
"unique thread IDs (TID).  A new thread's TID is available as the function "
"result returned to the caller of B<clone>(), and a thread can obtain its own "
"TID using B<gettid>(2)."
msgstr ""
"Les threads dans un groupe peuvent être distingués par leur identifiant de "
"thread (TID, unique sur le système). Le TID d'un nouveau thread est renvoyé "
"par B<clone>() au processus appelant, et un thread peut obtenir son propre "
"TID en utilisant B<gettid>(2)."

#. type: Plain text
#: mageia-cauldron
msgid ""
"When a call is made to B<clone>()  without specifying B<CLONE_THREAD>, then "
"the resulting thread is placed in a new thread group whose TGID is the same "
"as the thread's TID.  This thread is the I<leader> of the new thread group."
msgstr ""
"Quand B<clone>() est appelé sans positionner B<CLONE_THREAD>, le nouveau "
"thread est placé dans un nouveau groupe de thread dont le TGID est identique "
"au TID du nouveau thread. Ce thread est le I<leader> du nouveau groupe."

#. type: Plain text
#: mageia-cauldron
msgid ""
"A new thread created with B<CLONE_THREAD> has the same parent process as the "
"caller of B<clone>()  (i.e., like B<CLONE_PARENT>), so that calls to "
"B<getppid>(2)  return the same value for all of the threads in a thread "
"group.  When a B<CLONE_THREAD> thread terminates, the thread that created it "
"using B<clone>()  is not sent a B<SIGCHLD> (or other termination) signal; "
"nor can the status of such a thread be obtained using B<wait>(2).  (The "
"thread is said to be I<detached>.)"
msgstr ""
"Un nouveau thread créé en utilisant B<CLONE_THREAD> a le même processus père "
"que l'appelant de B<clone>() (de même qu'avec B<CLONE_PARENT>), ainsi les "
"appels à B<getppid>(2) renvoient la même valeur à tous les threads dans un "
"même groupe. Lorsqu'un thread créé avec B<CLONE_THREAD> termine, le thread "
"qui a appelé B<clone>() pour le créer ne reçoit pas le signal B<SIGCHLD> (ou "
"autre notification de terminaison)\\ ; de même, l'état d'un tel thread ne "
"peut être obtenu par B<wait>(2). Le thread est dit I<détaché>."

#.  Precisely: Linux 2.6.0-test6
#. type: Plain text
#: mageia-cauldron
#, fuzzy
msgid ""
"Since Linux 2.5.35, I<flags> must also include B<CLONE_SIGHAND> if "
"B<CLONE_THREAD> is specified (and note that, since Linux 2.6.0, "
"B<CLONE_SIGHAND> also requires B<CLONE_VM> to be included)."
msgstr ""
"Depuis Linux 2.5.35, l'attribut B<CLONE_SIGHAND> de I<flags> doit être "
"positionné si B<CLONE_THREAD> l'est. Depuis Linux 2.6.0-test6, "
"B<CLONE_SIGHAND> a également besoin de B<CLONE_THREAD>."

#. type: Plain text
#: mageia-cauldron
msgid ""
"A signal may be process-directed or thread-directed.  A process-directed "
"signal is targeted at a thread group (i.e., a TGID), and is delivered to an "
"arbitrarily selected thread from among those that are not blocking the "
"signal.  A signal may be process directed because it was generated by the "
"kernel for reasons other than a hardware exception, or because it was sent "
"using B<kill>(2)  or B<sigqueue>(3).  A thread-directed signal is targeted "
"at (i.e., delivered to)  a specific thread.  A signal may be thread directed "
"because it was sent using B<tgkill>(2)  or B<pthread_sigqueue>(3), or "
"because the thread executed a machine language instruction that triggered a "
"hardware exception (e.g., invalid memory access triggering B<SIGSEGV> or a "
"floating-point exception triggering B<SIGFPE>)."
msgstr ""

#. type: Plain text
#: mageia-cauldron
msgid ""
"If B<CLONE_VM> is not set, the child process runs in a separate copy of the "
"memory space of the calling process at the time of B<clone>().  Memory "
"writes or file mappings/unmappings performed by one of the processes do not "
"affect the other, as with B<fork>(2)."
msgstr ""
"Si B<CLONE_VM> n'est pas actif, le processus fils utilisera une copie "
"distincte de l'espace mémoire de l'appelant. Le cliché est réalisé lors de "
"l'invocation de B<clone>(). Les écritures ou les projections de fichiers en "
"mémoire effectuées par un processus n'affectent pas l'autre processus, comme "
"cela se passe avec B<fork>(2)."

#. type: Plain text
#: mageia-cauldron
msgid ""
"Note that the glibc B<clone>()  wrapper function makes some changes in the "
"memory pointed to by I<child_stack> (changes required to set the stack up "
"correctly for the child)  I<before> invoking the B<clone>()  system call.  "
"So, in cases where B<clone>()  is used to recursively create children, do "
"not use the buffer employed for the parent's stack as the stack of the child."
msgstr ""

#. type: Plain text
#: mageia-cauldron
#, fuzzy
msgid ""
"Another difference for the raw B<clone>()  system call is that the "
"I<child_stack> argument may be NULL, in which case the child uses a "
"duplicate of the parent's stack.  (Copy-on-write semantics ensure that the "
"child gets separate copies of stack pages when either process modifies the "
"stack.)  In this case, for correct operation, the B<CLONE_VM> option should "
"not be specified.  (If the child I<shares> the parent's memory because of "
"the use of the B<CLONE_VM> flag, then no copy-on-write duplication occurs "
"and chaos is likely to result.)"
msgstr ""
"Une autre différence\\ : pour l'appel système brut, l'argument "
"I<child_stack> peut être nul, puisque la sémantique de copie-en-écriture "
"assure que le fils recevra une copie indépendante des pages de la pile dès "
"qu'un des deux processus la modifiera. Pour que cela fonctionne, il faut "
"naturellement que B<CLONE_VM> ne soit pas présent."

#. type: Plain text
#: mageia-cauldron
msgid ""
"The raw system call interface on x86-64 and some other architectures "
"(including sh, tile, ia-64, and alpha) is:"
msgstr ""

#. type: Plain text
#: mageia-cauldron
#, fuzzy, no-wrap
msgid ""
"B<long clone(unsigned long >I<flags>B<, void *>I<child_stack>B<,>\n"
"B<           int *>I<ptid>B<, int *>I<ctid>B<,>\n"
"B<           unsigned long >I<newtls>B<);>\n"
msgstr ""
"B<long clone(unsigned long >I<flags>B<, void *>I<child_stack>B<,>\n"
"B<           void * >I<ptid>B<, void *>I<ctid>B<,>\n"
"B<           struct pt_regs *>I<regs>B<);>\n"

#. type: Plain text
#: mageia-cauldron
#, fuzzy, no-wrap
msgid ""
"B<long clone(unsigned long >I<flags>B<, void *>I<child_stack>B<,>\n"
"B<          int *>I<ptid>B<, unsigned long >I<newtls>B<,>\n"
"B<          int *>I<ctid>B<);>\n"
msgstr ""
"B<long clone(unsigned long >I<flags>B<, void *>I<child_stack>B<,>\n"
"B<          void *>I<ptid>B<, void *>I<ctid>B<,>\n"
"B<          struct pt_regs *>I<regs>B<);>\n"

#. type: Plain text
#: mageia-cauldron
#, fuzzy, no-wrap
msgid ""
"B<long clone(void *>I<child_stack>B<, unsigned long >I<flags>B<,>\n"
"B<           int *>I<ptid>B<, int *>I<ctid>B<,>\n"
"B<           unsigned long >I<newtls>B<);>\n"
msgstr ""
"B<long clone(unsigned long >I<flags>B<, void *>I<child_stack>B<,>\n"
"B<           void * >I<ptid>B<, void *>I<ctid>B<,>\n"
"B<           struct pt_regs *>I<regs>B<);>\n"

#. type: Plain text
#: mageia-cauldron
#, fuzzy, no-wrap
msgid ""
"B<long clone(unsigned long >I<flags>B<, void *>I<child_stack>B<,>\n"
"B<           int >I<stack_size>B<,>         /* Size of stack */\n"
"B<           int *>I<ptid>B<, int *>I<ctid>B<,>\n"
"B<           unsigned long >I<newtls>B<);>\n"
msgstr ""
"B<long clone(unsigned long >I<flags>B<, void *>I<child_stack>B<,>\n"
"B<           void * >I<ptid>B<, void *>I<ctid>B<,>\n"
"B<           struct pt_regs *>I<regs>B<);>\n"

#. type: Plain text
#: mageia-cauldron
#, no-wrap
msgid ""
"B<int __clone2(int (*>I<fn>B<)(void *), >\n"
"B<             void *>I<child_stack_base>B<, size_t >I<stack_size>B<,>\n"
"B<             int >I<flags>B<, void *>I<arg>B<, ... >\n"
"B<          /* pid_t *>I<ptid>B<, struct user_desc *>I<tls>B<, pid_t *>I<ctid>B< */ );>\n"
msgstr ""
"B<int __clone2(int (*>I<fn>B<)(void *), >\n"
"B<             void *>I<child_stack_base>B<, size_t >I<stack_size>B<,>\n"
"B<             int >I<flags>B<, void *>I<arg>B<, ... >\n"
"B<          /* pid_t *>I<ptid>B<, struct user_desc *>I<tls>B<, pid_t *>I<ctid>B< */ );>\n"

#. type: Plain text
#: mageia-cauldron
#, fuzzy, no-wrap
msgid ""
"B<long clone2(unsigned long >I<flags>B<, void *>I<child_stack_base>B<,>\n"
"B<            int >I<stack_size>B<,>         /* Size of stack */\n"
"B<            int *>I<ptid>B<, int *>I<ctid>B<,>\n"
"B<            unsigned long >I<tls>B<);>\n"
msgstr ""
"B<long clone(unsigned long >I<flags>B<, void *>I<child_stack>B<,>\n"
"B<           void * >I<ptid>B<, void *>I<ctid>B<,>\n"
"B<           struct pt_regs *>I<regs>B<);>\n"

#. type: Plain text
#: mageia-cauldron
msgid ""
"B<__clone2>()  operates in the same way as B<clone>(), except that "
"I<child_stack_base> points to the lowest address of the child's stack area, "
"and I<stack_size> specifies the size of the stack pointed to by "
"I<child_stack_base>."
msgstr ""
"B<__clone2>() fonctionne comme B<clone>(), aux différences suivantes près : "
"I<child_stack_base> pointe sur la plus petite adresse de la pile du fils, et "
"I<stack_size> indique la taille de la pile sur laquelle pointe "
"I<child_stack_base>."

#. type: Plain text
#: mageia-cauldron
msgid ""
"In Linux 2.4 and earlier, B<clone>()  does not take arguments I<ptid>, "
"I<tls>, and I<ctid>."
msgstr ""
"Sous Linux\\ 2.4 et plus anciens, B<clone>() ne prend pas les arguments "
"I<ptid>, I<tls> et I<ctid>."

#.  Precisely: Linux 2.6.0-test6
#. type: Plain text
#: mageia-cauldron
#, fuzzy
msgid ""
"B<CLONE_SIGHAND> was specified, but B<CLONE_VM> was not.  (Since Linux "
"2.6.0.)"
msgstr ""
"B<CLONE_SIGHAND> a été spécifié mais pas B<CLONE_VM> (depuis Linux 2.6.0-"
"test6)."

#.  .TP
#.  .B EINVAL
#.  Precisely one of
#.  .B CLONE_DETACHED
#.  and
#.  .B CLONE_THREAD
#.  was specified.
#.  (Since Linux 2.6.0-test6.)
#. type: Plain text
#: mageia-cauldron
msgid ""
"B<CLONE_THREAD> was specified, but B<CLONE_SIGHAND> was not.  (Since Linux "
"2.5.35.)"
msgstr ""
"B<CLONE_THREAD> a été spécifié mais pas B<CLONE_SIGHAND>  (depuis Linux "
"2.5.35)."

#. type: Plain text
#: mageia-cauldron
msgid ""
"B<CLONE_THREAD> was specified, but the current process previously called "
"B<unshare>(2)  with the B<CLONE_NEWPID> flag or used B<setns>(2)  to "
"reassociate itself with a PID namespace."
msgstr ""

#.  commit e66eded8309ebf679d3d3c1f5820d1f2ca332c71
#. type: Plain text
#: mageia-cauldron
msgid "Both B<CLONE_FS> and B<CLONE_NEWNS> were specified in I<flags>."
msgstr ""
"Les attributs B<CLONE_NEWNS> et B<CLONE_FS> figurent simultanément dans "
"I<flags>."

#. type: Plain text
#: mageia-cauldron
msgid "Both B<CLONE_NEWUSER> and B<CLONE_FS> were specified in I<flags>."
msgstr ""
"Les attributs B<CLONE_NEWUSER> et B<CLONE_FS> figurent simultanément dans "
"I<flags>."

#. type: Plain text
#: mageia-cauldron
msgid "Both B<CLONE_NEWIPC> and B<CLONE_SYSVSEM> were specified in I<flags>."
msgstr ""
"Les attributs B<CLONE_NEWIPC> et B<CLONE_SYSVSEM> figurent simultanément "
"dans I<flags>."

#. type: Plain text
#: mageia-cauldron
msgid ""
"One (or both) of B<CLONE_NEWPID> or B<CLONE_NEWUSER> and one (or both) of "
"B<CLONE_THREAD> or B<CLONE_PARENT> were specified in I<flags>."
msgstr ""
"Au moins l'un des attributs B<CLONE_NEWPID> ou B<CLONE_NEWUSER>, et au moins "
"l'un des attributs B<CLONE_THREAD> ou B<CLONE_PARENT> figurent simultanément "
"dans I<flags>."

#. type: Plain text
#: mageia-cauldron
#, fuzzy
msgid ""
"Returned by the glibc B<clone>()  wrapper function when I<fn> or "
"I<child_stack> is specified as NULL."
msgstr ""
"Renvoyée par B<clone>() quand une valeur nulle a été indiquée pour le "
"paramètre I<child_stack>."

#. type: Plain text
#: mageia-cauldron
msgid ""
"B<CLONE_NEWIPC> was specified in I<flags>, but the kernel was not configured "
"with the B<CONFIG_SYSVIPC> and B<CONFIG_IPC_NS> options."
msgstr ""
"B<CLONE_NEWIPC> a été spécifié dans I<flags>, mais le noyau n'a pas été "
"configuré avec les options B<CONFIG_SYSVIPC> et B<CONFIG_IPC_NS>."

#. type: Plain text
#: mageia-cauldron
msgid ""
"B<CLONE_NEWNET> was specified in I<flags>, but the kernel was not configured "
"with the B<CONFIG_NET_NS> option."
msgstr ""
"B<CLONE_NEWNET> a été spécifié dans I<flags>, mais le noyau n'a pas été "
"configuré avec l'option B<CONFIG_NET_NS>."

#. type: Plain text
#: mageia-cauldron
msgid ""
"B<CLONE_NEWPID> was specified in I<flags>, but the kernel was not configured "
"with the B<CONFIG_PID_NS> option."
msgstr ""
"B<CLONE_NEWPID> a été spécifié dans I<flags>, mais le noyau n'a pas été "
"configuré avec l'option B<CONFIG_PID_NS>."

#. type: Plain text
#: mageia-cauldron
#, fuzzy
msgid ""
"B<CLONE_NEWUSER> was specified in I<flags>, but the kernel was not "
"configured with the B<CONFIG_USER_NS> option."
msgstr ""
"B<CLONE_NEWUTS> a été spécifié dans I<flags>, mais le noyau n'a pas été "
"configuré avec l'option B<CONFIG_UTS>."

#. type: Plain text
#: mageia-cauldron
#, fuzzy
msgid ""
"B<CLONE_NEWUTS> was specified in I<flags>, but the kernel was not configured "
"with the B<CONFIG_UTS_NS> option."
msgstr ""
"B<CLONE_NEWUTS> a été spécifié dans I<flags>, mais le noyau n'a pas été "
"configuré avec l'option B<CONFIG_UTS>."

#. type: Plain text
#: mageia-cauldron
msgid ""
"I<child_stack> is not aligned to a suitable boundary for this architecture.  "
"For example, on aarch64, I<child_stack> must be a multiple of 16."
msgstr ""

#.  commit f2302505775fd13ba93f034206f1e2a587017929
#. type: Plain text
#: mageia-cauldron
#, fuzzy
msgid ""
"B<CLONE_NEWPID> was specified in flags, but the limit on the nesting depth "
"of PID namespaces would have been exceeded; see B<pid_namespaces>(7)."
msgstr ""
"B<CLONE_NEWUSER> a été spécifié dans I<flags>, et l'appel provoquerait un "
"dépassement de la limite du nombre maximum d'espace de noms utilisateur "
"imbriqués. Consultez B<user_namespaces>(7)."

#. type: Plain text
#: mageia-cauldron
msgid ""
"B<CLONE_NEWUSER> was specified in I<flags>, and the call would cause the "
"limit on the number of nested user namespaces to be exceeded.  See "
"B<user_namespaces>(7)."
msgstr ""
"B<CLONE_NEWUSER> a été spécifié dans I<flags>, et l'appel provoquerait un "
"dépassement de la limite du nombre maximum d'espace de noms utilisateur "
"imbriqués. Consultez B<user_namespaces>(7)."

#. type: Plain text
#: mageia-cauldron
msgid ""
"One of the values in I<flags> specified the creation of a new user "
"namespace, but doing so would have caused the limit defined by the "
"corresponding file in I</proc/sys/user> to be exceeded.  For further "
"details, see B<namespaces>(7)."
msgstr ""

#. type: Plain text
#: mageia-cauldron
msgid ""
"B<CLONE_NEWUSER> was specified in I<flags>, but either the effective user ID "
"or the effective group ID of the caller does not have a mapping in the "
"parent namespace (see B<user_namespaces>(7))."
msgstr ""
"B<CLONE_NEWUSER> a été spécifié dans I<flags>, mais l'identifiant "
"utilisateur effectif ou l'identifiant groupe effectif de l'appelant n'a pas "
"de correspondance dans l'espace de noms père (consultez "
"B<user_namespaces>(7))."

#.  commit 3151527ee007b73a0ebd296010f1c0454a919c7d
#.  FIXME What is the rationale for this restriction?
#. type: Plain text
#: mageia-cauldron
#, fuzzy
msgid ""
"B<CLONE_NEWUSER> was specified in I<flags> and the caller is in a chroot "
"environment (i.e., the caller's root directory does not match the root "
"directory of the mount namespace in which it resides)."
msgstr ""
"B<CLONE_NEWUSER> figure dans I<flags> et l'appelant se trouve dans un "
"environnement chroot (c'est-à-dire que le répertoire racine de l'appelant ne "
"correspondant pas au répertoire racine de l'espace de noms de montage dans "
"lequel il se trouve)."

#.  .SH VERSIONS
#.  There is no entry for
#.  .BR clone ()
#.  in libc5.
#.  glibc2 provides
#.  .BR clone ()
#.  as described in this manual page.
#. type: Plain text
#: mageia-cauldron
#, fuzzy
msgid ""
"B<CLONE_NEWUSER> was specified in I<flags>, and the limit on the number of "
"nested user namespaces would be exceeded.  See the discussion of the "
"B<ENOSPC> error above."
msgstr ""
"B<CLONE_NEWUSER> a été spécifié dans I<flags>, et l'appel provoquerait un "
"dépassement de la limite du nombre maximum d'espace de noms utilisateur "
"imbriqués. Consultez B<user_namespaces>(7)."

#. type: Plain text
#: mageia-cauldron
msgid ""
"B<clone>()  is Linux-specific and should not be used in programs intended to "
"be portable."
msgstr ""
"B<clone>() est spécifique à Linux et ne doit pas être utilisé dans des "
"programmes conçus pour être portables."

#. type: Plain text
#: mageia-cauldron
msgid ""
"Handlers registered using B<pthread_atfork>(3)  are not executed during a "
"call to B<clone>()."
msgstr ""

#. type: Plain text
#: mageia-cauldron
#, fuzzy
msgid ""
"For a while there was B<CLONE_DETACHED> (introduced in 2.5.32): parent wants "
"no child-exit signal.  In Linux 2.6.2, the need to give this flag together "
"with B<CLONE_THREAD> disappeared.  This flag is still defined, but has no "
"effect."
msgstr ""
"B<CLONE_DETACHED> a existé pendant un moment (introduit dans 2.5.32): le "
"père ne veut pas de signal à la mort du fils. Dans 2.6.2, la nécessité "
"d'utiliser ce paramètre avec B<CLONE_THREAD> a été supprimée. Cet attribut "
"est toujours défini, mais n'a plus aucun effet."

#. type: Plain text
#: mageia-cauldron
#, no-wrap
msgid ""
"#define _GNU_SOURCE\n"
"#include E<lt>sys/wait.hE<gt>\n"
"#include E<lt>sys/utsname.hE<gt>\n"
"#include E<lt>sched.hE<gt>\n"
"#include E<lt>string.hE<gt>\n"
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
"#include E<lt>unistd.hE<gt>\n"
msgstr ""
"#define _GNU_SOURCE\n"
"#include E<lt>sys/wait.hE<gt>\n"
"#include E<lt>sys/utsname.hE<gt>\n"
"#include E<lt>sched.hE<gt>\n"
"#include E<lt>string.hE<gt>\n"
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
"#include E<lt>unistd.hE<gt>\n"

#. type: Plain text
#: mageia-cauldron
#, no-wrap
msgid "    /* Allocate stack for child */\n"
msgstr "    /* Allouer la pile pour le processus fils */\n"

#. type: Plain text
#: mageia-cauldron
#, no-wrap
msgid ""
"    stack = malloc(STACK_SIZE);\n"
"    if (stack == NULL)\n"
"        errExit(\"malloc\");\n"
"    stackTop = stack + STACK_SIZE;  /* Assume stack grows downward */\n"
msgstr ""
"    stack = malloc(STACK_SIZE);\n"
"    if (stack == NULL)\n"
"        errExit(\"malloc\");\n"
"    stackTop = stack + STACK_SIZE;  /* Pile supposée s'étendre vers\n"
"                                       le bas */\n"

#. type: Plain text
#: mageia-cauldron
msgid ""
"B<fork>(2), B<futex>(2), B<getpid>(2), B<gettid>(2), B<kcmp>(2), "
"B<set_thread_area>(2), B<set_tid_address>(2), B<setns>(2), B<tkill>(2), "
"B<unshare>(2), B<wait>(2), B<capabilities>(7), B<namespaces>(7), "
"B<pthreads>(7)"
msgstr ""
"B<fork>(2), B<futex>(2), B<getpid>(2), B<gettid>(2), B<kcmp>(2), "
"B<set_thread_area>(2), B<set_tid_address>(2), B<setns>(2), B<tkill>(2), "
"B<unshare>(2), B<wait>(2), B<capabilities>(7), B<namespaces>(7), "
"B<pthreads>(7)"

#. type: Plain text
#: mageia-cauldron
msgid ""
"This page is part of release 5.01 of the Linux I<man-pages> project.  A "
"description of the project, information about reporting bugs, and the latest "
"version of this page, can be found at \\%https://www.kernel.org/doc/man-"
"pages/."
msgstr ""
"Cette page fait partie de la publication 5.01 du projet I<man-pages> Linux. "
"Une description du projet et des instructions pour signaler des anomalies "
"peuvent être trouvées à l'adresse \\%https://www.kernel.org/doc/man-pages/."
