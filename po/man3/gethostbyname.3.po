# German translation of manpages
# This file is distributed under the same license as the manpages-de package.
# Copyright © of this file:
msgid ""
msgstr ""
"Project-Id-Version: manpages-de\n"
"POT-Creation-Date: 2011-08-19 21:55+0300\n"
"PO-Revision-Date: 2010-09-26 18:28+0200\n"
"Last-Translator: Tobias Quathamer<toddy@debian.org>\n"
"Language-Team: German <debian-l10n-german@lists.debian.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: TH
#, no-wrap
msgid "GETHOSTBYNAME"
msgstr "GETHOSTBYNAME"

#. type: TH
#, no-wrap
msgid "2010-10-04"
msgstr "4. Oktober 2010"

#. type: TH
#, no-wrap
msgid "Linux Programmer's Manual"
msgstr "Linux-Programmierhandbuch"

#. type: SH
#, no-wrap
msgid "NAME"
msgstr "BEZEICHNUNG"

#. type: Plain text
msgid ""
"gethostbyname, gethostbyaddr, sethostent, gethostent, endhostent, h_errno, "
"herror, hstrerror, gethostbyaddr_r, gethostbyname2, gethostbyname2_r, "
"gethostbyname_r, gethostent_r - get network host entry"
msgstr ""

#. type: SH
#, no-wrap
msgid "SYNOPSIS"
msgstr "ÜBERSICHT"

#. type: Plain text
#, fuzzy, no-wrap
msgid ""
"B<#include E<lt>netdb.hE<gt>>\n"
"B<extern int h_errno;>\n"
msgstr "B<#include E<lt>stdlib.hE<gt>>\n"

#. type: Plain text
#, fuzzy, no-wrap
msgid "B<struct hostent *gethostbyname(const char *>I<name>B<);>\n"
msgstr "B<size_t strlen(const char *>I<s>B<);>\n"

#. type: Plain text
#, fuzzy, no-wrap
msgid ""
"B<#include E<lt>sys/socket.hE<gt>>       /* for AF_INET */\n"
"B<struct hostent *gethostbyaddr(const void *>I<addr>B<,>\n"
"B<                              socklen_t >I<len>B<, int >I<type>B<);>\n"
msgstr "B<struct hostent *gethostbyaddr(const char *>I<addr>B<, int >I<len>B<, int >I<type>B<);>\n"

#. type: Plain text
#, fuzzy, no-wrap
msgid "B<void sethostent(int >I<stayopen>B<);>\n"
msgstr "B<size_t strlen(const char *>I<s>B<);>\n"

#. type: Plain text
#, fuzzy, no-wrap
msgid "B<void endhostent(void);>\n"
msgstr "B<void endhostent(void);>\n"

#. type: Plain text
#, fuzzy, no-wrap
msgid "B<void herror(const char *>I<s>B<);>\n"
msgstr "B<size_t strlen(const char *>I<s>B<);>\n"

#. type: Plain text
#, fuzzy, no-wrap
msgid "B<const char *hstrerror(int >I<err>B<);>\n"
msgstr "B<char *index(const char *>I<s>B<, int >I<c>B<);>\n"

#. type: Plain text
#, no-wrap
msgid "/* System V/POSIX extension */\n"
msgstr ""

#. type: Plain text
#, fuzzy, no-wrap
msgid "B<struct hostent *gethostent(void);>\n"
msgstr "B<struct hostent *gethostbyname(const char *>I<name>B<);>\n"

#. type: Plain text
#, no-wrap
msgid "/* GNU extensions */\n"
msgstr ""

#. type: Plain text
#, fuzzy, no-wrap
msgid "B<struct hostent *gethostbyname2(const char *>I<name>B<, int >I<af>B<);>\n"
msgstr "B<char *index(const char *>I<s>B<, int >I<c>B<);>\n"

#. type: Plain text
#, no-wrap
msgid ""
"B<int gethostent_r(>\n"
"B<        struct hostent *>I<ret>B<, char *>I<buf>B<, size_t >I<buflen>B<,>\n"
"B<        struct hostent **>I<result>B<, int *>I<h_errnop>B<);>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"B<int gethostbyaddr_r(const void *>I<addr>B<, socklen_t >I<len>B<, int >I<type>B<,>\n"
"B<        struct hostent *>I<ret>B<, char *>I<buf>B<, size_t >I<buflen>B<,>\n"
"B<        struct hostent **>I<result>B<, int *>I<h_errnop>B<);>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"B<int gethostbyname_r(const char *>I<name>B<,>\n"
"B<        struct hostent *>I<ret>B<, char *>I<buf>B<, size_t >I<buflen>B<,>\n"
"B<        struct hostent **>I<result>B<, int *>I<h_errnop>B<);>\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"B<int gethostbyname2_r(const char *>I<name>B<, int >I<af,>\n"
"B<        struct hostent *>I<ret>B<, char *>I<buf>B<, size_t >I<buflen>B<,>\n"
"B<        struct hostent **>I<result>B<, int *>I<h_errnop>B<);>\n"
msgstr ""

#. type: Plain text
msgid ""
"Feature Test Macro Requirements for glibc (see B<feature_test_macros>(7)):"
msgstr "Mit Glibc erforderliche Makros (siehe B<feature_test_macros>(7)):"

#. type: Plain text
msgid ""
"B<gethostbyname2>(), B<gethostent_r>(), B<gethostbyaddr_r>(), "
"B<gethostbyname_r>(), B<gethostbyname2_r>():"
msgstr ""

#. type: Plain text
#, fuzzy
msgid "_BSD_SOURCE || _SVID_SOURCE"
msgstr "B<_SVID_SOURCE>"

#. type: Plain text
msgid "B<herror>(), B<hstrerror>():"
msgstr ""

#. type: TP
#, no-wrap
msgid "Since glibc 2.8:"
msgstr ""

#. type: Plain text
#, fuzzy
msgid "_BSD_SOURCE || _SVID_SOURCE || _GNU_SOURCE"
msgstr "B<_SVID_SOURCE>"

#. type: TP
#, no-wrap
msgid "Before glibc 2.8:"
msgstr ""

#. type: Plain text
msgid "none"
msgstr ""

#. type: SH
#, no-wrap
msgid "DESCRIPTION"
msgstr "BESCHREIBUNG"

#. type: Plain text
msgid ""
"The B<gethostbyname*>()  and B<gethostbyaddr*>()  functions are obsolete.  "
"Applications should use B<getaddrinfo>(3)  and B<getnameinfo>(3)  instead."
msgstr ""

#. type: Plain text
msgid ""
"The B<gethostbyname>()  function returns a structure of type I<hostent> for "
"the given host I<name>.  Here I<name> is either a hostname, or an IPv4 "
"address in standard dot notation (as for B<inet_addr>(3)), or an IPv6 "
"address in colon (and possibly dot) notation.  (See RFC\\ 1884 for the "
"description of IPv6 addresses.)  If I<name> is an IPv4 or IPv6 address, no "
"lookup is performed and B<gethostbyname>()  simply copies I<name> into the "
"I<h_name> field and its I<struct in_addr> equivalent into the I<h_addr_list"
"[0]> field of the returned I<hostent> structure.  If I<name> doesn't end in "
"a dot and the environment variable B<HOSTALIASES> is set, the alias file "
"pointed to by B<HOSTALIASES> will first be searched for I<name> (see "
"B<hostname>(7)  for the file format).  The current domain and its parents "
"are searched unless I<name> ends in a dot."
msgstr ""

#. type: Plain text
#, fuzzy
msgid ""
"The B<gethostbyaddr>()  function returns a structure of type I<hostent> for "
"the given host address I<addr> of length I<len> and address type I<type>.  "
"Valid address types are B<AF_INET> and B<AF_INET6>.  The host address "
"argument is a pointer to a struct of a type depending on the address type, "
"for example a I<struct in_addr *> (probably obtained via a call to "
"B<inet_addr>(3))  for address type B<AF_INET>."
msgstr ""
"Die B<gethostbyaddr()>-Funktion liefert für die angegebene Adresse I<addr> "
"mit der Länge I<len> vom Adresstyp I<type> eine Struktur vom Typ I<hostent> "
"zurück. Der z.Zt. einzig gültige Adresstyp ist AF_INET."

#. type: Plain text
#, fuzzy
msgid ""
"The B<sethostent>()  function specifies, if I<stayopen> is true (1), that a "
"connected TCP socket should be used for the name server queries and that the "
"connection should remain open during successive queries.  Otherwise, name "
"server queries will use UDP datagrams."
msgstr ""
"Die B<sethostent()>-Funktion legt fest, falls I<stayopen> wahr (1) ist, dass "
"eine bestehende TCP-Verbindung für Nameserveranfragen genutzt werden soll "
"und dass die Verbindung für die nachfolgenden Anfragen offen bleiben soll. "
"Ansonsten werden für Nameserveranfragen UDP-Datagramme benutzt."

#. type: Plain text
#, fuzzy
msgid ""
"The B<endhostent>()  function ends the use of a TCP connection for name "
"server queries."
msgstr ""
"Die B<endhostent()>-Funktion beendet die Benutzung einer TCP-Verbindung für "
"Namerserveranfragen."

#. type: Plain text
#, fuzzy
msgid ""
"The (obsolete)  B<herror>()  function prints the error message associated "
"with the current value of I<h_errno> on I<stderr>."
msgstr ""
"Die B<herror()>-Funktion gibt die zum aktuellen Wert von I<h_errno> "
"gehörende Fehlermeldung auf stderr aus."

#. type: Plain text
msgid ""
"The (obsolete)  B<hstrerror>()  function takes an error number (typically "
"I<h_errno>) and returns the corresponding message string."
msgstr ""

#.  (See
#.  .BR resolv+ (8)).
#. type: Plain text
#, fuzzy
msgid ""
"The domain name queries carried out by B<gethostbyname>()  and "
"B<gethostbyaddr>()  use a combination of any or all of the name server "
"B<named>(8), a broken out line from I</etc/hosts>, and the Network "
"Information Service (NIS or YP), depending upon the contents of the I<order> "
"line in I</etc/host.conf>.  The default action is to query B<named>(8), "
"followed by I</etc/hosts>."
msgstr ""
"Die Funktionen B<gethostbyname()> und B<gethostbyaddr()> benutzen für ihre "
"Anfragen den Nameserver B<named>(8), die Datei I</etc/hosts> und den Network "
"Information Service (NIS oder YP). Was davon und in welcher Reihenfolge "
"benutzt wird, bestimmt die I<order>-Zeile in der Datei I</etc/host.conf. "
"(Siehe dazu auch> B<resolv+>(8)  ) Das Standardverhalten ist zuerst den "
"Nameserver zu befragen und danach die Datei I</etc/hosts> zu durchsuchen."

#. type: Plain text
#, fuzzy
msgid "The I<hostent> structure is defined in I<E<lt>netdb.hE<gt>> as follows:"
msgstr "Die Struktur I<group> ist in I<E<lt>pwd.hE<gt>> wie folgt definiert:"

#. type: Plain text
#, fuzzy, no-wrap
msgid ""
"struct hostent {\n"
"    char  *h_name;            /* official name of host */\n"
"    char **h_aliases;         /* alias list */\n"
"    int    h_addrtype;        /* host address type */\n"
"    int    h_length;          /* length of address */\n"
"    char **h_addr_list;       /* list of addresses */\n"
"}\n"
"#define h_addr h_addr_list[0] /* for backward compatibility */\n"
msgstr ""
"struct hostent {\n"
"\tchar\t*h_name;\t/* Offizieller Name des Rechners */\n"
"\tchar\t**h_aliases;\t/* Aliasliste */\n"
"\tint\th_addrtype;\t/* Host-Adress-Typ */\n"
"\tint\th_length;\t/* Adresslänge */\n"
"\tchar\t**h_addr_list;\t/* Adressliste */\n"
"}\n"
"#define h_addr\th_addr_list[0]\t/* für Abwärtskompatibilität */\n"

#. type: Plain text
#, fuzzy
msgid "The members of the I<hostent> structure are:"
msgstr "Die Felder der I<hostent>-Struktur sind:"

#. type: TP
#, fuzzy, no-wrap
msgid "I<h_name>"
msgstr "I<h_name>"

#. type: Plain text
#, fuzzy
msgid "The official name of the host."
msgstr "Der Offizielle Name des Rechners."

#. type: TP
#, fuzzy, no-wrap
msgid "I<h_aliases>"
msgstr "I<h_aliases>"

#. type: Plain text
#, fuzzy
msgid ""
"An array of alternative names for the host, terminated by a NULL pointer."
msgstr "Ein Null-terminiertes Array mit den alternativen Namen des Rechner."

#. type: TP
#, fuzzy, no-wrap
msgid "I<h_addrtype>"
msgstr "I<h_addrtype>"

#. type: Plain text
#, fuzzy
msgid "The type of address; always B<AF_INET> or B<AF_INET6> at present."
msgstr "Adresstyp, z.Zt. immer AF_INET."

#. type: TP
#, fuzzy, no-wrap
msgid "I<h_length>"
msgstr "I<h_length>"

#. type: Plain text
#, fuzzy
msgid "The length of the address in bytes."
msgstr "Die Länge der Adresse in Bytes."

#. type: TP
#, fuzzy, no-wrap
msgid "I<h_addr_list>"
msgstr "I<h_addr_list>"

#. type: Plain text
#, fuzzy
msgid ""
"An array of pointers to network addresses for the host (in network byte "
"order), terminated by a NULL pointer."
msgstr ""
"Ein Null-terminiertes Array von Netzwerkadressen des Rechners in der "
"Netzwerk-Byte-Reihenfolge (network byte order)."

#. type: TP
#, fuzzy, no-wrap
msgid "I<h_addr>"
msgstr "I<h_addr>"

#. type: Plain text
#, fuzzy
msgid "The first address in I<h_addr_list> for backward compatibility."
msgstr "Die erste Adresse in I<h_addr_list> für Abwärtskompatibilität."

#. type: SH
#, no-wrap
msgid "RETURN VALUE"
msgstr "RÜCKGABEWERT"

#. type: Plain text
#, fuzzy
msgid ""
"The B<gethostbyname>()  and B<gethostbyaddr>()  functions return the "
"I<hostent> structure or a NULL pointer if an error occurs.  On error, the "
"I<h_errno> variable holds an error number.  When non-NULL, the return value "
"may point at static data, see the notes below."
msgstr ""
"Die B<gethostbyname()-und> B<gethostbyaddr()>-Funktionen liefern eine "
"I<hostent>-Struktur zurück. Bei einem Fehler wird ein NULL-Zeiger "
"zurückgegeben, in diesem Fall enthält die Variable I<h_errno> die "
"Fehlernummer."

#. type: SH
#, no-wrap
msgid "ERRORS"
msgstr "FEHLER"

#. type: Plain text
#, fuzzy
msgid "The variable I<h_errno> can have the following values:"
msgstr "Die Variable I<h_errno> kann folgende Werte annehmen."

#. type: TP
#, fuzzy, no-wrap
msgid "B<HOST_NOT_FOUND>"
msgstr "B<HOST_NOT_FOUND>"

#. type: Plain text
#, fuzzy
msgid "The specified host is unknown."
msgstr "Der angegebene Rechner ist unbekannt."

#. type: TP
#, fuzzy, no-wrap
msgid "B<NO_ADDRESS> or B<NO_DATA>"
msgstr "B<NO_ADDRESS>"

#. type: Plain text
#, fuzzy
msgid "The requested name is valid but does not have an IP address."
msgstr ""
"Der angegebene Name ist gültig, aber es existiert dazu keine IP-Adresse."

#. type: TP
#, fuzzy, no-wrap
msgid "B<NO_RECOVERY>"
msgstr "B<EOVERFLOW>"

#. type: Plain text
#, fuzzy
msgid "A nonrecoverable name server error occurred."
msgstr "Ein nichtbehebbarer Nameserverfehler ist aufgetreten."

#. type: TP
#, fuzzy, no-wrap
msgid "B<TRY_AGAIN>"
msgstr "B<EAGAIN>"

#. type: Plain text
#, fuzzy
msgid ""
"A temporary error occurred on an authoritative name server.  Try again later."
msgstr ""
"Beim zuständigen Nameserver ist ein vorübergehender Fehler aufgetreten.  "
"Versuchen Sie es später nochmals."

#. type: SH
#, no-wrap
msgid "FILES"
msgstr "DATEIEN"

#. type: TP
#, fuzzy, no-wrap
msgid "I</etc/host.conf>"
msgstr "I</etc/group>"

#. type: Plain text
#, fuzzy
msgid "resolver configuration file"
msgstr "Konfigurationsdatei des Namenauflösers (resolver)."

#. type: TP
#, fuzzy, no-wrap
msgid "I</etc/hosts>"
msgstr "I</etc/passwd>"

#. type: Plain text
#, fuzzy
msgid "host database file"
msgstr "Passwortdatenbank"

#. type: TP
#, fuzzy, no-wrap
msgid "I</etc/nsswitch.conf>"
msgstr "I</etc/passwd>"

#. type: Plain text
#, fuzzy
msgid "name service switch configuration"
msgstr "Konfigurationsdatei des Namenauflösers (resolver)."

#. type: SH
#, no-wrap
msgid "CONFORMING TO"
msgstr "KONFORM ZU"

#. type: Plain text
msgid ""
"POSIX.1-2001 specifies B<gethostbyname>(), B<gethostbyaddr>(), B<sethostent>"
"(), B<endhostent>(), B<gethostent>(), and I<h_errno>; B<gethostbyname>(), "
"B<gethostbyaddr>(), and I<h_errno> are marked obsolescent in that standard.  "
"POSIX.1-2008 removes the specifications of B<gethostbyname>(), "
"B<gethostbyaddr>(), and I<h_errno>, recommending the use of B<getaddrinfo>"
"(3)  and B<getnameinfo>(3)  instead."
msgstr ""

#. type: SH
#, no-wrap
msgid "NOTES"
msgstr "ANMERKUNGEN"

#. type: Plain text
msgid ""
"The functions B<gethostbyname>()  and B<gethostbyaddr>()  may return "
"pointers to static data, which may be overwritten by later calls.  Copying "
"the I<struct hostent> does not suffice, since it contains pointers; a deep "
"copy is required."
msgstr ""

#. type: Plain text
msgid ""
"In the original BSD implementation the I<len> argument of B<gethostbyname>"
"()  was an I<int>.  The SUSv2 standard is buggy and declares the I<len> "
"argument of B<gethostbyaddr>()  to be of type I<size_t>.  (That is wrong, "
"because it has to be I<int>, and I<size_t> is not.  POSIX.1-2001 makes it "
"I<socklen_t>, which is OK.)  See also B<accept>(2)."
msgstr ""

#. type: Plain text
msgid ""
"The BSD prototype for B<gethostbyaddr>()  uses I<const char *> for the first "
"argument."
msgstr ""

#. type: SS
#, no-wrap
msgid "System V/POSIX Extension"
msgstr ""

#.  e.g., Linux, FreeBSD, UnixWare, HP-UX
#.  e.g., FreeBSD, AIX
#. type: Plain text
msgid ""
"POSIX requires the B<gethostent>()  call, that should return the next entry "
"in the host data base.  When using DNS/BIND this does not make much sense, "
"but it may be reasonable if the host data base is a file that can be read "
"line by line.  On many systems a routine of this name reads from the file I</"
"etc/hosts>.  It may be available only when the library was built without DNS "
"support.  The glibc version will ignore ipv6 entries.  This function is not "
"reentrant, and glibc adds a reentrant version B<gethostent_r>()."
msgstr ""

#. type: SS
#, no-wrap
msgid "GNU Extensions"
msgstr ""

#. type: Plain text
msgid ""
"Glibc2 also has a B<gethostbyname2>()  that works like B<gethostbyname>(), "
"but permits to specify the address family to which the address must belong."
msgstr ""

#. type: Plain text
msgid ""
"Glibc2 also has reentrant versions B<gethostent_r>(), B<gethostbyaddr_r>(), "
"B<gethostbyname_r>()  and B<gethostbyname2_r>().  The caller supplies a "
"I<hostent> structure I<ret> which will be filled in on success, and a "
"temporary work buffer I<buf> of size I<buflen>.  After the call, I<result> "
"will point to the result on success.  In case of an error or if no entry is "
"found I<result> will be NULL.  The functions return 0 on success and a "
"nonzero error number on failure.  In addition to the errors returned by the "
"nonreentrant versions of these functions, if I<buf> is too small, the "
"functions will return B<ERANGE>, and the call should be retried with a "
"larger buffer.  The global variable I<h_errno> is not modified, but the "
"address of a variable in which to store error numbers is passed in "
"I<h_errnop>."
msgstr ""

#. type: SH
#, no-wrap
msgid "BUGS"
msgstr "FEHLER"

#.  http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=482973
#. type: Plain text
msgid ""
"B<gethostbyname>()  does not recognize components of a dotted IPv4 address "
"string that are expressed in hexadecimal."
msgstr ""

#. type: SH
#, no-wrap
msgid "SEE ALSO"
msgstr "SIEHE AUCH"

#.  .BR getipnodebyaddr (3),
#.  .BR getipnodebyname (3),
#.  .BR resolv+ (8)
#. type: Plain text
msgid ""
"B<getaddrinfo>(3), B<getnameinfo>(3), B<inet>(3), B<inet_ntop>(3), "
"B<inet_pton>(3), B<resolver>(3), B<hosts>(5), B<nsswitch.conf>(5), "
"B<hostname>(7), B<named>(8)"
msgstr ""

#. type: SH
#, no-wrap
msgid "COLOPHON"
msgstr "KOLOPHON"

#. type: Plain text
msgid ""
"This page is part of release 3.32 of the Linux I<man-pages> project.  A "
"description of the project, and information about reporting bugs, can be "
"found at http://www.kernel.org/doc/man-pages/."
msgstr ""
"Diese Seite ist Teil der Veröffentlichung 3.32 des Projekts Linux-I<man-"
"pages>. Eine Beschreibung des Projekts und Informationen, wie Fehler "
"gemeldet werden können, finden sich unter http://www.kernel.org/doc/man-"
"pages/."
