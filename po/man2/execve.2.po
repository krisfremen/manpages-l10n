# German translation of manpages
# This file is distributed under the same license as the manpages-de package.
# Copyright © of this file:
# Helge Kreutzmann <debian@helgefjell.de>, 2012-2014, 2016.
msgid ""
msgstr ""
"Project-Id-Version: manpages-de\n"
"POT-Creation-Date: 2016-07-20 08:49+0200\n"
"PO-Revision-Date: 2016-06-02 20:39+0200\n"
"Last-Translator: MEIN NAME <EMAIL>\n"
"Language-Team: German <debian-l10n-german@lists.debian.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: TH
#, no-wrap
msgid "EXECVE"
msgstr "EXECVE"

#. type: TH
#, no-wrap
msgid "2016-03-15"
msgstr "15. März 2016"

#. type: TH
#, no-wrap
msgid "Linux"
msgstr "Linux"

#. type: TH
#, no-wrap
msgid "Linux Programmer's Manual"
msgstr "Linux-Programmierhandbuch"

#. type: SH
#, no-wrap
msgid "NAME"
msgstr "BEZEICHNUNG"

#. type: Plain text
msgid "execve - execute program"
msgstr "execve - Programme ausführen"

#. type: SH
#, no-wrap
msgid "SYNOPSIS"
msgstr "ÜBERSICHT"

#. type: Plain text
msgid "B<#include E<lt>unistd.hE<gt>>"
msgstr "B<#include E<lt>unistd.hE<gt>>"

#. type: Plain text
msgid "B<int execve(const char *>I<filename>B<, char *const >I<argv>B<[], >"
msgstr "B<int execve(const char *>I<filename>B<, char *const >I<argv>B<[], >"

#. type: Plain text
msgid "B< char *const >I<envp>B<[]);>"
msgstr "B< char *const >I<envp>B<[]);>"

#. type: SH
#, no-wrap
msgid "DESCRIPTION"
msgstr "BESCHREIBUNG"

#. type: Plain text
msgid ""
"B<execve>()  executes the program pointed to by I<filename>.  I<filename> "
"must be either a binary executable, or a script starting with a line of the "
"form:"
msgstr ""
"B<execve>() führt das Programm aus, auf das I<filename> verweist. "
"I<filename> muss entweder ein binäres ausführbares Programm oder ein Skript "
"sein, das mit einer Zeile der folgenden Form beginnt:"

#. type: Plain text
#, no-wrap
msgid "B<#!> I<interpreter >[optional-arg]\n"
msgstr "B<#!> I<Interpreter >[Optionale-Arg]\n"

#. type: Plain text
msgid "For details of the latter case, see \"Interpreter scripts\" below."
msgstr ""
"Für Details über den zweiten Fall lesen Sie »Interpreter-Skripte« weiter "
"unten."

#. type: Plain text
msgid ""
"I<argv> is an array of argument strings passed to the new program.  By "
"convention, the first of these strings should contain the filename "
"associated with the file being executed.  I<envp> is an array of strings, "
"conventionally of the form B<key=value>, which are passed as environment to "
"the new program.  Both I<argv> and I<envp> must be terminated by a null "
"pointer.  The argument vector and environment can be accessed by the called "
"program's main function, when it is defined as:"
msgstr ""
"I<argv> ist ein Feld von Argumentenzeichenketten, die an das neue Programm "
"übergeben werden. Per Konvention sollte die erste dieser Zeichenketten den "
"Dateinnamen, der zu der ausgeführten Datei gehört, enthalten. I<envp> ist "
"ein Feld von Zeichenketten, das per Konvention die Form B<Schlüssel=Wert> "
"haben sollte, das an die Umgebung des neuen Programms übergeben wird. Sowohl "
"I<argv> und I<envp> müssen durch einen NULL-Zeiger terminiert werden. Auf "
"den Argumentzeiger und die Umgebung kann von der Main-Funktion des "
"aufgerufenen Programms zugegriffen werden, wenn sie wie folgt definiert ist:"

#. type: Plain text
#, no-wrap
msgid "int main(int argc, char *argv[], char *envp[])\n"
msgstr "int main(int argc, char *argv[], char *envp[])\n"

#. type: Plain text
msgid ""
"B<execve>()  does not return on success, and the text, data, bss, and stack "
"of the calling process are overwritten by that of the program loaded."
msgstr ""
"B<execve>() kehrt bei Erfolg nicht zurück und text, data, bss und stack des "
"aufrufenden Prozesses werden durch die des geladenen Programms überschrieben."

#. type: Plain text
msgid ""
"If the current program is being ptraced, a B<SIGTRAP> is sent to it after a "
"successful B<execve>()."
msgstr ""

#. type: Plain text
msgid ""
"If the set-user-ID bit is set on the program file pointed to by I<filename>, "
"and the underlying filesystem is not mounted I<nosuid> (the B<MS_NOSUID> "
"flag for B<mount>(2)), and the calling process is not being ptraced, then "
"the effective user ID of the calling process is changed to that of the owner "
"of the program file.  Similarly, when the set-group-ID bit of the program "
"file is set the effective group ID of the calling process is set to the "
"group of the program file."
msgstr ""

#. type: Plain text
msgid ""
"The effective user ID of the process is copied to the saved set-user-ID; "
"similarly, the effective group ID is copied to the saved set-group-ID.  This "
"copying takes place after any effective ID changes that occur because of the "
"set-user-ID and set-group-ID mode bits."
msgstr ""

#. type: Plain text
msgid ""
"If the executable is an a.out dynamically linked binary executable "
"containing shared-library stubs, the Linux dynamic linker B<ld.so>(8)  is "
"called at the start of execution to bring needed shared objects into memory "
"and link the executable with them."
msgstr ""

#. type: Plain text
msgid ""
"If the executable is a dynamically linked ELF executable, the interpreter "
"named in the PT_INTERP segment is used to load the needed shared objects.  "
"This interpreter is typically I</lib/ld-linux.so.2> for binaries linked with "
"glibc (see B<ld-linux.so>(8))."
msgstr ""

#. type: Plain text
msgid ""
"All process attributes are preserved during an B<execve>(), except the "
"following:"
msgstr ""
"Alle außer den nachfolgend aufgeführten Prozessattributen werden durch ein "
"B<execve>() erhalten:"

#. type: IP
#, no-wrap
msgid "*"
msgstr "*"

#. type: Plain text
msgid ""
"The dispositions of any signals that are being caught are reset to the "
"default (B<signal>(7))."
msgstr ""

#. type: Plain text
msgid "Any alternate signal stack is not preserved (B<sigaltstack>(2))."
msgstr ""

#. type: Plain text
msgid "Memory mappings are not preserved (B<mmap>(2))."
msgstr ""

#. type: Plain text
msgid "Attached System\\ V shared memory segments are detached (B<shmat>(2))."
msgstr ""

#. type: Plain text
msgid "POSIX shared memory regions are unmapped (B<shm_open>(3))."
msgstr ""

#. type: Plain text
msgid "Open POSIX message queue descriptors are closed (B<mq_overview>(7))."
msgstr ""

#. type: Plain text
msgid "Any open POSIX named semaphores are closed (B<sem_overview>(7))."
msgstr ""

#. type: Plain text
msgid "POSIX timers are not preserved (B<timer_create>(2))."
msgstr ""

#. type: Plain text
msgid "Any open directory streams are closed (B<opendir>(3))."
msgstr ""

#. type: Plain text
msgid "Memory locks are not preserved (B<mlock>(2), B<mlockall>(2))."
msgstr "Speichersperren werden nicht erhalten (B<mlock>(2), B<mlockall>(2))."

#. type: Plain text
msgid "Exit handlers are not preserved (B<atexit>(3), B<on_exit>(3))."
msgstr ""

#. type: Plain text
msgid ""
"The floating-point environment is reset to the default (see B<fenv>(3))."
msgstr ""
"Die Gleitkomma-Umgebung wird auf den Standardwert zurückgesetzt (siehe "
"B<fenv>(3))."

#. type: Plain text
msgid ""
"The process attributes in the preceding list are all specified in POSIX.1.  "
"The following Linux-specific process attributes are also not preserved "
"during an B<execve>():"
msgstr ""
"Die Prozessattribute in der vorstehenden Liste sind alle in POSIX.1 "
"spezifiziert. Die folgenden Linux-spezifischen Prozessattribute werden auch "
"während eines B<execve>() nicht erhalten:"

#. type: Plain text
msgid ""
"The B<prctl>(2)  B<PR_SET_DUMPABLE> flag is set, unless a set-user-ID or set-"
"group ID program is being executed, in which case it is cleared."
msgstr ""
"Der B<prctl>(2)-Schalter B<PR_SET_DUMPABLE> wird gesetzt. Wird ein set-user-"
"ID- oder set-group-ID-Programm ausgeführt, dann wird er zurückgesetzt."

#. type: Plain text
msgid "The B<prctl>(2)  B<PR_SET_KEEPCAPS> flag is cleared."
msgstr "Der B<prctl>(2)-Schalter B<PR_SET_KEEPCAPS> wird zurückgesetzt."

#. type: Plain text
msgid ""
"(Since Linux 2.4.36 / 2.6.23)  If a set-user-ID or set-group-ID program is "
"being executed, then the parent death signal set by B<prctl>(2)  "
"B<PR_SET_PDEATHSIG> flag is cleared."
msgstr ""

#. type: Plain text
msgid ""
"The process name, as set by B<prctl>(2)  B<PR_SET_NAME> (and displayed by "
"I<ps\\ -o comm>), is reset to the name of the new executable file."
msgstr ""
"Der Prozessname, wie er von B<prctl>(2) B<PR_SET_NAME> gesetzt (und durch "
"I<ps\\ -o comm> angezeigt) wird, wird auf den Namen des ausführbaren "
"Programms zurückgesetzt."

#. type: Plain text
msgid ""
"The B<SECBIT_KEEP_CAPS> I<securebits> flag is cleared.  See "
"B<capabilities>(7)."
msgstr ""

#. type: Plain text
msgid "The termination signal is reset to B<SIGCHLD> (see B<clone>(2))."
msgstr ""
"Das Terminierungssignal wird auf B<SIGCHLD> zurückgesetzt (siehe "
"B<clone>(2))."

#. type: Plain text
msgid ""
"The file descriptor table is unshared, undoing the effect of the "
"B<CLONE_FILES> flag of B<clone>(2)."
msgstr ""

#. type: Plain text
msgid "Note the following further points:"
msgstr "Beachten Sie die weiteren folgenden Punkte:"

#. type: Plain text
msgid ""
"All threads other than the calling thread are destroyed during an "
"B<execve>().  Mutexes, condition variables, and other pthreads objects are "
"not preserved."
msgstr ""

#. type: Plain text
msgid ""
"The equivalent of I<setlocale(LC_ALL, \"C\")> is executed at program start-"
"up."
msgstr ""
"Das Äquivalent von I<setlocale(LC_ALL, \"C\")> wird beim Programmstart "
"ausgeführt."

#. type: Plain text
msgid ""
"POSIX.1 specifies that the dispositions of any signals that are ignored or "
"set to the default are left unchanged.  POSIX.1 specifies one exception: if "
"B<SIGCHLD> is being ignored, then an implementation may leave the "
"disposition unchanged or reset it to the default; Linux does the former."
msgstr ""

#. type: Plain text
msgid ""
"Any outstanding asynchronous I/O operations are canceled (B<aio_read>(3), "
"B<aio_write>(3))."
msgstr ""
"Alle ausstehenden asynchronen E/A-Operationen werden abgebrochen "
"(B<aio_read>(3), B<aio_write>(3))."

#. type: Plain text
msgid ""
"For the handling of capabilities during B<execve>(), see B<capabilities>(7)."
msgstr ""
"Für den Umgang mit Capabilities während B<execve>(), siehe "
"B<capabilities>(7)."

#.  On Linux it appears that these file descriptors are
#.  always open after an execve(), and it looks like
#.  Solaris 8 and FreeBSD 6.1 are the same. -- mtk, 30 Apr 2007
#. type: Plain text
msgid ""
"By default, file descriptors remain open across an B<execve>().  File "
"descriptors that are marked close-on-exec are closed; see the description of "
"B<FD_CLOEXEC> in B<fcntl>(2).  (If a file descriptor is closed, this will "
"cause the release of all record locks obtained on the underlying file by "
"this process.  See B<fcntl>(2)  for details.)  POSIX.1 says that if file "
"descriptors 0, 1, and 2 would otherwise be closed after a successful "
"B<execve>(), and the process would gain privilege because the set-user_ID or "
"set-group_ID mode bit was set on the executed file, then the system may open "
"an unspecified file for each of these file descriptors.  As a general "
"principle, no portable program, whether privileged or not, can assume that "
"these three file descriptors will remain closed across an B<execve>()."
msgstr ""

#. type: SS
#, no-wrap
msgid "Interpreter scripts"
msgstr "Interpreter-Skripte"

#. type: Plain text
msgid ""
"An interpreter script is a text file that has execute permission enabled and "
"whose first line is of the form:"
msgstr ""
"Ein Interpreter-Skript ist eine Textdatei, die über Ausführrechte verfügt "
"und dessen erste Zeile die folgende Form annimmt:"

#. type: Plain text
msgid ""
"The I<interpreter> must be a valid pathname for an executable file.  If the "
"I<filename> argument of B<execve>()  specifies an interpreter script, then "
"I<interpreter> will be invoked with the following arguments:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "I<interpreter> [optional-arg] I<filename> arg...\n"
msgstr "I<Interpreter> [Optionale-Arg] I<filename> Arg …\n"

#. type: Plain text
msgid ""
"where I<arg...> is the series of words pointed to by the I<argv> argument of "
"B<execve>(), starting at I<argv>[1]."
msgstr ""

#. type: Plain text
msgid ""
"For portable use, I<optional-arg> should either be absent, or be specified "
"as a single word (i.e., it should not contain white space); see NOTES below."
msgstr ""

#.  commit bf2a9a39639b8b51377905397a5005f444e9a892
#. type: Plain text
msgid ""
"Since Linux 2.6.28, the kernel permits the interpreter of a script to itself "
"be a script.  This permission is recursive, up to a limit of four "
"recursions, so that the interpreter may be a script which is interpreted by "
"a script, and so on."
msgstr ""

#. type: SS
#, no-wrap
msgid "Limits on size of arguments and environment"
msgstr "Begrenzungen der Größe der Argumente und der Umgebung"

#. type: Plain text
msgid ""
"Most UNIX implementations impose some limit on the total size of the command-"
"line argument (I<argv>)  and environment (I<envp>)  strings that may be "
"passed to a new program.  POSIX.1 allows an implementation to advertise this "
"limit using the B<ARG_MAX> constant (either defined in I<E<lt>limits.hE<gt>> "
"or available at run time using the call I<sysconf(_SC_ARG_MAX)>)."
msgstr ""

#. type: Plain text
msgid ""
"On Linux prior to kernel 2.6.23, the memory used to store the environment "
"and argument strings was limited to 32 pages (defined by the kernel constant "
"B<MAX_ARG_PAGES>).  On architectures with a 4-kB page size, this yields a "
"maximum size of 128 kB."
msgstr ""

#.  For some background on the changes to ARG_MAX in kernels 2.6.23 and
#.  2.6.25, see:
#.      http://sourceware.org/bugzilla/show_bug.cgi?id=5786
#.      http://bugzilla.kernel.org/show_bug.cgi?id=10095
#.      http://thread.gmane.org/gmane.linux.kernel/646709/focus=648101,
#.      checked into 2.6.25 as commit a64e715fc74b1a7dcc5944f848acc38b2c4d4ee2.
#.  Ollie: That doesn't include the lists of pointers, though,
#.  so the actual usage is a bit higher (1 pointer per argument).
#. type: Plain text
msgid ""
"On kernel 2.6.23 and later, most architectures support a size limit derived "
"from the soft B<RLIMIT_STACK> resource limit (see B<getrlimit>(2))  that is "
"in force at the time of the B<execve>()  call.  (Architectures with no "
"memory management unit are excepted: they maintain the limit that was in "
"effect before kernel 2.6.23.)  This change allows programs to have a much "
"larger argument and/or environment list.  For these architectures, the total "
"size is limited to 1/4 of the allowed stack size.  (Imposing the 1/4-limit "
"ensures that the new program always has some stack space.)  Since Linux "
"2.6.25, the kernel places a floor of 32 pages on this size limit, so that, "
"even when B<RLIMIT_STACK> is set very low, applications are guaranteed to "
"have at least as much argument and environment space as was provided by "
"Linux 2.6.23 and earlier.  (This guarantee was not provided in Linux 2.6.23 "
"and 2.6.24.)  Additionally, the limit per string is 32 pages (the kernel "
"constant B<MAX_ARG_STRLEN>), and the maximum number of strings is 0x7FFFFFFF."
msgstr ""

#. type: SH
#, no-wrap
msgid "RETURN VALUE"
msgstr "RÜCKGABEWERT"

#. type: Plain text
msgid ""
"On success, B<execve>()  does not return, on error -1 is returned, and "
"I<errno> is set appropriately."
msgstr ""

#. type: SH
#, no-wrap
msgid "ERRORS"
msgstr "FEHLER"

#. type: TP
#, no-wrap
msgid "B<E2BIG>"
msgstr "B<E2BIG>"

#. type: Plain text
msgid ""
"The total number of bytes in the environment (I<envp>)  and argument list "
"(I<argv>)  is too large."
msgstr ""
"Die Gesamtanzahl von Bytes in der Umgebungs- (I<envp>) und der "
"Argumentenliste (I<argv>) ist zu groß."

#. type: TP
#, no-wrap
msgid "B<EACCES>"
msgstr "B<EACCES>"

#. type: Plain text
msgid ""
"Search permission is denied on a component of the path prefix of I<filename> "
"or the name of a script interpreter.  (See also B<path_resolution>(7).)"
msgstr ""

#. type: Plain text
msgid "The file or a script interpreter is not a regular file."
msgstr "Die Datei oder der Skriptinterpreter ist keine reguläre Datei."

#. type: Plain text
msgid ""
"Execute permission is denied for the file or a script or ELF interpreter."
msgstr ""

#. type: Plain text
msgid "The filesystem is mounted I<noexec>."
msgstr "Das Dateisystem ist nicht I<noexec> eingehängt."

#. type: TP
#, no-wrap
msgid "B<EAGAIN> (since Linux 3.1)"
msgstr "B<EAGAIN> (seit Linux 3.1)"

#.  commit 72fa59970f8698023045ab0713d66f3f4f96945c
#. type: Plain text
msgid ""
"Having changed its real UID using one of the B<set*uid>()  calls, the caller "
"was\\(emand is now still\\(emabove its B<RLIMIT_NPROC> resource limit (see "
"B<setrlimit>(2)).  For a more detailed explanation of this error, see NOTES."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<EFAULT>"
msgstr "B<EFAULT>"

#. type: Plain text
msgid ""
"I<filename> or one of the pointers in the vectors I<argv> or I<envp> points "
"outside your accessible address space."
msgstr ""
"I<filename> oder einer der Zeiger in den Vektoren I<argv> oder I<envp> zeigt "
"aus dem für Sie zugänglichen Adressraum heraus."

#. type: TP
#, no-wrap
msgid "B<EINVAL>"
msgstr "B<EINVAL>"

#. type: Plain text
msgid ""
"An ELF executable had more than one PT_INTERP segment (i.e., tried to name "
"more than one interpreter)."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<EIO>"
msgstr "B<EIO>"

#. type: Plain text
msgid "An I/O error occurred."
msgstr "Es ist ein E/A-Fehler (engl. I/O) aufgetreten."

#. type: TP
#, no-wrap
msgid "B<EISDIR>"
msgstr "B<EISDIR>"

#. type: Plain text
msgid "An ELF interpreter was a directory."
msgstr "Ein ELF-Interpreter war ein Verzeichnis."

#. type: TP
#, no-wrap
msgid "B<ELIBBAD>"
msgstr "B<ELIBBAD>"

#. type: Plain text
msgid "An ELF interpreter was not in a recognized format."
msgstr "Ein ELF-Interpreter war in einem unbekannten Format."

#. type: TP
#, no-wrap
msgid "B<ELOOP>"
msgstr "B<ELOOP>"

#. type: Plain text
msgid ""
"Too many symbolic links were encountered in resolving I<filename> or the "
"name of a script or ELF interpreter."
msgstr ""

#.  commit d740269867021faf4ce38a449353d2b986c34a67
#. type: Plain text
msgid ""
"The maximum recursion limit was reached during recursive script "
"interpretation (see \"Interpreter scripts\", above).  Before Linux 3.8, the "
"error produced for this case was B<ENOEXEC>."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<EMFILE>"
msgstr "B<EMFILE>"

#. type: Plain text
msgid ""
"The per-process limit on the number of open file descriptors has been "
"reached."
msgstr ""
"Die Beschränkung pro-Prozess der Anzahl offener Datei-Deskriptoren wurde "
"erreicht."

#. type: TP
#, no-wrap
msgid "B<ENAMETOOLONG>"
msgstr "B<ENAMETOOLONG>"

#. type: Plain text
msgid "I<filename> is too long."
msgstr "I<filename> ist zu lang."

#. type: TP
#, no-wrap
msgid "B<ENFILE>"
msgstr "B<ENFILE>"

#. type: Plain text
msgid ""
"The system-wide limit on the total number of open files has been reached."
msgstr ""
"Die systemweite Beschränkung für die Gesamtzahl offener Dateien wurde "
"erreicht."

#. type: TP
#, no-wrap
msgid "B<ENOENT>"
msgstr "B<ENOENT>"

#.  FIXME but see http://sourceware.org/bugzilla/show_bug.cgi?id=12241
#. type: Plain text
msgid ""
"The file I<filename> or a script or ELF interpreter does not exist, or a "
"shared library needed for the file or interpreter cannot be found."
msgstr ""
"Die Datei I<filename> oder ein Skript oder ein ELF-Interpreter existiert "
"nicht oder eine Laufzeitbibliothek, die für die Datei oder den Interpreter "
"benötigt wird, kann nicht gefunden werden."

#. type: TP
#, no-wrap
msgid "B<ENOEXEC>"
msgstr "B<ENOEXEC>"

#. type: Plain text
msgid ""
"An executable is not in a recognized format, is for the wrong architecture, "
"or has some other format error that means it cannot be executed."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ENOMEM>"
msgstr "B<ENOMEM>"

#. type: Plain text
msgid "Insufficient kernel memory was available."
msgstr "Es war nicht genügend Kernel-Speicher verfügbar."

#. type: TP
#, no-wrap
msgid "B<ENOTDIR>"
msgstr "B<ENOTDIR>"

#. type: Plain text
msgid ""
"A component of the path prefix of I<filename> or a script or ELF interpreter "
"is not a directory."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<EPERM>"
msgstr "B<EPERM>"

#. type: Plain text
msgid ""
"The filesystem is mounted I<nosuid>, the user is not the superuser, and the "
"file has the set-user-ID or set-group-ID bit set."
msgstr ""

#. type: Plain text
msgid ""
"The process is being traced, the user is not the superuser and the file has "
"the set-user-ID or set-group-ID bit set."
msgstr ""

#. type: Plain text
msgid ""
"A \"capability-dumb\" applications would not obtain the full set of "
"permitted capabilities granted by the executable file.  See "
"B<capabilities>(7)."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<ETXTBSY>"
msgstr "B<ETXTBSY>"

#. type: Plain text
msgid "The specified executable was open for writing by one or more processes."
msgstr ""
"Das angegebene Programm war für einen oder mehrere Prozesse zum Schreiben "
"offen."

#. type: SH
#, no-wrap
msgid "CONFORMING TO"
msgstr "KONFORM ZU"

#.  SVr4 documents additional error
#.  conditions EAGAIN, EINTR, ELIBACC, ENOLINK, EMULTIHOP; POSIX does not
#.  document ETXTBSY, EPERM, EFAULT, ELOOP, EIO, ENFILE, EMFILE, EINVAL,
#.  EISDIR or ELIBBAD error conditions.
#. type: Plain text
msgid ""
"POSIX.1-2001, POSIX.1-2008, SVr4, 4.3BSD.  POSIX does not document the #! "
"behavior, but it exists (with some variations) on other UNIX systems."
msgstr ""
"POSIX.1-2001, POSIX.1-2008, SVr4, 4.3BSD. POSIX dokumentiert das #!-"
"Verhalten nicht, es existiert aber (mit einigen Variationen) auf anderen "
"UNIX-Systemen."

#. type: SH
#, no-wrap
msgid "NOTES"
msgstr "ANMERKUNGEN"

#. type: Plain text
msgid "Set-user-ID and set-group-ID processes can not be B<ptrace>(2)d."
msgstr ""

#. type: Plain text
msgid ""
"The result of mounting a filesystem I<nosuid> varies across Linux kernel "
"versions: some will refuse execution of set-user-ID and set-group-ID "
"executables when this would give the user powers she did not have already "
"(and return B<EPERM>), some will just ignore the set-user-ID and set-group-"
"ID bits and B<exec>()  successfully."
msgstr ""

#.  e.g., EFAULT on Solaris 8 and FreeBSD 6.1; but
#.  HP-UX 11 is like Linux -- mtk, Apr 2007
#.  Bug filed 30 Apr 2007: http://bugzilla.kernel.org/show_bug.cgi?id=8408
#.  Bug rejected (because fix would constitute an ABI change).
#. type: Plain text
msgid ""
"On Linux, I<argv> and I<envp> can be specified as NULL.  In both cases, this "
"has the same effect as specifying the argument as a pointer to a list "
"containing a single null pointer.  B<Do not take advantage of this "
"nonstandard and nonportable misfeature!> On many other UNIX systems, "
"specifying I<argv> as NULL will result in an error (B<EFAULT>).  I<Some> "
"other UNIX systems treat the I<envp==NULL> case the same as Linux."
msgstr ""

#. type: Plain text
msgid ""
"POSIX.1 says that values returned by B<sysconf>(3)  should be invariant over "
"the lifetime of a process.  However, since Linux 2.6.23, if the "
"B<RLIMIT_STACK> resource limit changes, then the value reported by "
"B<_SC_ARG_MAX> will also change, to reflect the fact that the limit on space "
"for holding command-line arguments and environment variables has changed."
msgstr ""

#. type: Plain text
msgid ""
"In most cases where B<execve>()  fails, control returns to the original "
"executable image, and the caller of B<execve>()  can then handle the error.  "
"However, in (rare) cases (typically caused by resource exhaustion), failure "
"may occur past the point of no return: the original executable image has "
"been torn down, but the new image could not be completely built.  In such "
"cases, the kernel kills the process with a B<SIGKILL> signal."
msgstr ""

#. type: Plain text
msgid ""
"A maximum line length of 127 characters is allowed for the first line in an "
"interpreter scripts."
msgstr ""
"Eine maximale Zeilenlänge von 127 Zeichen wird für die erste Zeile in einem "
"interpretierten Skript."

#.  e.g., Solaris 8
#.  e.g., FreeBSD before 6.0, but not FreeBSD 6.0 onward
#. type: Plain text
msgid ""
"The semantics of the I<optional-arg> argument of an interpreter script vary "
"across implementations.  On Linux, the entire string following the "
"I<interpreter> name is passed as a single argument to the interpreter, and "
"this string can include white space.  However, behavior differs on some "
"other systems.  Some systems use the first white space to terminate "
"I<optional-arg>.  On some systems, an interpreter script can have multiple "
"arguments, and white spaces in I<optional-arg> are used to delimit the "
"arguments."
msgstr ""

#.  .SH BUGS
#.  Some Linux versions have failed to check permissions on ELF
#.  interpreters.  This is a security hole, because it allows users to
#.  open any file, such as a rewinding tape device, for reading.  Some
#.  Linux versions have also had other security holes in
#.  .BR execve ()
#.  that could be exploited for denial of service by a suitably crafted
#.  ELF binary. There are no known problems with 2.0.34 or 2.2.15.
#. type: Plain text
msgid "Linux ignores the set-user-ID and set-group-ID bits on scripts."
msgstr "Linux ignoriert die Bits »set-user-ID« und »set-group-ID« in Skripten."

#. type: SS
#, no-wrap
msgid "execve() and EAGAIN"
msgstr "execve() und EAGAIN"

#. type: Plain text
msgid ""
"A more detailed explanation of the B<EAGAIN> error that can occur (since "
"Linux 3.1) when calling B<execve>()  is as follows."
msgstr ""
"Eine detailliertere Beschreibung des Fehlers B<EAGAIN>, der  (seit Linux "
"3.1) beim Aufruf von B<execve>() auftreten kann, ist wie folgt:"

#.  commit 909cc4ae86f3380152a18e2a3c44523893ee11c4
#. type: Plain text
msgid ""
"The B<EAGAIN> error can occur when a I<preceding> call to B<setuid>(2), "
"B<setreuid>(2), or B<setresuid>(2)  caused the real user ID of the process "
"to change, and that change caused the process to exceed its B<RLIMIT_NPROC> "
"resource limit (i.e., the number of processes belonging to the new real UID "
"exceeds the resource limit).  From Linux 2.6.0 to 3.0, this caused the "
"B<set*uid>()  call to fail.  (Prior to 2.6, the resource limit was not "
"imposed on processes that changed their user IDs.)"
msgstr ""

#. type: Plain text
msgid ""
"Since Linux 3.1, the scenario just described no longer causes the "
"B<set*uid>()  call to fail, because it too often led to security holes where "
"buggy applications didn't check the return status and assumed that\\(emif "
"the caller had root privileges\\(emthe call would always succeed.  Instead, "
"the B<set*uid>()  calls now successfully change the real UID, but the kernel "
"sets an internal flag, named B<PF_NPROC_EXCEEDED>, to note that the "
"B<RLIMIT_NPROC> resource limit has been exceeded.  If the "
"B<PF_NPROC_EXCEEDED> flag is set and the resource limit is still exceeded at "
"the time of a subsequent B<execve>()  call, that call fails with the error "
"B<EAGAIN>.  This kernel logic ensures that the B<RLIMIT_NPROC> resource "
"limit is still enforced for the common privileged daemon workflow"
"\\(emnamely, B<fork>(2)  + B<set*uid>()  + B<execve>()."
msgstr ""

#. type: Plain text
msgid ""
"If the resource limit was not still exceeded at the time of the B<execve>()  "
"call (because other processes belonging to this real UID terminated between "
"the B<set*uid>()  call and the B<execve>()  call), then the B<execve>()  "
"call succeeds and the kernel clears the B<PF_NPROC_EXCEEDED> process flag.  "
"The flag is also cleared if a subsequent call to B<fork>(2)  by this process "
"succeeds."
msgstr ""

#. type: SS
#, no-wrap
msgid "Historical"
msgstr "Historisches"

#.  .SH BUGS
#.  Some Linux versions have failed to check permissions on ELF
#.  interpreters.  This is a security hole, because it allows users to
#.  open any file, such as a rewinding tape device, for reading.  Some
#.  Linux versions have also had other security holes in
#.  .BR execve ()
#.  that could be exploited for denial of service by a suitably crafted
#.  ELF binary. There are no known problems with 2.0.34 or 2.2.15.
#. type: Plain text
msgid ""
"With UNIX\\ V6, the argument list of an B<exec>()  call was ended by 0, "
"while the argument list of I<main> was ended by -1.  Thus, this argument "
"list was not directly usable in a further B<exec>()  call.  Since UNIX\\ V7, "
"both are NULL."
msgstr ""
"Unter UNIX\\ V6 wurde die Argumentenliste von einem B<exec>()-Aufruf durch 0 "
"beendet, während die Argumentenliste von I<main> durch -1 beendet wurde. "
"Daher war diese Argumentenliste nicht für weitere B<exec>()-Aufrufe direkt "
"verwendbar. Seit UNIX\\ V7 sind beide NULL."

#. type: SH
#, no-wrap
msgid "EXAMPLE"
msgstr "BEISPIEL"

#. type: Plain text
msgid ""
"The following program is designed to be execed by the second program below.  "
"It just echoes its command-line arguments, one per line."
msgstr ""
"Das folgende Programm ist dafür gedacht, vom zweiten folgenden Programm "
"ausgeführt zu werden. Es gibt nur seine Befehlszeile (eine pro Zeile) wieder "
"aus."

#. type: Plain text
#, no-wrap
msgid "/* myecho.c */\n"
msgstr "/* myecho.c */\n"

#. type: Plain text
#, no-wrap
msgid ""
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
msgstr ""
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"

#. type: Plain text
#, no-wrap
msgid ""
"int\n"
"main(int argc, char *argv[])\n"
"{\n"
"    int j;\n"
msgstr ""
"int\n"
"main(int argc, char *argv[])\n"
"{\n"
"    int j;\n"

#. type: Plain text
#, no-wrap
msgid ""
"    for (j = 0; j E<lt> argc; j++)\n"
"        printf(\"argv[%d]: %s\\en\", j, argv[j]);\n"
msgstr ""
"    for (j = 0; j E<lt> argc; j++)\n"
"        printf(\"argv[%d]: %s\\en\", j, argv[j]);\n"

#. type: Plain text
#, no-wrap
msgid ""
"    exit(EXIT_SUCCESS);\n"
"}\n"
msgstr ""
"    exit(EXIT_SUCCESS);\n"
"}\n"

#. type: Plain text
msgid ""
"This program can be used to exec the program named in its command-line "
"argument:"
msgstr ""
"Dieses Programm kann zur Ausführung des in seinem Befehlszeilenargument "
"benannten Programms verwandt werden:"

#. type: Plain text
#, no-wrap
msgid "/* execve.c */\n"
msgstr "/* execve.c */\n"

#. type: Plain text
#, no-wrap
msgid ""
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
"#include E<lt>unistd.hE<gt>\n"
msgstr ""
"#include E<lt>stdio.hE<gt>\n"
"#include E<lt>stdlib.hE<gt>\n"
"#include E<lt>unistd.hE<gt>\n"

#. type: Plain text
#, no-wrap
msgid ""
"int\n"
"main(int argc, char *argv[])\n"
"{\n"
"    char *newargv[] = { NULL, \"hello\", \"world\", NULL };\n"
"    char *newenviron[] = { NULL };\n"
msgstr ""
"int\n"
"main(int argc, char *argv[])\n"
"{\n"
"    char *newargv[] = { NULL, \"hello\", \"world\", NULL };\n"
"    char *newenviron[] = { NULL };\n"

#. type: Plain text
#, no-wrap
msgid ""
"    if (argc != 2) {\n"
"        fprintf(stderr, \"Usage: %s E<lt>file-to-execE<gt>\\en\", argv[0]);\n"
"        exit(EXIT_FAILURE);\n"
"    }\n"
msgstr ""
"    if (argc != 2) {\n"
"\tprintf(stderr, \"Aufruf: %s E<lt>auszuführende-DateiE<gt>\\en\", argv[0]);\n"
"\texit(EXIT_FAILURE);\n"
"    }\n"

#. type: Plain text
#, no-wrap
msgid "    newargv[0] = argv[1];\n"
msgstr "    newargv[0] = argv[1];\n"

#. type: Plain text
#, no-wrap
msgid ""
"    execve(argv[1], newargv, newenviron);\n"
"    perror(\"execve\");   /* execve() returns only on error */\n"
"    exit(EXIT_FAILURE);\n"
"}\n"
msgstr ""
"    execve(argv[1], newargv, newenviron);\n"
"    perror(\"execve\");   /* execve() kehrt nur im Fehlerfall zurück */\n"
"    exit(EXIT_FAILURE);\n"
"}\n"

#. type: Plain text
msgid "We can use the second program to exec the first as follows:"
msgstr ""
"Wir können das zweite Programm verwenden, um das erste wie folgt aufzurufen:"

#. type: Plain text
#, no-wrap
msgid ""
"$B< cc myecho.c -o myecho>\n"
"$B< cc execve.c -o execve>\n"
"$B< ./execve ./myecho>\n"
"argv[0]: ./myecho\n"
"argv[1]: hello\n"
"argv[2]: world\n"
msgstr ""
"$B< cc myecho.c -o myecho>\n"
"$B< cc execve.c -o execve>\n"
"$B< ./execve ./myecho>\n"
"argv[0]: ./myecho\n"
"argv[1]: hello\n"
"argv[2]: world\n"

#. type: Plain text
msgid ""
"We can also use these programs to demonstrate the use of a script "
"interpreter.  To do this we create a script whose \"interpreter\" is our "
"I<myecho> program:"
msgstr ""
"Wir können diese Programme auch zur Demonstration der Verwendung eines "
"Skript-Interpreters verwenden. Dafür erstellen wir ein Skript, dessen "
"»Interpreter« unser I<myecho>-Programm ist."

#. type: Plain text
#, no-wrap
msgid ""
"$B< cat E<gt> script>\n"
"B<#!./myecho script-arg>\n"
"B<^D>\n"
"$B< chmod +x script>\n"
msgstr ""
"$B< cat E<gt> script>\n"
"B<#!./myecho script-arg>\n"
"B<^D>\n"
"$B< chmod +x script>\n"

#. type: Plain text
msgid "We can then use our program to exec the script:"
msgstr "Wir können dann unser Program verwenden, um das Skript auszuführen:"

#. type: Plain text
#, no-wrap
msgid ""
"$B< ./execve ./script>\n"
"argv[0]: ./myecho\n"
"argv[1]: script-arg\n"
"argv[2]: ./script\n"
"argv[3]: hello\n"
"argv[4]: world\n"
msgstr ""
"$B< ./execve ./script>\n"
"argv[0]: ./myecho\n"
"argv[1]: script-arg\n"
"argv[2]: ./script\n"
"argv[3]: hello\n"
"argv[4]: world\n"

#. type: SH
#, no-wrap
msgid "SEE ALSO"
msgstr "SIEHE AUCH"

#. type: Plain text
msgid ""
"B<chmod>(2), B<execveat>(2), B<fork>(2), B<ptrace>(2), B<execl>(3), "
"B<fexecve>(3), B<getopt>(3), B<system>(3), B<credentials>(7), B<environ>(7), "
"B<path_resolution>(7), B<ld.so>(8)"
msgstr ""
"B<chmod>(2), B<execveat>(2), B<fork>(2), B<ptrace>(2), B<execl>(3), "
"B<fexecve>(3), B<getopt>(3), B<system>(3), B<credentials>(7), B<environ>(7), "
"B<path_resolution>(7), B<ld.so>(8)"

#. type: SH
#, no-wrap
msgid "COLOPHON"
msgstr "KOLOPHON"

#. type: Plain text
msgid ""
"This page is part of release 4.07 of the Linux I<man-pages> project.  A "
"description of the project, information about reporting bugs, and the latest "
"version of this page, can be found at \\%https://www.kernel.org/doc/man-"
"pages/."
msgstr ""
"Diese Seite ist Teil der Veröffentlichung 4.07 des Projekts Linux-I<man-"
"pages>. Eine Beschreibung des Projekts, Informationen, wie Fehler gemeldet "
"werden können sowie die aktuelle Version dieser Seite finden sich unter \\"
"%https://www.kernel.org/doc/man-pages/."
