# German translation of manpages
# This file is distributed under the same license as the manpages-de package.
# Copyright Â© of this file:
msgid ""
msgstr ""
"Project-Id-Version: manpages-de\n"
"POT-Creation-Date: 2011-08-11 22:32+0300\n"
"PO-Revision-Date: 2010-09-25 19:20+0200\n"
"Last-Translator: Martin Eberhard Schauer <Martin.E.Schauer@gmx.de>\n"
"Language-Team: German <debian-l10n-german@lists.debian.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: TH
#, no-wrap
msgid "CONSOLE_IOCTL"
msgstr "CONSOLE_IOCTL"

#. type: TH
#, no-wrap
msgid "2009-02-28"
msgstr "28. Februar 2009"

#. type: TH
#, no-wrap
msgid "Linux"
msgstr "Linux"

#. type: TH
#, no-wrap
msgid "Linux Programmer's Manual"
msgstr "Linux-Programmierhandbuch"

#. type: SH
#, no-wrap
msgid "NAME"
msgstr "BEZEICHNUNG"

#. type: Plain text
msgid "console_ioctl - ioctl's for console terminal and virtual consoles"
msgstr ""

#. type: SH
#, no-wrap
msgid "DESCRIPTION"
msgstr "BESCHREIBUNG"

#. type: Plain text
msgid ""
"The following Linux-specific B<ioctl>(2)  requests are supported.  Each "
"requires a third argument, assumed here to be I<argp>."
msgstr ""

#. type: IP
#, fuzzy, no-wrap
msgid "B<KDGETLED>"
msgstr "B<EMFILE>"

#. type: Plain text
msgid ""
"Get state of LEDs.  I<argp> points to a I<char>.  The lower three bits of "
"I<*argp> are set to the state of the LEDs, as follows:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    LED_CAP       0x04   caps lock led\n"
"    LEC_NUM       0x02   num lock led\n"
"    LED_SCR       0x01   scroll lock led\n"
msgstr ""

#. type: IP
#, fuzzy, no-wrap
msgid "B<KDSETLED>"
msgstr "B<EMFILE>"

#. type: Plain text
msgid ""
"Set the LEDs.  The LEDs are set to correspond to the lower three bits of "
"I<argp>.  However, if a higher order bit is set, the LEDs revert to normal: "
"displaying the state of the keyboard functions of caps lock, num lock, and "
"scroll lock."
msgstr ""

#. type: Plain text
msgid ""
"Before 1.1.54, the LEDs just reflected the state of the corresponding "
"keyboard flags, and KDGETLED/KDSETLED would also change the keyboard flags.  "
"Since 1.1.54 the leds can be made to display arbitrary information, but by "
"default they display the keyboard flags.  The following two ioctl's are used "
"to access the keyboard flags."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<KDGKBLED>"
msgstr ""

#. type: Plain text
msgid ""
"Get keyboard flags CapsLock, NumLock, ScrollLock (not lights).  I<argp> "
"points to a char which is set to the flag state.  The low order three bits "
"(mask 0x7) get the current flag state, and the low order bits of the next "
"nibble (mask 0x70) get the default flag state.  (Since 1.1.54.)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<KDSKBLED>"
msgstr ""

#. type: Plain text
msgid ""
"Set keyboard flags CapsLock, NumLock, ScrollLock (not lights).  I<argp> has "
"the desired flag state.  The low order three bits (mask 0x7) have the flag "
"state, and the low order bits of the next nibble (mask 0x70) have the "
"default flag state.  (Since 1.1.54.)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<KDGKBTYPE>"
msgstr ""

#. type: Plain text
msgid "Get keyboard type.  This returns the value KB_101, defined as 0x02."
msgstr ""

#. type: IP
#, fuzzy, no-wrap
msgid "B<KDADDIO>"
msgstr "B<EIO>"

#. type: Plain text
msgid "Add I/O port as valid.  Equivalent to I<ioperm(arg,1,1)>."
msgstr ""

#. type: IP
#, fuzzy, no-wrap
msgid "B<KDDELIO>"
msgstr "B<EIO>"

#. type: Plain text
msgid "Delete I/O port as valid.  Equivalent to I<ioperm(arg,1,0)>."
msgstr ""

#. type: IP
#, fuzzy, no-wrap
msgid "B<KDENABIO>"
msgstr "B<EIO>"

#. type: Plain text
msgid ""
"Enable I/O to video board.  Equivalent to I<ioperm(0x3b4, 0x3df-0x3b4+1, 1)>."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<KDDISABIO>"
msgstr ""

#. type: Plain text
msgid ""
"Disable I/O to video board.  Equivalent to I<ioperm(0x3b4, 0x3df-0x3b4+1, 0)"
">."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<KDSETMODE>"
msgstr ""

#. type: Plain text
msgid "Set text/graphics mode.  I<argp> is one of these:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    KD_TEXT       0x00\n"
"    KD_GRAPHICS   0x01\n"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<KDGETMODE>"
msgstr ""

#. type: Plain text
msgid ""
"Get text/graphics mode.  I<argp> points to a I<long> which is set to one of "
"the above values."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<KDMKTONE>"
msgstr ""

#. type: Plain text
msgid ""
"Generate tone of specified length.  The lower 16 bits of I<argp> specify the "
"period in clock cycles, and the upper 16 bits give the duration in msec.  If "
"the duration is zero, the sound is turned off.  Control returns "
"immediately.  For example, I<argp> = (125E<lt>E<lt>16) + 0x637 would specify "
"the beep normally associated with a ctrl-G.  (Thus since 0.99pl1; broken in "
"2.1.49-50.)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<KIOCSOUND>"
msgstr ""

#. type: Plain text
msgid ""
"Start or stop sound generation.  The lower 16 bits of I<argp> specify the "
"period in clock cycles (that is, I<argp> = 1193180/frequency).  I<argp> = 0 "
"turns sound off.  In either case, control returns immediately."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<GIO_CMAP>"
msgstr ""

#. type: Plain text
msgid ""
"Get the current default color map from kernel.  I<argp> points to a 48-byte "
"array.  (Since 1.3.3.)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<PIO_CMAP>"
msgstr ""

#. type: Plain text
msgid ""
"Change the default text-mode color map.  I<argp> points to a 48-byte array "
"which contains, in order, the Red, Green, and Blue values for the 16 "
"available screen colors: 0 is off, and 255 is full intensity.  The default "
"colors are, in order: black, dark red, dark green, brown, dark blue, dark "
"purple, dark cyan, light grey, dark grey, bright red, bright green, yellow, "
"bright blue, bright purple, bright cyan and white.  (Since 1.3.3.)"
msgstr ""

#. type: IP
#, fuzzy, no-wrap
msgid "B<GIO_FONT>"
msgstr "B<EINTR>"

#. type: Plain text
msgid ""
"Gets 256-character screen font in expanded form.  I<argp> points to an 8192 "
"byte array.  Fails with error code B<EINVAL> if the currently loaded font is "
"a 512-character font, or if the console is not in text mode."
msgstr ""

#. type: IP
#, fuzzy, no-wrap
msgid "B<GIO_FONTX>"
msgstr "B<EINTR>"

#. type: Plain text
msgid ""
"Gets screen font and associated information.  I<argp> points to a I<struct "
"consolefontdesc> (see B<PIO_FONTX>).  On call, the I<charcount> field should "
"be set to the maximum number of characters that would fit in the buffer "
"pointed to by I<chardata>.  On return, the I<charcount> and I<charheight> "
"are filled with the respective data for the currently loaded font, and the "
"I<chardata> array contains the font data if the initial value of "
"I<charcount> indicated enough space was available; otherwise the buffer is "
"untouched and I<errno> is set to B<ENOMEM>.  (Since 1.3.1.)"
msgstr ""

#. type: IP
#, fuzzy, no-wrap
msgid "B<PIO_FONT>"
msgstr "B<EINTR>"

#. type: Plain text
msgid ""
"Sets 256-character screen font.  Load font into the EGA/VGA character "
"generator.  I<argp> points to a 8192 byte map, with 32 bytes per character.  "
"Only first I<N> of them are used for an 8xI<N> font (0 E<lt> I<N> E<lt>= "
"32).  This call also invalidates the Unicode mapping."
msgstr ""

#. type: IP
#, fuzzy, no-wrap
msgid "B<PIO_FONTX>"
msgstr "B<EINTR>"

#. type: Plain text
msgid ""
"Sets screen font and associated rendering information.  I<argp> points to a"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"struct consolefontdesc {\n"
"    unsigned short charcount;  /* characters in font\n"
"                                  (256 or 512) */\n"
"    unsigned short charheight; /* scan lines per\n"
"                                  character (1-32) */\n"
"    char          *chardata;   /* font data in\n"
"                                  expanded form */\n"
"};\n"
msgstr ""

#. type: Plain text
msgid ""
"If necessary, the screen will be appropriately resized, and B<SIGWINCH> sent "
"to the appropriate processes.  This call also invalidates the Unicode "
"mapping.  (Since 1.3.1.)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<PIO_FONTRESET>"
msgstr ""

#. type: Plain text
msgid ""
"Resets the screen font, size and Unicode mapping to the bootup defaults.  "
"I<argp> is unused, but should be set to NULL to ensure compatibility with "
"future versions of Linux.  (Since 1.3.28.)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<GIO_SCRNMAP>"
msgstr ""

#. type: Plain text
msgid ""
"Get screen mapping from kernel.  I<argp> points to an area of size E_TABSZ, "
"which is loaded with the font positions used to display each character.  "
"This call is likely to return useless information if the currently loaded "
"font is more than 256 characters."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<GIO_UNISCRNMAP>"
msgstr ""

#. type: Plain text
msgid ""
"Get full Unicode screen mapping from kernel.  I<argp> points to an area of "
"size E_TABSZ*sizeof(unsigned short), which is loaded with the Unicodes each "
"character represent.  A special set of Unicodes, starting at U+F000, are "
"used to represent \"direct to font\" mappings.  (Since 1.3.1.)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<PIO_SCRNMAP>"
msgstr ""

#. type: Plain text
msgid ""
"Loads the \"user definable\" (fourth) table in the kernel which maps bytes "
"into console screen symbols.  I<argp> points to an area of size E_TABSZ."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<PIO_UNISCRNMAP>"
msgstr ""

#. type: Plain text
msgid ""
"Loads the \"user definable\" (fourth) table in the kernel which maps bytes "
"into Unicodes, which are then translated into screen symbols according to "
"the currently loaded Unicode-to-font map.  Special Unicodes starting at U"
"+F000 can be used to map directly to the font symbols.  (Since 1.3.1.)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<GIO_UNIMAP>"
msgstr ""

#. type: Plain text
msgid "Get Unicode-to-font mapping from kernel.  I<argp> points to a"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"struct unimapdesc {\n"
"    unsigned short  entry_ct;\n"
"    struct unipair *entries;\n"
"};\n"
msgstr ""

#. type: Plain text
msgid "where I<entries> points to an array of"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"struct unipair {\n"
"    unsigned short unicode;\n"
"    unsigned short fontpos;\n"
"};\n"
msgstr ""

#. type: Plain text
msgid "(Since 1.1.92.)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<PIO_UNIMAP>"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"Put unicode-to-font mapping in kernel.\n"
"    I<argp> points to a\n"
"I<struct unimapdesc>.\n"
"(Since 1.1.92)\n"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<PIO_UNIMAPCLR>"
msgstr ""

#. type: Plain text
msgid "Clear table, possibly advise hash algorithm.  I<argp> points to a"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"struct unimapinit {\n"
"    unsigned short advised_hashsize;  /* 0 if no opinion */\n"
"    unsigned short advised_hashstep;  /* 0 if no opinion */\n"
"    unsigned short advised_hashlevel; /* 0 if no opinion */\n"
"};\n"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<KDGKBMODE>"
msgstr ""

#. type: Plain text
msgid ""
"Gets current keyboard mode.  I<argp> points to a I<long> which is set to one "
"of these:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    K_RAW         0x00\n"
"    K_XLATE       0x01\n"
"    K_MEDIUMRAW   0x02\n"
"    K_UNICODE     0x03\n"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<KDSKBMODE>"
msgstr ""

#. type: Plain text
msgid ""
"Sets current keyboard mode.  I<argp> is a I<long> equal to one of the above "
"values."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<KDGKBMETA>"
msgstr ""

#. type: Plain text
msgid ""
"Gets meta key handling mode.  I<argp> points to a I<long> which is set to "
"one of these:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    K_METABIT     0x03   set high order bit\n"
"    K_ESCPREFIX   0x04   escape prefix\n"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<KDSKBMETA>"
msgstr ""

#. type: Plain text
msgid ""
"Sets meta key handling mode.  I<argp> is a I<long> equal to one of the above "
"values."
msgstr ""

#. type: IP
#, fuzzy, no-wrap
msgid "B<KDGKBENT>"
msgstr "B<EINTR>"

#. type: Plain text
msgid ""
"Gets one entry in key translation table (keycode to action code).  I<argp> "
"points to a"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"struct kbentry {\n"
"    unsigned char  kb_table;\n"
"    unsigned char  kb_index;\n"
"    unsigned short kb_value;\n"
"};\n"
msgstr ""

#. type: Plain text
msgid ""
"with the first two members filled in: I<kb_table> selects the key table (0 "
"E<lt>= I<kb_table> E<lt> MAX_NR_KEYMAPS), and I<kb_index> is the keycode (0 "
"E<lt>= I<kb_index> E<lt> NR_KEYS).  I<kb_value> is set to the corresponding "
"action code, or K_HOLE if there is no such key, or K_NOSUCHMAP if "
"I<kb_table> is invalid."
msgstr ""

#. type: IP
#, fuzzy, no-wrap
msgid "B<KDSKBENT>"
msgstr "B<EINTR>"

#. type: Plain text
msgid ""
"Sets one entry in translation table.  I<argp> points to a I<struct kbentry>."
msgstr ""

#. type: IP
#, fuzzy, no-wrap
msgid "B<KDGKBSENT>"
msgstr "B<EINTR>"

#. type: Plain text
msgid "Gets one function key string.  I<argp> points to a"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"struct kbsentry {\n"
"    unsigned char kb_func;\n"
"    unsigned char kb_string[512];\n"
"};\n"
msgstr ""

#. type: Plain text
msgid ""
"I<kb_string> is set to the (null-terminated) string corresponding to the "
"I<kb_func>th function key action code."
msgstr ""

#. type: IP
#, fuzzy, no-wrap
msgid "B<KDSKBSENT>"
msgstr "B<EINTR>"

#. type: Plain text
msgid ""
"Sets one function key string entry.  I<argp> points to a I<struct kbsentry>."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<KDGKBDIACR>"
msgstr ""

#. type: Plain text
msgid "Read kernel accent table.  I<argp> points to a"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"struct kbdiacrs {\n"
"    unsigned int   kb_cnt;\n"
"    struct kbdiacr kbdiacr[256];\n"
"};\n"
msgstr ""

#. type: Plain text
msgid ""
"where I<kb_cnt> is the number of entries in the array, each of which is a"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"struct kbdiacr {\n"
"    unsigned char diacr;\n"
"    unsigned char base;\n"
"    unsigned char result;\n"
"};\n"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<KDGETKEYCODE>"
msgstr ""

#. type: Plain text
msgid ""
"Read kernel keycode table entry (scan code to keycode).  I<argp> points to a"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"struct kbkeycode {\n"
"    unsigned int scancode;\n"
"    unsigned int keycode;\n"
"};\n"
msgstr ""

#. type: Plain text
msgid ""
"I<keycode> is set to correspond to the given I<scancode>.  (89 E<lt>= "
"I<scancode> E<lt>= 255 only.  For 1 E<lt>= I<scancode> E<lt>= 88, "
"I<keycode>==I<scancode>.)  (Since 1.1.63.)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<KDSETKEYCODE>"
msgstr ""

#. type: Plain text
msgid ""
"Write kernel keycode table entry.  I<argp> points to a I<struct kbkeycode>.  "
"(Since 1.1.63.)"
msgstr ""

#. type: IP
#, fuzzy, no-wrap
msgid "B<KDSIGACCEPT>"
msgstr "B<EACCES>"

#. type: Plain text
msgid ""
"The calling process indicates its willingness to accept the signal I<argp> "
"when it is generated by pressing an appropriate key combination.  (1 E<lt>= "
"I<argp> E<lt>= NSIG).  (See spawn_console() in linux/drivers/char/keyboard."
"c.)"
msgstr ""

#. type: IP
#, fuzzy, no-wrap
msgid "B<VT_OPENQRY>"
msgstr "B<_XOPEN_SOURCE>"

#. type: Plain text
msgid ""
"Returns the first available (non-opened) console.  I<argp> points to an "
"I<int> which is set to the number of the vt (1 E<lt>= I<*argp> E<lt>= "
"MAX_NR_CONSOLES)."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<VT_GETMODE>"
msgstr ""

#. type: Plain text
msgid "Get mode of active vt.  I<argp> points to a"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"struct vt_mode {\n"
"    char  mode;    /* vt mode */\n"
"    char  waitv;   /* if set, hang on writes if not active */\n"
"    short relsig;  /* signal to raise on release req */\n"
"    short acqsig;  /* signal to raise on acquisition */\n"
"    short frsig;   /* unused (set to 0) */\n"
"};\n"
msgstr ""

#. type: Plain text
msgid ""
"which is set to the mode of the active vt.  I<mode> is set to one of these "
"values:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    VT_AUTO       auto vt switching\n"
"    VT_PROCESS    process controls switching\n"
"    VT_ACKACQ     acknowledge switch\n"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<VT_SETMODE>"
msgstr ""

#. type: Plain text
msgid "Set mode of active vt.  I<argp> points to a I<struct vt_mode>."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<VT_GETSTATE>"
msgstr ""

#. type: Plain text
msgid "Get global vt state info.  I<argp> points to a"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"struct vt_stat {\n"
"    unsigned short v_active;  /* active vt */\n"
"    unsigned short v_signal;  /* signal to send */\n"
"    unsigned short v_state;   /* vt bit mask */\n"
"};\n"
msgstr ""

#. type: Plain text
msgid ""
"For each vt in use, the corresponding bit in the I<v_state> member is set.  "
"(Kernels 1.0 through 1.1.92.)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<VT_RELDISP>"
msgstr ""

#. type: Plain text
msgid "Release a display."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<VT_ACTIVATE>"
msgstr ""

#. type: Plain text
msgid "Switch to vt I<argp> (1 E<lt>= I<argp> E<lt>= MAX_NR_CONSOLES)."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<VT_WAITACTIVE>"
msgstr ""

#. type: Plain text
msgid "Wait until vt I<argp> has been activated."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<VT_DISALLOCATE>"
msgstr ""

#. type: Plain text
msgid "Deallocate the memory associated with vt I<argp>.  (Since 1.1.54.)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<VT_RESIZE>"
msgstr ""

#. type: Plain text
msgid "Set the kernel's idea of screensize.  I<argp> points to a"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"struct vt_sizes {\n"
"    unsigned short v_rows;       /* # rows */\n"
"    unsigned short v_cols;       /* # columns */\n"
"    unsigned short v_scrollsize; /* no longer used */\n"
"};\n"
msgstr ""

#. type: Plain text
msgid ""
"Note that this does not change the videomode.  See B<resizecons>(8).  (Since "
"1.1.54.)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<VT_RESIZEX>"
msgstr ""

#. type: Plain text
msgid ""
"Set the kernel's idea of various screen parameters.  I<argp> points to a"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"struct vt_consize {\n"
"    unsigned short v_rows;  /* number of rows */\n"
"    unsigned short v_cols;  /* number of columns */\n"
"    unsigned short v_vlin;  /* number of pixel rows\n"
"                               on screen */\n"
"    unsigned short v_clin;  /* number of pixel rows\n"
"                               per character */\n"
"    unsigned short v_vcol;  /* number of pixel columns\n"
"                               on screen */\n"
"    unsigned short v_ccol;  /* number of pixel columns\n"
"                               per character */\n"
"};\n"
msgstr ""

#. type: Plain text
msgid ""
"Any parameter may be set to zero, indicating \"no change\", but if multiple "
"parameters are set, they must be self-consistent.  Note that this does not "
"change the videomode.  See B<resizecons>(8).  (Since 1.3.3.)"
msgstr ""

#. type: Plain text
msgid ""
"The action of the following ioctls depends on the first byte in the struct "
"pointed to by I<argp>, referred to here as the I<subcode>.  These are legal "
"only for the superuser or the owner of the current tty."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<TIOCLINUX, subcode=0>"
msgstr ""

#. type: Plain text
msgid ""
"Dump the screen.  Disappeared in 1.1.92.  (With kernel 1.1.92 or later, read "
"from /dev/vcsN or /dev/vcsaN instead.)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<TIOCLINUX, subcode=1>"
msgstr ""

#. type: Plain text
msgid "Get task information.  Disappeared in 1.1.92."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<TIOCLINUX, subcode=2>"
msgstr ""

#. type: Plain text
msgid "Set selection.  I<argp> points to a"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"struct {\n"
"   char  subcode;\n"
"   short xs, ys, xe, ye;\n"
"   short sel_mode;\n"
"};\n"
msgstr ""

#. type: Plain text
msgid ""
"I<xs> and I<ys> are the starting column and row.  I<xe> and I<ye> are the "
"ending column and row.  (Upper left corner is row=column=1.)  I<sel_mode> is "
"0 for character-by-character selection, 1 for word-by-word selection, or 2 "
"for line-by-line selection.  The indicated screen characters are highlighted "
"and saved in the static array sel_buffer in devices/char/console.c."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<TIOCLINUX, subcode=3>"
msgstr ""

#. type: Plain text
msgid ""
"Paste selection.  The characters in the selection buffer are written to "
"I<fd>."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<TIOCLINUX, subcode=4>"
msgstr ""

#. type: Plain text
msgid "Unblank the screen."
msgstr ""

#. type: IP
#, no-wrap
msgid "B<TIOCLINUX, subcode=5>"
msgstr ""

#. type: Plain text
msgid ""
"Sets contents of a 256-bit look up table defining characters in a \"word\", "
"for word-by-word selection.  (Since 1.1.32.)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<TIOCLINUX, subcode=6>"
msgstr ""

#. type: Plain text
msgid ""
"I<argp> points to a char which is set to the value of the kernel variable "
"I<shift_state>.  (Since 1.1.32.)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<TIOCLINUX, subcode=7>"
msgstr ""

#. type: Plain text
msgid ""
"I<argp> points to a char which is set to the value of the kernel variable "
"I<report_mouse>.  (Since 1.1.33.)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<TIOCLINUX, subcode=8>"
msgstr ""

#. type: Plain text
msgid ""
"Dump screen width and height, cursor position, and all the character-"
"attribute pairs.  (Kernels 1.1.67 through 1.1.91 only.  With kernel 1.1.92 "
"or later, read from /dev/vcsa* instead.)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<TIOCLINUX, subcode=9>"
msgstr ""

#. type: Plain text
msgid ""
"Restore screen width and height, cursor position, and all the character-"
"attribute pairs.  (Kernels 1.1.67 through 1.1.91 only.  With kernel 1.1.92 "
"or later, write to /dev/vcsa* instead.)"
msgstr ""

#. type: IP
#, no-wrap
msgid "B<TIOCLINUX, subcode=10>"
msgstr ""

#. type: Plain text
msgid ""
"Handles the Power Saving feature of the new generation of monitors.  VESA "
"screen blanking mode is set to I<argp>[1], which governs what screen "
"blanking does:"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "    I<0>: Screen blanking is disabled.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    I<1>: The current video adapter\n"
"register settings are saved, then the controller is programmed to turn off\n"
"the vertical synchronization pulses.\n"
"This puts the monitor into \"standby\" mode.\n"
"If your monitor has an Off_Mode timer, then\n"
"it will eventually power down by itself.\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"    I<2>: The current\n"
"settings are saved, then both the vertical and horizontal\n"
"synchronization pulses are turned off.\n"
"This puts the monitor into \"off\" mode.\n"
"If your monitor has no Off_Mode timer,\n"
"or if you want your monitor to power down immediately when the\n"
"blank_timer times out, then you choose this option.\n"
"(I<Caution:> Powering down frequently will damage the monitor.)\n"
msgstr ""

#. type: Plain text
msgid "(Since 1.1.76.)"
msgstr ""

#. type: SH
#, no-wrap
msgid "RETURN VALUE"
msgstr "RÃCKGABEWERT"

#. type: Plain text
#, fuzzy
msgid ""
"On success, 0 is returned.  On error -1 is returned, and I<errno> is set."
msgstr ""
"Bei Erfolg wird Null zurÃ¼ckgegeben. Bei einem Fehler wird -1 zurÃ¼ckgegeben "
"und I<errno> entsprechend gesetzt."

#. type: SH
#, no-wrap
msgid "ERRORS"
msgstr "FEHLER"

#. type: Plain text
msgid "I<errno> may take on these values:"
msgstr ""

#. type: TP
#, no-wrap
msgid "B<EBADF>"
msgstr "B<EBADF>"

#. type: Plain text
#, fuzzy
msgid "The file descriptor is invalid."
msgstr "Die Datei existiert nicht."

#. type: TP
#, fuzzy, no-wrap
msgid "B<ENOTTY>"
msgstr "B<ENOENT>"

#. type: Plain text
msgid ""
"The file descriptor is not associated with a character special device, or "
"the specified request does not apply to it."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<EINVAL>"
msgstr "B<EINVAL>"

#. type: Plain text
msgid "The file descriptor or I<argp> is invalid."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<EPERM>"
msgstr "B<EPERM>"

#. type: Plain text
#, fuzzy
msgid "Insufficient permission."
msgstr "zu wenig Pufferspeicher bereitgestellt"

#. type: SH
#, no-wrap
msgid "NOTES"
msgstr "ANMERKUNGEN"

#. type: Plain text
msgid ""
"B<Warning>: Do not regard this man page as documentation of the Linux "
"console ioctl's.  This is provided for the curious only, as an alternative "
"to reading the source.  Ioctl's are undocumented Linux internals, liable to "
"be changed without warning.  (And indeed, this page more or less describes "
"the situation as of kernel version 1.1.94; there are many minor and not-so-"
"minor differences with earlier versions.)"
msgstr ""

#. type: Plain text
msgid ""
"Very often, ioctl's are introduced for communication between the kernel and "
"one particular well-known program (fdisk, hdparm, setserial, tunelp, "
"loadkeys, selection, setfont, etc.), and their behavior will be changed when "
"required by this particular program."
msgstr ""

#. type: Plain text
msgid ""
"Programs using these ioctl's will not be portable to other versions of UNIX, "
"will not work on older versions of Linux, and will not work on future "
"versions of Linux."
msgstr ""

#. type: Plain text
msgid "Use POSIX functions."
msgstr ""

#. type: SH
#, no-wrap
msgid "SEE ALSO"
msgstr "SIEHE AUCH"

#. type: Plain text
msgid ""
"B<dumpkeys>(1), B<kbd_mode>(1), B<loadkeys>(1), B<mknod>(1), B<setleds>(1), "
"B<setmetamode>(1), B<execve>(2), B<fcntl>(2), B<ioperm>(2), B<termios>(3), "
"B<console>(4), B<console_codes>(4), B<mt>(4), B<sd>(4), B<tty>(4), "
"B<tty_ioctl>(4), B<ttyS>(4), B<vcs>(4), B<vcsa>(4), B<charsets>(7), "
"B<mapscrn>(8), B<resizecons>(8), B<setfont>(8), I</usr/include/linux/kd.h>, "
"I</usr/include/linux/vt.h>"
msgstr ""

#. type: SH
#, no-wrap
msgid "COLOPHON"
msgstr "KOLOPHON"

#. type: Plain text
msgid ""
"This page is part of release 3.32 of the Linux I<man-pages> project.  A "
"description of the project, and information about reporting bugs, can be "
"found at http://www.kernel.org/doc/man-pages/."
msgstr ""
"Diese Seite ist Teil der VerÃ¶ffentlichung 3.32 des Projekts Linux-I<man-"
"pages>. Eine Beschreibung des Projekts und Informationen, wie Fehler "
"gemeldet werden kÃ¶nnen, finden sich unter http://www.kernel.org/doc/man-"
"pages/."
