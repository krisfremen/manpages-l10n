.\" {PTM/PB/0.1/28-09-1998/"przenośny asembler GNU"}
.\" Copyright (c) 1991, 1992, 1996 Free Software Foundation
.\" See section COPYING for conditions for redistribution
.\" Translation (c) 1998 Przemek Borys <pborys@p-soft.silesia.linux.org.pl>
.TH as 1 "29 marca 1996" "wsparcie cygnusa" "Narzędzie programistyczne GNU"

.SH NAZWA
GNU as \- przenośny asembler GNU

.SH SKŁADNIA
.na
.B as
.RB "[\|" \-a "[\|" dhlns "\|]" \c
\&[\|\=\c
.I file\c
\&\|]\|]
.RB "[\|" \-D "\|]"
.RB "[\|" \-\-defsym\ SYM=VAL "\|]"
.RB "[\|" \-f "\|]"
.RB "[\|" \-I
.I path\c
\&\|]
.RB "[\|" \-K "\|]"
.RB "[\|" \-L "\|]"
.RB "[\|" \-M\ |\ \-\-mri "\|]"
.RB "[\|" \-o 
.I objfile\c
\&\|]
.RB "[\|" \-R "\|]"
.RB "[\|" \-v "\|]"
.RB "[\|" \-w "\|]"
.RB "[\|" \-\^\- "\ |\ " \c
.I files\c
\&\|.\|.\|.\|]

.I opcje i960:
.br
.RB "[\|" \-ACA "\||\|" \-ACA_A "\||\|" \-ACB\c
.RB "\||\|" \-ACC "\||\|" \-AKA "\||\|" \-AKB\c
.RB "\||\|" \-AKC "\||\|" \-AMC "\|]"
.RB "[\|" \-b "\|]"
.RB "[\|" \-no-relax "\|]"

.I opcje m680x0:
.br
.RB "[\|" \-l "\|]"
.RB "[\|" \-mc68000 "\||\|" \-mc68010 "\||\|" \-mc68020 "\|]"
.ad b

.SH OPIS
GNU \c
.B as\c
\& jest tak naprawdę rodziną asemblerów.
Jeśli używasz (używałeś) asemblera GNU na danej architekturze, powinieneś
znaleźć całkiem podobne środowisko na innej architekturze. Każda wersja ma
wiele wspólnego z innymi, właczając w to format plików obiektowych,
większość dyrektyw asemblera i składnię asemblera.

Dla informacji o dyrektywach używanych przez GNU \c
.B as\c
\&, zobacz wpis `\|\c
.B as\c
\|' w \c
.B info \c
(lub podręczniku \c
.I
.I
Using as: The GNU Assembler\c
\&).

\c
.B as\c
\& ma przede wszystkim na celu asemblowanie produktów kompilatora GNU C
Compiler \c
.B gcc\c
\& dla użytku linkera \c
.B ld\c
\&.  Mimo to,
próbowaliśmy sprawić, by \c
.B as\c
\& asemblował poprawnie wszystko, co natywny asembler asemblować powinien.
Nie znaczy to, że \c
.B as\c
\& będzie zawsze używał takiej samej składni, jak inne asemblery tej samej
architektury; na przykład znamy wiele niekompatybilnych wersji składni
asemblera 680x0.

Za każdym razem, gdy uruchamiasz \c
.B as\c
\& asembluje on dokładnie jeden program źródłowy. Program źródłowy złożony
jest z jednego, lub więcej plików. (Standardowe wejście jest także plikiem.)

Jeśli \c
.B as\c
\& nie otrzyma żadnej nazwy pliku, próbuje czytać dane ze
standardowego wejścia, które jest zwykle twoim terminalem. Będziesz musiał
wcisnąć
.B ctl-D\c
\& aby powiedzieć asemblerowi \c
.B as\c
\& że nie ma już nic do asemblowania
Użyj `\|\c
.B \-\^\-\c
\|' jeśli potrzebujesz wyjątkowo nazwać standardowe wejście w swojej linii
komend.

.B as\c
\& może wypisywać ostrzeżenia i informacje o błędach do pliku standardowego
błędu (zwykle twój terminal). Nie powinno się tak dziać, kiedy \c
.B as\c
\& jest
uruchamiany automatycznie przez kompilator. Ostrzeżenia informują o próbach,
po których \c
.B as\c
\& potrafi jeszcze asemblować program; błędy informuja o ciężkim problemie,
który przerywa asemblację.

.SH OPCJE
.TP
.BR \-a
Włącz listingi asemblerowe. Jest wiele podopcji.
.B d
opuszcza dyrektywy debuggujące.
.B h
włącza wysokopoziomowy kod źródłowy; jest to dostępne tylko jeśli plik
źródłowy można znaleźć, a kod był skompilowany z opcją
.B \-g.
.B l
włącza listing asemblerowy.
.B n
opuszcza przetwarzanie form. (? omits forms processing)
.B s
włącza listing symboli.
.B =
.I file
ustawia nazwę pliku z listingiem; musi to być ostatnia podopcja.
Domyślnymi podopcjami są
.B hls.
.TP
.B \-D
Ta opcja jest przyjmowana tylko dla kompatybilności skryptowej z wywołaniami
innych asemblerów; nie ma żadnego wpływu na \c
.B as\c
\&.
.TP
.B \-\-defsym SYM=VALUE
Definiuje symbol SYM na wartość VALUE przed asemblacją pliku wejściowego.
VALUE musi być stałą liczbową. Podobnie jak w C, przedrostek 0x wskazuje na
wartość szesnastkową, poprzedzające 0 wartość ósemkową.
.TP
.B \-f
``szybko''\-\-pomiń preprocesowanie (załóż, że źródło jest produktem
kompilatora).
.TP
.BI "\-I\ " path
Dodaj
.I path
do listy przeszukiwanej dla dyrektyw
.B .include
.TP
.B \-K
Wyświetlaj ostrzeżenia, jeśli tabele różnic zmieniły dla długich
skoków.
(? Issue warnings when difference tables altered for long displacements.)
.TP
.B \-L

Zachowaj (w tablicy symboli) symbole lokalne zaczynające się od `\|\c
.B L\c
\|'
.TP
.B \-M, \-\-mri
ASembluj w trybie kompatybilności MRI.
.TP
.BI "\-o\ " objfile
Nazwij plik obiektowy, produkt \c
.B as
.TP
.B \-R
Załóż sekcję danych na sekcję tekstu
(? Fold data section into text section)
.TP
.B \-v
Wyświetl wersję \c
.B as\c
.TP
.B \-W
Zaniechaj komunikatów ostrzegawczych
.TP
.IR "\-\^\-" "\ |\ " "files\|.\|.\|."
Pliki źródłowe do asemblacji, lub standardowe wejście (\c
.BR "\-\^\-" ")"
.TP
.BI \-A var
.I
(Gdy skonfigurowane dla Intela 960.)
Podaj, który wariant architektury 960 jest celem.
.TP
.B \-b
.I
(Gdy skonfigurowane dla Intela 960.)
Dodaj kod do zebrania statystyk o pobranych gałęziach.
.TP
.B \-no-relax
.I
(Gdy skonfigurowane dla Intela 960.)
Nie zmieniaj instrukcji compare-and-branch dla długich skoków;
(? Do not alter compare-and-branch instructions for long displacements)
gdy to niezbędne, wyrzuć błąd.
.TP
.B \-l
.I
(Gdy skonfigurowane dla Motoroli 68000).  
.br
Skróć referencje do niezdefiniowanych symboli do jednego słowa, zamist
dwóch.
.TP
.BR "\-mc68000" "\||\|" "\-mc68010" "\||\|" "\-mc68020"
.I
(Gdy skonfigurowane dla Motoroli 68000).  
.br
Podaj, jaki procesor rodziny 68000 jest celem (domyślnie 68020).

.PP
Opcje mogą być w dowolnym porządku i mogą być przed, za, lub pomiędzy
nazwami plików. Kolejność nazw plików ma znaczenie.

`\|\c
.B \-\^\-\c
\|' (dwa łączniki) oznaczają wyjątkowo plik standardowego wejścia jako jeden
z plików przeznaczonych \c
.B as\c
\& do asemblacji.

Poza `\|\c
.B \-\^\-\c
\|' każdy argument linii komend zaczyna się od łącznika (`\|\c
.B \-\c
\|') jest opcją. Każda opcja zmienia zachowanie
\c
.B as\c
\&.  Żadna z opcji nie zmienia sposobu działania innej opcji.  
Opcją jest `\|\c
.B \-\c
\|' po czym następuje jedna lub więcej liter; rozmiar liter jest istotny.
Wszystkie opcje sa opcjonalne.

Opcja `\|\c
.B \-o\c
\|' oczekuje dokładnie jednej nazwy pliku za nią. Nazwa pliku może albo
natychmiast podążać za literą opcji (kompatybilne ze starymi asemblerami),
lub może być następnym argumentem komendowym (standard GNU).

Poniższe dwie linie są ekwiwalentne:
.br
.B
as\ \ \-o\ \ my\-object\-file.o\ \ mumble.s
.br
.B
as\ \ \-omy\-object\-file.o\ \ mumble.s

.SH "ZOBACZ TAKŻE"
.RB "`\|" as "\|'"
opisany w
.B
info\c
\&; 
.I
Using as: The GNU Assembler\c
\&;
.BR gcc "(" 1 "),"
.BR ld "(" 1 ")."

.SH KOPIOWANIE
(Autor nie życzy sobie tłumaczenia tej noty bez zatwierdzenia FSF)

Copyright (c) 1991 Free Software Foundation, Inc.
.PP
Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.
.PP
Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the
entire resulting derived work is distributed under the terms of a
permission notice identical to this one.
.PP
Permission is granted to copy and distribute translations of this
manual into another language, under the above conditions for modified
versions, except that this permission notice may be included in
translations approved by the Free Software Foundation instead of in
the original English.
