# German translation of manpages
# This file is distributed under the same license as the manpages-de package.
# Copyright © of this file:
msgid ""
msgstr ""
"Project-Id-Version: manpages-de\n"
"POT-Creation-Date: 2014-01-13 12:24+0100\n"
"PO-Revision-Date: 2014-02-22 21:41+0100\n"
"Last-Translator: MEIN NAME <EMAIL>\n"
"Language-Team: German <debian-l10n-german@lists.debian.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: TH
#, no-wrap
msgid "GETOPT"
msgstr "GETOPT"

#. type: TH
#, no-wrap
msgid "July 2009"
msgstr "Juli 2009"

#. type: TH
#, no-wrap
msgid "util-linux"
msgstr "util-linux"

#. type: TH
#, no-wrap
msgid "User Commands"
msgstr "Dienstprogramme für Benutzer"

#. type: SH
#, no-wrap
msgid "NAME"
msgstr "BEZEICHNUNG"

#. type: Plain text
msgid "getopt - parse command options (enhanced)"
msgstr "getopt - Befehlsoptionen auswerten (erweitert)"

#. type: SH
#, no-wrap
msgid "SYNOPSIS"
msgstr "ÜBERSICHT"

#. type: Plain text
msgid "B<getopt> I<optstring parameters>"
msgstr ""

#. type: Plain text
msgid "B<getopt> [I<options>] [B<-->] I<optstring parameters>"
msgstr ""

#. type: Plain text
msgid ""
"B<getopt> [I<options>] B<-o>|B<--options> I<optstring> [I<options>] [B<-->] "
"I<parameters>"
msgstr ""

#. type: SH
#, no-wrap
msgid "DESCRIPTION"
msgstr "BESCHREIBUNG"

#. type: Plain text
msgid ""
"B<getopt> is used to break up (I<parse>)  options in command lines for easy "
"parsing by shell procedures, and to check for legal options.  It uses the E<."
"SM GNU> B<getopt>(3)  routines to do this."
msgstr ""

#. type: Plain text
msgid ""
"The parameters B<getopt> is called with can be divided into two parts: "
"options which modify the way getopt will parse (I<options> and B<-o>|B<--"
"options> I<optstring> in the B<SYNOPSIS>), and the parameters which are to "
"be parsed (I<parameters> in the B<SYNOPSIS>).  The second part will start at "
"the first non-option parameter that is not an option argument, or after the "
"first occurrence of `B<-->'.  If no `B<-o>' or `B<--options>' option is "
"found in the first part, the first parameter of the second part is used as "
"the short options string."
msgstr ""

#. type: Plain text
msgid ""
"If the environment variable B<GETOPT_COMPATIBLE> is set, or if its first "
"parameter is not an option (does not start with a `B<->', this is the first "
"format in the B<SYNOPSIS),> B<getopt> will generate output that is "
"compatible with that of other versions of B<getopt>(1).  It will still do "
"parameter shuffling and recognize optional arguments (see section "
"B<COMPATIBILITY> for more information)."
msgstr ""

#. type: Plain text
msgid ""
"Traditional implementations of B<getopt>(1)  are unable to cope with "
"whitespace and other (shell-specific) special characters in arguments and "
"non-option parameters. To solve this problem, this implementation can "
"generate quoted output which must once again be interpreted by the shell "
"(usually by using the B<eval> command). This has the effect of preserving "
"those characters, but you must call B<getopt> in a way that is no longer "
"compatible with other versions (the second or third format in the "
"B<SYNOPSIS>).  To determine whether this enhanced version of B<getopt>(1)  "
"is installed, a special test option (B<-T>)  can be used."
msgstr ""

#. type: SH
#, no-wrap
msgid "OPTIONS"
msgstr "OPTIONEN"

#. type: TP
#, no-wrap
msgid "B<-a>,B< --alternative>"
msgstr "B<-a>,B< --alternative>"

#. type: Plain text
msgid "Allow long options to start with a single `B<->'."
msgstr "erlaubt es, lange Optionen mit einem einfachen »B<->« zu beginne."

#. type: TP
#, no-wrap
msgid "B<-h>,B< --help>"
msgstr "B<-h>,B< --help>"

#. type: Plain text
msgid ""
"Output a small usage guide and exit successfully. No other output is "
"generated."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-l>,B< --longoptions >I<longopts>"
msgstr ""

#. type: Plain text
msgid ""
"The long (multi-character) options to be recognized.  More than one option "
"name may be specified at once, by separating the names with commas. This "
"option may be given more than once, the I<longopts> are cumulative.  Each "
"long option name in I<longopts> may be followed by one colon to indicate it "
"has a required argument, and by two colons to indicate it has an optional "
"argument."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-n>,B< --name >I<progname>"
msgstr "B<-n>,B< --name >I<Progname>"

#. type: Plain text
msgid ""
"The name that will be used by the B<getopt>(3)  routines when it reports "
"errors. Note that errors of B<getopt>(1)  are still reported as coming from "
"getopt."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-o>,B< --options >I<shortopts>"
msgstr "B<-o>,B< --options >I<Kurzoptionen>"

#. type: Plain text
msgid ""
"The short (one-character) options to be recognized. If this option is not "
"found, the first parameter of B<getopt> that does not start with a `B<-"
">' (and is not an option argument) is used as the short options string.  "
"Each short option character in I<shortopts> may be followed by one colon to "
"indicate it has a required argument, and by two colons to indicate it has an "
"optional argument.  The first character of shortopts may be `B<+>' or `B<->' "
"to influence the way options are parsed and output is generated (see section "
"B<SCANNING MODES> for details)."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-q>,B< --quiet>"
msgstr "B<-q>,B< --quiet>"

#. type: Plain text
msgid "Disable error reporting by getopt(3)."
msgstr "deaktivert Fehlermeldung durch getopt(3)."

#. type: TP
#, no-wrap
msgid "B<-Q>,B< --quiet-output>"
msgstr "B<-Q>,B< --quiet-output>"

#. type: Plain text
msgid ""
"Do not generate normal output. Errors are still reported by B<getopt>(3), "
"unless you also use I<-q>."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-s>,B< --shell >I<shell>"
msgstr "B<-s>,B< --shell >I<Shell>"

#. type: Plain text
msgid ""
"Set quoting conventions to those of shell. If no -s argument is found, the "
"E<.SM BASH> conventions are used. Valid arguments are currently `B<sh>' "
"`B<bash>', `B<csh>', and `B<tcsh>'."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-u>,B< --unquoted>"
msgstr "B<-u>,B< --unquoted>"

#. type: Plain text
msgid ""
"Do not quote the output. Note that whitespace and special (shell-dependent)  "
"characters can cause havoc in this mode (like they do with other B<getopt>"
"(1)  implementations)."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-T>,B< --test>"
msgstr "B<-T>,B< --test>"

#. type: Plain text
msgid ""
"Test if your B<getopt>(1)  is this enhanced version or an old version. This "
"generates no output, and sets the error status to 4. Other implementations "
"of B<getopt>(1), and this version if the environment variable "
"B<GETOPT_COMPATIBLE> is set, will return `B<-->' and error status 0."
msgstr ""

#. type: TP
#, no-wrap
msgid "B<-V>,B< --version>"
msgstr "B<-V>,B< --version>"

#. type: Plain text
msgid ""
"Output version information and exit successfully. No other output is "
"generated."
msgstr ""

#. type: SH
#, no-wrap
msgid "PARSING"
msgstr "AUSWERTUNG"

#. type: Plain text
msgid ""
"This section specifies the format of the second part of the parameters of "
"B<getopt> (the I<parameters> in the B<SYNOPSIS>).  The next section "
"(B<OUTPUT>)  describes the output that is generated. These parameters were "
"typically the parameters a shell function was called with.  Care must be "
"taken that each parameter the shell function was called with corresponds to "
"exactly one parameter in the parameter list of B<getopt> (see the "
"B<EXAMPLES>).  All parsing is done by the GNU B<getopt>(3)  routines."
msgstr ""

#. type: Plain text
msgid ""
"The parameters are parsed from left to right. Each parameter is classified "
"as a short option, a long option, an argument to an option, or a non-option "
"parameter."
msgstr ""

#. type: Plain text
msgid ""
"A simple short option is a `B<->' followed by a short option character. If "
"the option has a required argument, it may be written directly after the "
"option character or as the next parameter (ie. separated by whitespace on "
"the command line). If the option has an optional argument, it must be "
"written directly after the option character if present."
msgstr ""

#. type: Plain text
msgid ""
"It is possible to specify several short options after one `B<->', as long as "
"all (except possibly the last) do not have required or optional arguments."
msgstr ""

#. type: Plain text
msgid ""
"A long option normally begins with `B<-->' followed by the long option "
"name.  If the option has a required argument, it may be written directly "
"after the long option name, separated by `B<=>', or as the next argument "
"(ie. separated by whitespace on the command line).  If the option has an "
"optional argument, it must be written directly after the long option name, "
"separated by `B<=>', if present (if you add the `B<=>' but nothing behind "
"it, it is interpreted as if no argument was present; this is a slight bug, "
"see the B<BUGS>).  Long options may be abbreviated, as long as the "
"abbreviation is not ambiguous."
msgstr ""

#. type: Plain text
msgid ""
"Each parameter not starting with a `B<->', and not a required argument of a "
"previous option, is a non-option parameter. Each parameter after a `B<-->' "
"parameter is always interpreted as a non-option parameter.  If the "
"environment variable B<POSIXLY_CORRECT> is set, or if the short option "
"string started with a `B<+>', all remaining parameters are interpreted as "
"non-option parameters as soon as the first non-option parameter is found."
msgstr ""

#. type: SH
#, no-wrap
msgid "OUTPUT"
msgstr "AUSGABE"

#. type: Plain text
msgid ""
"Output is generated for each element described in the previous section.  "
"Output is done in the same order as the elements are specified in the input, "
"except for non-option parameters. Output can be done in I<compatible> "
"(I<unquoted>)  mode, or in such way that whitespace and other special "
"characters within arguments and non-option parameters are preserved (see "
"B<QUOTING>).  When the output is processed in the shell script, it will seem "
"to be composed of distinct elements that can be processed one by one (by "
"using the shift command in most shell languages). This is imperfect in "
"unquoted mode, as elements can be split at unexpected places if they contain "
"whitespace or special characters."
msgstr ""

#. type: Plain text
msgid ""
"If there are problems parsing the parameters, for example because a required "
"argument is not found or an option is not recognized, an error will be "
"reported on stderr, there will be no output for the offending element, and a "
"non-zero error status is returned."
msgstr ""

#. type: Plain text
msgid ""
"For a short option, a single `B<->' and the option character are generated "
"as one parameter. If the option has an argument, the next parameter will be "
"the argument. If the option takes an optional argument, but none was found, "
"the next parameter will be generated but be empty in quoting mode, but no "
"second parameter will be generated in unquoted (compatible) mode.  Note that "
"many other B<getopt>(1)  implementations do not support optional arguments."
msgstr ""

#. type: Plain text
msgid ""
"If several short options were specified after a single `B<->', each will be "
"present in the output as a separate parameter."
msgstr ""

#. type: Plain text
msgid ""
"For a long option, `B<-->' and the full option name are generated as one "
"parameter. This is done regardless whether the option was abbreviated or "
"specified with a single `B<->' in the input. Arguments are handled as with "
"short options."
msgstr ""

#. type: Plain text
msgid ""
"Normally, no non-option parameters output is generated until all options and "
"their arguments have been generated. Then `B<-->' is generated as a single "
"parameter, and after it the non-option parameters in the order they were "
"found, each as a separate parameter.  Only if the first character of the "
"short options string was a `B<->', non-option parameter output is generated "
"at the place they are found in the input (this is not supported if the first "
"format of the B<SYNOPSIS> is used; in that case all preceding occurrences of "
"`B<->' and `B<+>' are ignored)."
msgstr ""

#. type: SH
#, no-wrap
msgid "QUOTING"
msgstr "MASKIEREN"

#. type: Plain text
msgid ""
"In compatible mode, whitespace or 'special' characters in arguments or non-"
"option parameters are not handled correctly. As the output is fed to the "
"shell script, the script does not know how it is supposed to break the "
"output into separate parameters.  To circumvent this problem, this "
"implementation offers quoting. The idea is that output is generated with "
"quotes around each parameter. When this output is once again fed to the "
"shell (usually by a shell B<eval> command), it is split correctly into "
"separate parameters."
msgstr ""

#. type: Plain text
msgid ""
"Quoting is not enabled if the environment variable B<GETOPT_COMPATIBLE> is "
"set, if the first form of the B<SYNOPSIS> is used, or if the option `B<-u>' "
"is found."
msgstr ""

#. type: Plain text
msgid ""
"Different shells use different quoting conventions. You can use the `B<-s>' "
"option to select the shell you are using. The following shells are currently "
"supported: `B<sh>', `B<bash>', `B<csh>' and `B<tcsh>'.  Actually, only two "
"`flavors' are distinguished: sh-like quoting conventions and csh-like "
"quoting conventions. Chances are that if you use another shell script "
"language, one of these flavors can still be used."
msgstr ""

#. type: SH
#, no-wrap
msgid "SCANNING MODES"
msgstr ""

#. type: Plain text
msgid ""
"The first character of the short options string may be a `B<->' or a `B<+>' "
"to indicate a special scanning mode. If the first calling form in the "
"B<SYNOPSIS> is used they are ignored; the environment variable "
"B<POSIXLY_CORRECT> is still examined, though."
msgstr ""

#. type: Plain text
msgid ""
"If the first character is `B<+>', or if the environment variable "
"B<POSIXLY_CORRECT> is set, parsing stops as soon as the first non-option "
"parameter (ie. a parameter that does not start with a `B<->')  is found that "
"is not an option argument. The remaining parameters are all interpreted as "
"non-option parameters."
msgstr ""

#. type: Plain text
msgid ""
"If the first character is a `B<->', non-option parameters are outputted at "
"the place where they are found; in normal operation, they are all collected "
"at the end of output after a `B<-->' parameter has been generated. Note that "
"this `B<-->' parameter is still generated, but it will always be the last "
"parameter in this mode."
msgstr ""

#. type: SH
#, no-wrap
msgid "COMPATIBILITY"
msgstr "KOMPATIBILITÄT"

#. type: Plain text
msgid ""
"This version of B<getopt>(1)  is written to be as compatible as possible to "
"other versions. Usually you can just replace them with this version without "
"any modifications, and with some advantages."
msgstr ""

#. type: Plain text
msgid ""
"If the first character of the first parameter of getopt is not a `B<->', "
"getopt goes into compatibility mode. It will interpret its first parameter "
"as the string of short options, and all other arguments will be parsed. It "
"will still do parameter shuffling (ie. all non-option parameters are "
"outputted at the end), unless the environment variable B<POSIXLY_CORRECT> is "
"set."
msgstr ""

#. type: Plain text
msgid ""
"The environment variable B<GETOPT_COMPATIBLE> forces B<getopt> into "
"compatibility mode. Setting both this environment variable and "
"B<POSIXLY_CORRECT> offers 100% compatibility for `difficult' programs. "
"Usually, though, neither is needed."
msgstr ""

#. type: Plain text
msgid ""
"In compatibility mode, leading `B<->' and `B<+>' characters in the short "
"options string are ignored."
msgstr ""

#. type: SH
#, no-wrap
msgid "RETURN CODES"
msgstr ""

#. type: Plain text
msgid ""
"B<getopt> returns error code B<0> for successful parsing, B<1> if B<getopt>"
"(3)  returns errors, B<2> if it does not understand its own parameters, B<3> "
"if an internal error occurs like out-of-memory, and B<4> if it is called "
"with B<-T>."
msgstr ""

#. type: SH
#, no-wrap
msgid "EXAMPLES"
msgstr "BEISPIELE"

#. type: Plain text
msgid ""
"Example scripts for (ba)sh and (t)csh are provided with the B<getopt>(1)  "
"distribution, and are optionally installed in B</usr/share/doc/util-linux/"
"examples>."
msgstr ""

#. type: SH
#, no-wrap
msgid "ENVIRONMENT"
msgstr "UMGEBUNGSVARIABLEN"

#. type: IP
#, no-wrap
msgid "POSIXLY_CORRECT"
msgstr "POSIXLY_CORRECT"

#. type: Plain text
msgid ""
"This environment variable is examined by the B<getopt>(3)  routines.  If it "
"is set, parsing stops as soon as a parameter is found that is not an option "
"or an option argument. All remaining parameters are also interpreted as non-"
"option parameters, regardless whether they start with a `B<->'."
msgstr ""

#. type: IP
#, no-wrap
msgid "GETOPT_COMPATIBLE"
msgstr "GETOPT_COMPATIBLE"

#. type: Plain text
msgid ""
"Forces B<getopt> to use the first calling format as specified in the "
"B<SYNOPSIS>."
msgstr ""

#. type: SH
#, no-wrap
msgid "BUGS"
msgstr "FEHLER"

#. type: Plain text
msgid ""
"B<getopt>(3)  can parse long options with optional arguments that are given "
"an empty optional argument (but can not do this for short options). This "
"B<getopt>(1)  treats optional arguments that are empty as if they were not "
"present."
msgstr ""

#. type: Plain text
msgid ""
"The syntax if you do not want any short option variables at all is not very "
"intuitive (you have to set them explicitly to the empty string)."
msgstr ""

#. type: SH
#, no-wrap
msgid "AUTHOR"
msgstr "AUTOR"

#. type: Plain text
msgid "Frodo Looijaard E<lt>frodo@frodo.looijaard.nameE<gt>"
msgstr "Frodo Looijaard E<lt>frodo@frodo.looijaard.nameE<gt>"

#. type: SH
#, no-wrap
msgid "SEE ALSO"
msgstr "SIEHE AUCH"

#. type: Plain text
msgid "B<getopt>(3), B<bash>(1), B<tcsh>(1)."
msgstr "B<getopt>(3), B<bash>(1), B<tcsh>(1)."

#. type: SH
#, no-wrap
msgid "AVAILABILITY"
msgstr "VERFÜGBARKEIT"

#. type: Plain text
msgid ""
"The getopt command is part of the util-linux package and is available from "
"ftp://ftp.kernel.org/pub/linux/utils/util-linux/."
msgstr ""
"Der Befehl getopt ist Teil des Pakets util-linux und kann von ftp://ftp."
"kernel.org/pub/linux/utils/util-linux/ heruntergeladen werden."
