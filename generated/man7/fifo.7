.\" -*- coding: UTF-8 -*-
.\" This man page is Copyright (C) 1999 Claus Fischer.
.\" Permission is granted to distribute possibly modified copies
.\" of this page provided the header is included verbatim,
.\" and in case of nontrivial modification author and date
.\" of the modification is added to the header.
.\"
.\" 990620 - page created - aeb@cwi.nl
.\"
.\" FIXME . Add example programs to this page?
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH FIFO 7 "3. Dezember 2008" Linux Linux\-Programmierhandbuch
.SH BEZEICHNUNG
fifo \- »first\-in\-first\-out«\-Spezialdatei (named pipe)
.SH BESCHREIBUNG
Eine FIFO\-Spezialdatei (eine benannte Pipe) ähnelt einer Pipeline. Auf Sie
wird aber als Teil des Dateisystems zugegriffen. Auf den FIFO kann von
mehreren Prozessen lesend oder schreibend zugegriffen werden. Wenn die
Prozesse über den FIFO Daten austauschen, werden die Daten vom Kernel intern
weitergegeben, ohne tatsächlich im Dateisystem gespeichert zu werden. Der
FIFO enthält als Datei somit keine Daten. Der Eintrag im Dateisystem dient
als Bezugspunkt, auf den Prozesse über einen Namen im Dateisystem zugreifen
können.
.PP
Der Kernel verwaltet genau ein Pipe\-Objekt für jeden FIFO, der von
wenigstens einem Prozess zum Lesen oder Schreiben geöffnet ist. Damit Daten
durch den FIFO transportiert werden können, muss der FIFO von beiden Enden
geöffnet sein, einmal lesend und einmal schreibend. Im Normalfall wird die
Verarbeitung nach dem Öffnen des FIFOs so lange blockiert, bis auch das
andere Ende geöffnet ist.
.PP
Ein FIFO kann vom Prozess auch nicht blockierend geöffnet werden. In diesem
Fall funktioniert das Öffnen des FIFOs zum Lesen auch dann, wenn er noch von
keinem anderen Prozess zum Schreiben geöffnet wurde. Das Öffnen zum
Schreiben bricht mit \fBENXIO\fP (Datei oder Adresse nicht gefunden) ab, wenn
nicht bereits ein anderer Prozess den FIFO zum Lesen geöffnet hat.
.PP
Unter LINUX können FIFOs sowohl lesend als auch schreibend in den beiden
Modi blockierend und nicht blockierend geöffnet werden. Gemäß POSIX ist
dafür kein Verfahren definiert. Dadurch kann ein FIFO zum Schreiben geöffnet
werden, ohne dass lesende Prozesse vorhanden sind. Falls ein Prozess beide
Seiten eines FIFOs öffnet, um mit sich selbst zu kommunizieren, sollte er
sorgfältig auf die Vermeidung von Deadlocks (Verklemmungen) achten.
.SH ANMERKUNGEN
Versucht ein Prozess in einen FIFO zu schreiben, der nicht auf der anderen
Seite zum Lesen geöffnet ist, erhält er vom Kernel das Signal \fBSIGPIPE\fP.

FIFOs werden mit \fBmkfifo\fP(3) angelegt. In der Ausgabe von \fIls \-l\fP ist ihr
Dateityp \(aqp\(aq.
.SH "SIEHE AUCH"
\fBmkfifo\fP(1), \fBopen\fP(2), \fBpipe\fP(2), \fBsigaction\fP(2), \fBsignal\fP(2),
\fBsocketpair\fP(2), \fBmkfifo\fP(3), \fBpipe\fP(7)
.SH KOLOPHON
Diese Seite ist Teil der Veröffentlichung 3.35 des Projekts
Linux\-\fIman\-pages\fP. Eine Beschreibung des Projekts und Informationen, wie
Fehler gemeldet werden können, finden sich unter
http://man7.org/linux/man\-pages/.

.SH ÜBERSETZUNG
Die deutsche Übersetzung dieser Handbuchseite wurde von
Martin Schmitt <martin@schmitt.li>
und
Martin Eberhard Schauer <Martin.E.Schauer@gmx.de>
erstellt.

Diese Übersetzung ist Freie Dokumentation; lesen Sie die
GNU General Public License Version 3 oder neuer bezüglich der
Copyright-Bedingungen. Es wird KEINE HAFTUNG übernommen.

Wenn Sie Fehler in der Übersetzung dieser Handbuchseite finden,
schicken Sie bitte eine E-Mail an <debian-l10n-german@lists.debian.org>.
