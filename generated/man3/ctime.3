.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 19:49:27 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Fri Apr 26 12:38:55 MET DST 1996 by Martin Schulze (joey@linux.de)
.\" Modified 2001-11-13, aeb
.\" Modified 2001-12-13, joey, aeb
.\" Modified 2004-11-16, mtk
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH CTIME 3 "25. Februar 2010" "" Linux\-Programmierhandbuch
.SH BEZEICHNUNG
asctime, ctime, gmtime, localtime, mktime \- Datum und Zeit in
aufgeschlüsselte Zeit oder ASCII umwandeln
.SH ÜBERSICHT
.nf
\fB#include <time.h>\fP
.sp
\fBchar *asctime(const struct tm *\fP\fItm\fP\fB);\fP
.br
\fBchar *asctime_r(const struct tm *\fP\fItm\fP\fB, char *\fP\fIpuffer\fP\fB);\fP
.sp
\fBchar *ctime(const time_t *\fP\fItimep\fP\fB);\fP
.br
\fBchar *ctime_r(const time_t *\fP\fItimep\fP\fB, char *\fP\fIpuffer\fP\fB);\fP
.sp
\fBstruct tm *gmtime(const time_t *\fP\fItimep\fP\fB);\fP
.br
\fBstruct tm *gmtime_r(const time_t *\fP\fItimep\fP\fB, struct tm *\fP\fIergebnis\fP\fB);\fP
.sp
\fBstruct tm *localtime(const time_t *\fP\fItimep\fP\fB);\fP
.br
\fBstruct tm *localtime_r(const time_t *\fP\fItimep\fP\fB, struct tm *\fP\fIergebnis\fP\fB);\fP
.sp
\fBtime_t mktime(struct tm *\fP\fItm\fP\fB);\fP
.fi
.sp
.in -4n
Mit Glibc erforderliche Makros (siehe \fBfeature_test_macros\fP(7)):
.in
.ad l
.sp
\fBasctime_r\fP(), \fBctime_r\fP(), \fBgmtime_r\fP(), \fBlocaltime_r\fP():
.RS
_POSIX_C_SOURCE\ >=\ 1 || _XOPEN_SOURCE || _BSD_SOURCE || _SVID_SOURCE
|| _POSIX_SOURCE
.RE
.ad
.SH BESCHREIBUNG
Die Funktionen \fBctime\fP(), \fBgmtime\fP() und \fBlocaltime\fP() benötigen ein
Argument des Datentyps \fItime_t\fP, welches die Kalenderzeit darstellt. Wenn
sie als absoluter Zeitwert interpretiert wird, stellt sie die Unixzeit dar,
die Sekunden, die seit dem 1. Januar 1970, 00:00.00 Uhr koordinierter
Weltzeit (UTC) verstrichen sind.
.PP
Die Funktionen \fBasctime\fP() und \fBmktime\fP() benötigen jeweils ein Argument
das eine aufgeschlüsselte Zeitangabe darstellt, die in Jahr, Monat, Tag
usw. aufgeteilt ist.
.PP
Aufgeschlüsselte Zeit wird in der Struktur \fItm\fP gespeichert, die in
\fI<time.h>\fP wie folgt definiert ist:
.sp
.in +4n
.nf
struct tm {
    int tm_sec;         /* Sekunden */
    int tm_min;         /* Minuten */
    int tm_hour;        /* Stunden */
    int tm_mday;        /* Monatstag */
    int tm_mon;         /* Monat */
    int tm_year;        /* Jahr */
    int tm_wday;        /* Wochentag */
    int tm_yday;        /* Jahrestag */
    int tm_isdst;       /* Sommerzeit */
};
.fi
.in
.PP
Die Elemente der Struktur \fItm\fP sind:
.TP  10
\fItm_sec\fP
die Anzahl der Sekunden nach der vollen Minute, normalerweise im Bereich 0
bis 59, kann aber bis zu 60 sein, um Schaltsekunden zu erlauben.
.TP 
\fItm_min\fP
die Anzahl der Minuten nach der vollen Stunde, im Bereich 0 bis 59.
.TP 
\fItm_hour\fP
die Anzahl der Stunden nach Mitternacht, im Bereich 0 bis 23.
.TP 
\fItm_mday\fP
der Tag des Monats, im Bereich 1 bis 31.
.TP 
\fItm_mon\fP
die Anzahl der Monate seit Januar, im Bereich 0 bis 11.
.TP 
\fItm_year\fP
die Anzahl der Jahre nach 1900.
.TP 
\fItm_wday\fP
die Anzahl der Tage seit Sonntag, im Bereich 0 bis 6.
.TP 
\fItm_yday\fP
die Anzahl der Tage seit dem 1. Januar, im Bereich 0 bis 365.
.TP 
\fItm_isdst\fP
ein Schalter, der anzeigt, ob in der angegebenen Zeit Sommerzeit ist. Der
Wert ist in der Sommerzeit positiv, Null wenn nicht und negativ wenn die
Information nicht verfügbar ist.
.PP
Der Aufruf \fBctime(\fP\fIt\fP\fB)\fP entspricht \fBasctime(localtime(\fP\fIt\fP\fB))\fP. Er
konvertiert die Kalenderzeit \fIt\fP in eine durch Null beendete Zeichenkette
der Form
.sp
.RS
"Wed Jun 30 21:49:08 1993\en"
.RE
.sp
Die Abkürzungen für die Wochentage sind »Sun«, »Mon«, »Tue«, »Wed«, »Thu«,
»Fri«, und »Sat«.  Die Abkürzungen für die Monate sind »Jan«, »Feb«, »Mar«,
»Apr«, »May«, »Jun«, »Jul«, »Aug«, »Sep«, »Oct«, »Nov«, und »Dec«.  Der
Rückgabewert zeigt auf eine statisch reservierte Zeichenkette, die durch
nachfolgende Aufrufe von Datums\- und Zeitfunktionen überschrieben werden
darf. Die Funktion setzt auch die externen Variablen \fItzname\fP, \fItimezone\fP
und \fIdaylight\fP (siehe \fBtzset\fP(3)) mit Informationen über die aktuelle
Zeitzone. Die ablaufinvariante Version \fBctime_r\fP() tut dasselbe, speichert
aber die Zeichenkette in einem vom Benutzer gelieferten Zeichenkettenpuffer,
der Platz für mindestens 26 Byte haben sollte. \fItzname\fP, \fItimezone\fP und
\fIdaylight\fP müssen nicht gesetzt sein.
.PP
Die Funktion \fBgmtime\fP() wandelt die Kalenderzeit \fItimep\fP in eine
aufgeschlüsselte Entsprechung der Zeit um, die in koordinierter Weltzeit
(UTC) ausgedrückt wird. Sie kann NULL zurückgeben, wenn das Jahr nicht in
eine Ganzzahl passt. Der Rückgabewert zeigt auf eine statisch reservierte
Struktur, die von nachfolgenden Aufrufen irgendwelcher Datums\- und
Zeitfunktionen überschrieben werden kann. Die Funktion \fBgmtime_r\fP() tut das
gleiche, speichert aber die Daten in einer vom Benutzer gelieferten
Struktur.
.PP
Die Funktion \fBlocaltime\fP() wandelt die Kalenderzeit \fItimep\fP in eine
aufgeschlüsselte Entsprechung der Zeit um, ausgedrückt relativ zu der vom
Benutzer angegebenen Zeitzone. Die Funktion arbeitet, als ob sie \fBtzset\fP(3)
aufrufen würde und setzt die externen Variablen \fItzname\fP auf die
Informationen über die aktuelle Zeitzone, \fItimezone\fP auf die Differenz
zwischen koordinierter Weltzeit (UTC) und der lokalen Standardzeit in
Sekunden und \fIdaylight\fP auf einen Wert ungleich Null, falls während einem
Teil des Jahres Sommerzeitregeln gelten. Der Rückgabewert zeigt auf eine
statisch reservierte Struktur, die von nachfolgenden Aufrufen irgendwelcher
Datums\- und Zeitfunktionen überschrieben werden kann. Die Funktion
\fBlocaltime_r\fP() tut das gleiche, speichert aber die Daten in einer vom
Benutzer gelieferten Struktur. \fItzname\fP, \fItimezone\fP und \fIdaylight\fP müssen
nicht gesetzt sein.
.PP
Die Funktion \fBasctime\fP() wandelt den aufgeschlüsselten Zeitwert \fItm\fP in
eine durch Null beendete Zeichenkette mit dem gleichen Format wie
\fBctime\fP(). Der Rückgabewert zeigt auf eine statisch reservierte
Zeichenkette, die von nachfolgenden Aufrufen irgendwelcher Datums\- und
Zeitfunktionen überschrieben werden kann. Die Funktion \fBasctime_r\fP() tut
das gleiche, speichert aber die Zeichenkette in einem vom Benutzer
gelieferten Zeichenkettenpuffer, der Platz für mindestens 26 Byte haben
sollte.
.PP
Die Funktion \fBmktime\fP() wandelt die aufgeschlüsselten Zeitstruktur, die als
lokale Zeit ausgedrückt wird, in eine Entsprechung der Kalenderzeit. Die
Funktion ignoriert die Werte, die der Aufrufende in den Feldern \fItm_wday\fP
und \fItm_yday\fP mitgegeben hat, egal ob in der Zeit der mitgegebenen Struktur
\fItm\fP Sommerzeit ist oder nicht: Ein positiver Wert bedeutet, dass
Sommerzeit ist, Null bedeutet, dass keine Sommerzeit ist und ein negativer
Wert bedeutet, dass \fBmktime\fP() (mit Zeitzoneninformationen und
Systemdatenbanken) versuchen sollte zu bestimmen, ob zur angegebenen Zeit
Sommerzeit ist oder nicht.

Die Funktion \fBmktime\fP() ändert die Felder der Struktur \fItm\fP wie folgt:
\fItm_wday\fP und \fItm_yday\fP werden auf die Werte gesetzt, die vom Inhalt
anderer Felder bestimmt werden; falls Elemente der Stuktur außerhalb ihres
erlaubten Intervalls liegen, werden sie normalisiert (so dass zum Beispiel
der 40. Oktober auf 9. November geändert wird); \fItm_isdst\fP wird (unabhängig
vom anfänglichen Wert) auf einen positiven Wert beziehungsweise 0 gesetzt,
um anzuzeigen, ob zur angegebenen Zeit Sommerzeit ist oder nicht. Der Aufruf
von \fBmktime\fP() setzt außerdem die Variable \fItzname\fP mit Informationen über
die aktuelle Zeitzone.

Falls die angegebene aufgeschlüsselte Zeit nicht als Kalenderzeit (Unixzeit
in Sekunden) dargestellt werden kann, gibt \fBmktime\fP() einen Wert von
\fI(time_t)\ \-1\fP an und verändert die Elemente der aufgeschlüsselten
Zeitstruktur nicht.
.SH RÜCKGABEWERT
Jede dieser Funktionen gibt den beschriebenen Wert oder NULL zurück (\-1 im
Fall von \fBmktime\fP()), falls ein Fehler entdeckt wurde.
.SH "KONFORM ZU"
POSIX.1\-2001. C89 und C99 spezifizieren \fBasctime\fP(), \fBctime\fP(),
\fBgmtime\fP(), \fBlocaltime\fP() und \fBmktime\fP(). POSIX.1\-2008 kennzeichnet
\fBasctime_r\fP(), \fBctime\fP() und \fBctime_r\fP() als veraltet und empfiehlt
stattdessen die Benutzung von \fBstrftime\fP(3).
.SH ANMERKUNGEN
Die vier Funktionen \fBasctime\fP(), \fBctime\fP(), \fBgmtime\fP() und \fBlocaltime\fP()
geben einen Zeiger auf statische Daten zurück und sind daher nicht sicher
für Threads. Die für Threads sicheren Versionen \fBasctime_r\fP(),
\fBctime_r\fP(), \fBgmtime_r\fP() und \fBlocaltime_r\fP werden durch SUSv2
spezifiziert und sind seit Libc 5.2.5 verfügbar.

POSIX.1\-2001 sagt: »Die Funktionen \fBasctime\fP(), \fBctime\fP(), \fBgmtime\fP() und
\fBlocaltime\fP() sollen Rückgabewerte in einem von zwei statischen Objekten
liefern: einer aufgeschlüsselten Zeit und einem Feld des Typs \fIchar\fP. Das
Ausführen irgendeiner der Funktionen könnte die zurückgegebene Information
überschreiben, die von diesen beiden Objekten durch andere Funktionen
zurückgegeben wurden.« Dies kann in der Glibc\-Implementierung vorkommen.
.LP
In vielen Implementierungen, einschließlich Glibc, wird a 0 in \fItm_mday\fP
als letzter Tag des vorhergehenden Monats interpretiert.
.LP
Die Glibc\-Version von \fIstruct tm\fP hat zusätzliche Felder.
.sp
.RS
.nf
long tm_gmtoff;           /* Sekunden östlich von UTC */
const char *tm_zone;      /* Abkürzung der Zeitzone */
.fi
.RE
.sp
definiert, wenn \fB_BSD_SOURCE\fP gesetzt war bevor \fI<time.h>\fP
eingebunden wurde. Dies ist eine BSD\-Erweiterung, die in 4.3BSD\-Reno
enthalten ist.

.\" See http://thread.gmane.org/gmane.comp.time.tz/2034/
Gemäß POSIX.1\-2004 wird \fBlocaltime\fP() benötigt, um sich so zu verhalten,
als sei \fBtzset\fP() aufgerufen worden, während \fBlocaltime_r\fP() nicht diese
Anforderung stellt. Für portierbaren Code sollte \fBtzset\fP() vor
\fBlocaltime_r\fP() aufgerufen werden.
.SH "SIEHE AUCH"
\fBdate\fP(1), \fBgettimeofday\fP(2), \fBtime\fP(2), \fButime\fP(2), \fBclock\fP(3),
\fBdifftime\fP(3), \fBstrftime\fP(3), \fBstrptime\fP(3), \fBtimegm\fP(3), \fBtzset\fP(3),
\fBtime\fP(7)
.SH KOLOPHON
Diese Seite ist Teil der Veröffentlichung 3.27 des Projekts
Linux\-\fIman\-pages\fP. Eine Beschreibung des Projekts und Informationen, wie
Fehler gemeldet werden können, finden sich unter
http://www.kernel.org/doc/man\-pages/.

.SH ÜBERSETZUNG
Die deutsche Übersetzung dieser Handbuchseite wurde von
Patrick Rother <krd@gulu.net>
und
Chris Leick <c.leick@vollbio.de>
erstellt.

Diese Übersetzung ist Freie Dokumentation; lesen Sie die
GNU General Public License Version 3 oder neuer bezüglich der
Copyright-Bedingungen. Es wird KEINE HAFTUNG übernommen.

Wenn Sie Fehler in der Übersetzung dieser Handbuchseite finden,
schicken Sie bitte eine E-Mail an <debian-l10n-german@lists.debian.org>.
