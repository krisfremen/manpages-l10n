.\" -*- coding: UTF-8 -*-
.\" Copyright (c) 1990, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)ferror.3	6.8 (Berkeley) 6/29/91
.\"
.\"
.\" Converted for Linux, Mon Nov 29 14:24:40 1993, faith@cs.unc.edu
.\" Added remark on EBADF for fileno, aeb, 2001-03-22
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH FERROR 3 "29. August 2008" "" Linux\-Programmierhandbuch
.SH BEZEICHNUNG
clearerr, feof, ferror, fileno \- Prüfen und Rücksetzen des Stream\-Status
.SH ÜBERSICHT
\fB#include <stdio.h>\fP
.sp
\fBvoid clearerr(FILE *\fP\fIstream\fP\fB);\fP

\fBint feof(FILE *\fP\fIstream\fP\fB);\fP

\fBint ferror(FILE *\fP\fIstream\fP\fB);\fP

\fBint fileno(FILE *\fP\fIstream\fP\fB);\fP
.sp
.in -4n
Mit Glibc erforderliche Makros (siehe \fBfeature_test_macros\fP(7)):
.in
.sp
\fBfileno\fP(): _POSIX_C_SOURCE\ >=\ 1 || _XOPEN_SOURCE || _POSIX_SOURCE
.SH BESCHREIBUNG
Die Funktion \fBclearerr\fP() löscht die Dateiende\- und Fehlerkennungen für den
Stream, auf den \fIstream\fP weist.
.PP
Die Funktion \fBfeof\fP() prüft die Dateiendekennung für den Stream
\fIstream\fP. \fBfeof\fP() liefert ein Ergebnis ungleich 0, wenn die
Dateiendekennung gesetzt ist. Die Dateiendekennung kann nur von der Funktion
\fBclearerr\fP() gelöscht werden.
.PP
Die Funktion \fBferror\fP() prüft die Fehlerkennung für den Stream
\fIstream\fP. \fBferror\fP liefert ein Ergebnis ungleich 0, wenn die Fehlerkennung
gesetzt ist. Die Fehlerkennung kann nur mit der Funktion \fBclearerr\fP()
gelöscht werden.
.PP
Die Funktion \fBfileno\fP() prüft das Argument \fIstream\fP und liefert seinen
Dateideskriptor als Integer.
.PP
Nicht sperrende Gegenstücke werden in \fBunlocked_stdio\fP(3) beschrieben.
.SH FEHLER
Diese Funktionen sollten nicht fehlschlagen und weisen der externen Variable
\fIerrno\fP keinen Wert zu. (Falls aber \fBfileno\fP() sein Argument als
ungültigen Stream erkennt, muss die Funktion \-1 zurückgeben und \fIerrno\fP auf
\fBEBADF\fP setzen.)
.SH "KONFORM ZU"
Die Funktionen \fBclearerr\fP(), \fBfeof\fP() und \fBferror\fP() sind konform zu C89
und C99.
.SH "SIEHE AUCH"
\fBopen\fP(2), \fBfdopen\fP(3), \fBstdio\fP(3), \fBunlocked_stdio\fP(3)
.SH KOLOPHON
Diese Seite ist Teil der Veröffentlichung 3.35 des Projekts
Linux\-\fIman\-pages\fP. Eine Beschreibung des Projekts und Informationen, wie
Fehler gemeldet werden können, finden sich unter
http://man7.org/linux/man\-pages/.

.SH ÜBERSETZUNG
Die deutsche Übersetzung dieser Handbuchseite wurde von
Roland Krause <Rokrause@aol.com>
und
Martin Eberhard Schauer <Martin.E.Schauer@gmx.de>
erstellt.

Diese Übersetzung ist Freie Dokumentation; lesen Sie die
GNU General Public License Version 3 oder neuer bezüglich der
Copyright-Bedingungen. Es wird KEINE HAFTUNG übernommen.

Wenn Sie Fehler in der Übersetzung dieser Handbuchseite finden,
schicken Sie bitte eine E-Mail an <debian-l10n-german@lists.debian.org>.
