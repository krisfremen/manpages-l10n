.\" Copyright (c) 1994 Mike Battersby
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified by aeb, 960721
.\" 2005-11-21, mtk, added descriptions of sigisemptyset(), sigandset(),
.\"                  and sigorset()
.\" 2007-10-26 mdw   added wording that a sigset_t must be initialized
.\"                  prior to use
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH SIGSETOPS 3 "1. September 2008" Linux Linux\-Programmierhandbuch
.SH BEZEICHNUNG
sigemptyset, sigfillset, sigaddset, sigdelset, sigismember \-
POSIX\-Operationen für Signalsätze
.SH ÜBERSICHT
\fB#include <signal.h>\fP
.sp
\fBint sigemptyset(sigset_t *\fP\fIset\fP\fB);\fP
.sp
\fBint sigfillset(sigset_t *\fP\fIset\fP\fB);\fP
.sp
\fBint sigaddset(sigset_t *\fP\fIset\fP\fB, int \fP\fIsignum\fP\fB);\fP
.sp
\fBint sigdelset(sigset_t *\fP\fIset\fP\fB, int \fP\fIsignum\fP\fB);\fP
.sp
\fBint sigismember(const sigset_t *\fP\fIset\fP\fB, int \fP\fIsignum\fP\fB);\fP
.sp
.in -4n
Mit Glibc erforderliche Makros (siehe \fBfeature_test_macros\fP(7)):
.in
.sp
.ad l
\fBsigemptyset\fP(), \fBsigfillset\fP(), \fBsigaddset\fP(), \fBsigdelset\fP(),
\fBsigismember\fP():
.RS 4
_POSIX_C_SOURCE\ >=\ 1 || _XOPEN_SOURCE || _POSIX_SOURCE
.RE
.ad b
.SH BESCHREIBUNG
Diese Funktionen ermöglichen die Manipulation von POSIX\-Signalsätzen.
.PP
\fBsigemptyset\fP() initialisiert den durch \fIset\fP gegebenen Signalsatz auf
leer, wobei alle Signale vom Satz ausgeschlossen sind.
.PP
\fBsigfillset\fP() initialisiert \fIset\fP auf voll und nimmt alle Signale darin
auf.
.PP
\fBsigaddset\fP() und \fBsigdelset\fP() fügen Signal \fIsignum\fP zu \fIset\fP hinzu
bzw. löschen es daraus.
.PP
\fBsigismember\fP() prüft, ob \fIsignum\fP in \fIset\fP enthalten ist.
.PP
Objekte des Typs \fIsigset_t\fP müssen durch einen Aufruf von entweder
\fBsigemptyset\fP() oder \fBsigfillset\fP() initialisiert werden, bevor sie an die
Funktionen \fBsigaddset\fP(), \fBsigdelset\fP() und \fBsigismember\fP() oder die
unten beschriebenen zusätzlichen Funktionen der glibc (\fBsigisemptyset\fP(),
\fBsigandset\fP() und \fBsigorset\fP()) übergeben werden. Erfolgt keine
Initialisierung, sind die Ergebnisse nicht definiert.
.SH RÜCKGABEWERT
\fBsigemptyset\fP(), \fBsigfullset\fP(), \fBsigaddset\fP() und \fBsigdelset\fP() geben
bei Erfolg 0 und im Fehlerfall \-1 zurück.
.PP
\fBsigismember\fP() gibt 1 zurück, wenn \fIsignum\fP in \fIset\fP enthalten ist und
0, wenn das nicht der Fall ist. Treten Fehler auf, ist der Rückgabewert \-1.
.SH FEHLER
.TP 
\fBEINVAL\fP
\fIsig\fP ist kein gültiges Signal.
.SH "KONFORM ZU"
POSIX.1\-2001.
.SH ANMERKUNGEN
.SS "Anmerkungen zur Glibc"
Ist das Feature\-Test\-Makro \fB_GNU_SOURCE\fP definiert, akiviert
\fI<signal.h>\fP drei weitere Funktionen für die Behandlung von
Signalsätzen.
.TP 
\fBint sigisemptyset(sigset_t *\fP\fIset\fP\fB);\fP
gibt 1 zurück, wenn \fIset\fP leer ist, sonst 0.
.TP 
\fBint sigorset(sigset_t *\fP\fIdest\fP\fB, sigset_t *\fP\fIleft\fP\fB, sigset_t *\fP\fIright\fP\fB);\fP
platziert die vereinigten Sätze \fIleft\fP and \fIright\fP in \fIdest\fP.
.TP 
\fBint sigandset(sigset_t *\fP\fIdest\fP\fB, sigset_t *\fP\fIleft\fP\fB, sigset_t *\fP\fIright\fP\fB);\fP
platziert die Schnittmenge von \fIleft\fP und \fIright\fP in \fIdest\fP.
.PP
\fBsigorset\fP() und \fBsigandset\fP() geben bei Erfolg 0 zurück, im Fehlerfall
\-1.
.PP
Diese Funktionen sind nicht standardisiert (ein paar andere System stellen
ähnliche Funktionen bereit). Ihre Verwendung in portablen Programmen sollte
vermieden werden.
.SH "SIEHE AUCH"
\fBsigaction\fP(2), \fBsigpending\fP(2), \fBsigprocmask\fP(2), \fBsigsuspend\fP(2)
.SH KOLOPHON
Diese Seite ist Teil der Veröffentlichung 3.32 des Projekts
Linux\-\fIman\-pages\fP. Eine Beschreibung des Projekts und Informationen, wie
Fehler gemeldet werden können, finden sich unter
http://www.kernel.org/doc/man\-pages/.

.SH ÜBERSETZUNG
Die deutsche Übersetzung dieser Handbuchseite wurde von
Patrick Rother <krd@gulu.net>
und
Martin Eberhard Schauer <Martin.E.Schauer@gmx.de>
erstellt.

Diese Übersetzung ist Freie Dokumentation; lesen Sie die
GNU General Public License Version 3 oder neuer bezüglich der
Copyright-Bedingungen. Es wird KEINE HAFTUNG übernommen.

Wenn Sie Fehler in der Übersetzung dieser Handbuchseite finden,
schicken Sie bitte eine E-Mail an <debian-l10n-german@lists.debian.org>.
