.\" Copyright (C) 2001 Andries Brouwer <aeb@cwi.nl>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Text fragments inspired by Martin Schulze <joey@infodrom.org>.
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH ASPRINTF 3 "18. Dezember 2001" GNU Linux\-Programmierhandbuch
.SH BEZEICHNUNG
asprintf, vasprintf \- Ausgabe in reservierte Zeichenkette
.SH ÜBERSICHT
\fB#define _GNU_SOURCE\fP
.br
\fB#include <stdio.h>\fP
.sp
\fBint asprintf(char **\fP\fIstrp\fP\fB, const char *\fP\fIfmt\fP\fB, ...);\fP
.sp
\fBint vasprintf(char **\fP\fIstrp\fP\fB, const char *\fP\fIfmt\fP\fB, va_list
\fP\fIap\fP\fB);\fP
.SH BESCHREIBUNG
Die Funktionen \fBasprintf\fP() und \fBvasprintf\fP() sind analog zu \fBsprintf\fP(3)
und \fBvsprintf\fP(3). Der Unterschied besteht darin, dass sie ausreichend
großen Speicherplatz für die Zeichenkette reservieren, um die Ausgabe
inklusive des abschließenden Null\-Bytes aufzunehmen. Ein Zeiger auf den
Speicher wird über den ersten Parameter zurückgegeben. Dieser Zeiger sollte
an \fBfree\fP(3) übergeben werden, um den reservierten Speicherbereich wieder
freizugeben, wenn er nicht mehr benötigt wird.
.SH RÜCKGABEWERT
Bei Erfolg geben diese Funktionen, wie auch \fBsprintf\fP(3), die Anzahl
ausgegebener Bytes zurück. Wenn Fehler auftreten (z.B. eine gescheiterte
Speicherreservierung), geben diese Funktionen \-1 zurück. Dann ist der Inhalt
von \fIstrp\fP nicht definiert.
.SH "KONFORM ZU"
Diese Funktionen sind GNU\-Erweiterungen. Sie sind nicht in C oder POSIX
definiert. Sie sind auch unter *BSD verfügbar. Die FreeBSD\-Implementierung
setzt \fIstrp\fP bei Fehlern auf NULL.
.SH "SIEHE AUCH"
\fBfree\fP(3), \fBmalloc\fP(3), \fBprintf\fP(3), \fBfeature_test_macros\fP(7)
.SH KOLOPHON
Diese Seite ist Teil der Veröffentlichung 3.25 des Projekts
Linux\-\fIman\-pages\fP. Eine Beschreibung des Projekts und Informationen, wie
Fehler gemeldet werden können, finden sich unter
http://www.kernel.org/doc/man\-pages/.

.SH ÜBERSETZUNG
Die deutsche Übersetzung dieser Handbuchseite wurde von
Martin Schulze <joey@infodrom.org>,
David Thamm <dthamm@bfs.de>
und
Martin E. Schauer <Martin.E.Schauer@gmx.de>
erstellt.

Diese Übersetzung ist Freie Dokumentation; lesen Sie die
GNU General Public License Version 3 oder neuer für die
Copyright-Bedingungen. Es gibt KEINE HAFTUNG.

Wenn Sie Fehler in der Übersetzung dieser Handbuchseite finden,
schicken Sie bitte eine E-Mail an <debian-l10n-german@lists.debian.org>.
