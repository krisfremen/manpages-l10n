.\" Copyright (c) 1990, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)fclose.3	6.7 (Berkeley) 6/29/91
.\"
.\" Converted for Linux, Mon Nov 29 15:19:14 1993, faith@cs.unc.edu
.\"
.\" Modified 2000-07-22 by Nicolás Lichtmaier <nick@debian.org>
.\"      added note about fclose not ensuring the data is physically saved
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH FCLOSE 3 "23. Februar 2009" GNU Linux\-Programmierhandbuch
.SH BEZEICHNUNG
fclose \- einen Datenstrom schließen
.SH ÜBERSICHT
\fB#include <stdio.h>\fP
.sp
\fBint fclose(FILE *\fP\fIfp\fP\fB);\fP
.SH BESCHREIBUNG
Die Funktion \fBfclose\fP() leert den Datenstrom auf den \fIfp\fP zeigt (schreibt
jegliche gepufferten Ausgabedaten mittels \fBfflush\fP(3)) und schließt den
zugrundeliegenden Dateideskriptor.
.PP
Das Verhalten von \fBfclose\fP() ist undefiniert, wenn der Parameter \fIstream\fP
ein illegaler Zeiger oder ein bereits an \fBfclose\fP() übergeben wurde.
.SH RÜCKGABEWERT
Bei erfolgreichem Abschluss wird 0 zurückgegeben. Anderenfalls wird \fBEOF\fP
zurückgegeben und die globale Variable \fIerrno\fP gesetzt, um den Fehler
anzuzeigen. Auf jeden Fall führt ein weiterer Zugriff (einschließlich einem
anderen Aufruf zu \fBfclose\fP()) auf den Datenstrom zu einem undefinierten
Verhalten.
.SH FEHLER
.TP 
\fBEBADF\fP
.\"  This error cannot occur unless you are mixing ANSI C stdio operations and
.\"  low-level file operations on the same stream. If you do get this error,
.\"  you must have closed the stream's low-level file descriptor using
.\"  something like close(fileno(fp)).
Der Dateideskriptor der \fIfp\fP zugrundeliegt ist nicht gültig.
.PP
Die Funktion \fBfclose\fP() kann auch fehlschlagen und \fIerrno\fP für die Fehler
setzen, die für die Routinen \fBclose\fP(2), \fBwrite\fP(2) oder \fBfflush\fP(3)
spezifiziert sind.
.SH "KONFORM ZU"
C89, C99.
.SH ANMERKUNGEN
Beachten Sie, dass \fBfclose\fP() nur die Puffer des Anwenderadressraums leert,
die von der C\-Bibliothek bereitgestellt werden. Um sicherzustellen, dass die
Daten physisch auf der Platte gespeichert werden, müssen auch die
Kernelpuffer geleert werden, zum Beispiel mit \fBsync\fP(2) oder \fBfsync\fP(2).
.SH "SIEHE AUCH"
\fBclose\fP(2), \fBfcloseall\fP(3), \fBfflush\fP(3), \fBfopen\fP(3), \fBsetbuf\fP(3)
.SH KOLOPHON
Diese Seite ist Teil der Veröffentlichung 3.27 des Projekts
Linux\-\fIman\-pages\fP. Eine Beschreibung des Projekts und Informationen, wie
Fehler gemeldet werden können, finden sich unter
http://www.kernel.org/doc/man\-pages/.

.SH ÜBERSETZUNG
Die deutsche Übersetzung dieser Handbuchseite wurde von
Patrick Rother <krd@gulu.net>
und
Chris Leick <c.leick@vollbio.de>
erstellt.

Diese Übersetzung ist Freie Dokumentation; lesen Sie die
GNU General Public License Version 3 oder neuer bezüglich der
Copyright-Bedingungen. Es wird KEINE HAFTUNG übernommen.

Wenn Sie Fehler in der Übersetzung dieser Handbuchseite finden,
schicken Sie bitte eine E-Mail an <debian-l10n-german@lists.debian.org>.
