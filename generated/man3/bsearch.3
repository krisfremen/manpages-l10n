.\" -*- coding: UTF-8 -*-
.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Mon Mar 29 22:41:16 1993, David Metcalfe
.\" Modified Sat Jul 24 21:35:16 1993, Rik Faith (faith@cs.unc.edu)
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH BSEARCH 3 "1. November 2003" "" Linux\-Programmierhandbuch
.SH BEZEICHNUNG
bsearch \- binäre Suche in einem sortierten Feld (Array)
.SH ÜBERSICHT
.nf
\fB#include <stdlib.h>\fP
.sp
\fBvoid *bsearch(const void *\fP\fIkey\fP\fB, const void *\fP\fIbase\fP\fB,\fP
\fB              size_t \fP\fInmemb\fP\fB, size_t \fP\fIsize\fP\fB,\fP
\fB              int (*\fP\fIcompar\fP\fB)(const void *, const void *));\fP
.fi
.SH BESCHREIBUNG
Die Funktion \fBbsearch\fP() durchsucht ein Feld von \fInmemb\fP Objekten nach
Übereinstimmung mit dem Objekt, auf das \fIkey\fP zeigt. \fIbase\fP zeigt auf das
erste Objekt des Felds; \fIsize\fP legt die Größe der einzelnen im Feld
enthaltenen Objekte fest.
.PP
Der Inhalt des Felds sollte gemäß der Vergleichsfunktion \fIcompar\fP
aufsteigend sortiert sein. Von \fIcompar\fP wird erwartet, dass sie zwei
Argumente verarbeitet. Das erste Argument verweist auf das \fIkey\fP\-Objekt;
das zweite auf ein Element des Arrays. Der Rückgabewert sollte ein Integer
kleiner, gleich oder größer Null sein, je nachdem, ob das \fIkey\fP\-Objekt
kleiner, gleich oder größer als das Element des Felds ist.
.SH RÜCKGABEWERT
Die Funktion \fBbsearch\fP() gibt einen Zeiger auf ein passendes Feldelement
zurück oder NULL, wenn keine Übereinstimmung gefunden wurde. Gibt es mehrere
Treffer für \fIkey\fP, ist nicht definiert, auf welches Element der Zeiger
weist.
.SH "KONFORM ZU"
SVr4, 4.3BSD, POSIX.1\-2001, C89, C99.
.SH BEISPIEL
Das folgende Beispiel sortiert zuerst mittels \fBqsort\fP(3) ein Feld von
Strukturen und sucht dann mit \fBbsearch\fP() nach dem gewünschten Element.
.sp
.nf
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct mi {
    int Index;
    char *Name;
} Monate[] = {
    { 1, "Jan" }, { 2, "Feb" }, { 3, "Mar" }, { 4, "Apr" },
    { 5, "Mai" }, { 6, "Jun" }, { 7, "Jul" }, { 8, "Aug" },
    { 9, "Sep" }, {10, "Okt" }, {11, "Nov" }, {12, "Dez" }
};

#define Anz_von_Monaten (sizeof(Monate)/sizeof(struct mi))

static int
compmi(const void *m1, const void *m2)
{
    struct mi *mi1 = (struct mi *) m1;
    struct mi *mi2 = (struct mi *) m2;
    return strcmp(mi1\->Name, mi2\->Name);
}

int
main(int argc, char **argv)
{
    int i;

    qsort(Monate, Anz_von_Monaten, sizeof(struct mi), compmi);
    for (i = 1; i < argc; i++) {
        struct mi Schluessel, *res;
        Schluessel.Name = argv[i];
        res = bsearch(&Schluessel, Monate, Anz_von_Monaten,
                      sizeof(struct mi), compmi);
        if (res == NULL)
            printf("\(aq%s\(aq: unbekannter Monat\en", argv[i]);
        else
            printf("%s: Monat #%d\en", res\->Name, res\->Index);
    }
    exit(EXIT_SUCCESS);
}
.fi
.\" this example referred to in qsort.3
.SH "SIEHE AUCH"
\fBhsearch\fP(3), \fBlsearch\fP(3), \fBqsort\fP(3), \fBtsearch\fP(3)
.SH KOLOPHON
Diese Seite ist Teil der Veröffentlichung 3.40 des Projekts
Linux\-\fIman\-pages\fP. Eine Beschreibung des Projekts und Informationen, wie
Fehler gemeldet werden können, finden sich unter
http://www.kernel.org/doc/man\-pages/.

.SH ÜBERSETZUNG
Die deutsche Übersetzung dieser Handbuchseite wurde von
Jens Rohler <jkcr@rohler.de>
und
Martin Eberhard Schauer <Martin.E.Schauer@gmx.de>
erstellt.

Diese Übersetzung ist Freie Dokumentation; lesen Sie die
GNU General Public License Version 3 oder neuer bezüglich der
Copyright-Bedingungen. Es wird KEINE HAFTUNG übernommen.

Wenn Sie Fehler in der Übersetzung dieser Handbuchseite finden,
schicken Sie bitte eine E-Mail an <debian-l10n-german@lists.debian.org>.
