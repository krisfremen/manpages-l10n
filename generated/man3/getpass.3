.\" -*- coding: UTF-8 -*-
.\" Copyright (c) 2000 Andries Brouwer (aeb@cwi.nl)
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
.\" USA.
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH GETPASS 3 "20. September 2010" Linux Linux\-Programmierhandbuch
.SH BEZEICHNUNG
getpass \- ermittelt ein Passwort
.SH ÜBERSICHT
\fB#include <unistd.h>\fP
.sp
\fBchar *getpass( const char *\fP\fIprompt\fP\fB);\fP
.sp
.in -4n
Mit Glibc erforderliche Makros (siehe \fBfeature_test_macros\fP(7)):
.in
.sp
\fBgetpass\fP():
.ad l
.RS 4
.PD 0
.TP  4
Seit Glibc 2.2.2:
.nf
_BSD_SOURCE ||
    (_XOPEN_SOURCE\ >=\ 500 ||
        _XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED) &&
    !(_POSIX_C_SOURCE\ >=\ 200112L || _XOPEN_SOURCE\ >=\ 600)
.TP  4
.fi
Vor Glibc 2.2.2: keine
.PD
.RE
.ad b
.SH BESCHREIBUNG
Diese Funktion ist veraltet. Verwenden Sie sie nicht.
.PP
Die Funktion \fBgetpass\fP() öffnet \fI/dev/tty\fP (das steuernde Terminal des
Prozesses), zeigt die Zeichenkette \fIprompt\fP an, schaltet die Wiedergabe der
eingebenen Zeichen auf dem Terminal ab, liest die Zeile (das »Passwort«),
stellt den Status des Terminals wieder her und schließt \fI/dev/tty\fP wieder.
.SH RÜCKGABEWERT
Die Funktion \fBgetpass\fP() gibt einen Zeiger auf einen statischen Puffer
zurück, der das Passwort (bzw. die ersten \fBPASS_MAX\fP Bytes davon) ohne das
abschließende Newline\-Zeichen, jedoch mit einem terminierenden Null\-Byte,
enthält. Dieser Puffer kann von einem nachfolgenden Aufruf überschrieben
werden. Im Fehlerfall wird der Status des Terminals wiederhergestellt,
\fIerrno\fP entsprechend gesetzt und NULL zurückgegeben.
.SH FEHLER
Die Funktion kann fehlschlagen, falls
.TP 
\fBENXIO\fP
der Prozess kein steuerndes Terminal hat.
.SH DATEIEN
.\" .SH HISTORY
.\" A
.\" .BR getpass ()
.\" function appeared in Version 7 AT&T UNIX.
\fI/dev/tty\fP
.SH "KONFORM ZU"
In SUSv2 vorhanden, aber als VERALTET gekennzeichnet. In POSIX.1\-2001
entfernt.
.SH ANMERKUNGEN
Bei Libc4 und Libc5 wird der Prompt nicht auf \fI/dev/tty\fP geschrieben,
sondern auf \fIstderr\fP.  Wenn außerdem \fI/dev/tty\fP nicht geöffnet werden
kann, wird das Passwort von \fIstdin\fP gelesen.  Der statische Puffer hat eine
Länge von 128 Byte, so dass nur die ersten 127 Byte des Passworts
zurückgegeben werden. Während das Passwort gelesen wird, wird die Erzeugung
von Signalen (\fBSIGINT\fP, \fBSIGQUIT\fP, \fBSIGSTOP\fP, \fBSIGTSTP\fP) deaktiviert und
die entsprechenden Zeichen (normalerweise Strg\-C, Strg\-\e, strg\-Z und
Strg\-Y) werden als Teil des Passworts übertragen.  Ab Libc 5.4.19 ist
außerdem kein Editieren der Zeile mehr möglich, so dass Backspace und
ähnliche Zeichen ebenfalls als Teile des Passworts angesehen werden.
.PP
Bei Glibc2 wird der Prompt auf \fIstderr\fP geschrieben, falls \fI/dev/tty\fP
nicht geöffnet werden kann und das Passwort wird von \fIstdin\fP gelesen.  Es
gibt keine Begrenzung der Länge des Passwortes. Das Editieren der Zeile ist
nicht deaktiviert.
.PP
Gemäß SUSv2 muss der Wert von \fBPASS_MAX\fP in \fI<limits.h>\fP definiert
sein, falls er kleiner als 8 ist, und kann auf jeden Fall mit
\fIsysconf(_SC_PASS_MAX)\fP in Erfahrung gebracht werden.  Allerdings verwirft
POSIX.2 die Konstanten \fBPASS_MAX\fP und \fB_SC_PASS_MAX\fP sowie die Funktion
\fBgetpass\fP().  Libc4 und Libc5 haben niemals \fBPASS_MAX\fP oder
\fB_SC_PASS_MAX\fP unterstützt.  Glibc2 akzeptiert \fB_SC_PASS_MAX\fP und gibt
\fBBUFSIZ\fP zurück (z.B. 8192).
.SH FEHLER
Der aufrufende Prozess sollte das Passwort so schnell wie möglich auf Null
setzen, um zu vermeiden, dass das Passwort weiter im Adressraum dieses
Prozesses sichtbar ist.
.SH "SIEHE AUCH"
\fBcrypt\fP(3)
.SH KOLOPHON
Diese Seite ist Teil der Veröffentlichung 3.35 des Projekts
Linux\-\fIman\-pages\fP. Eine Beschreibung des Projekts und Informationen, wie
Fehler gemeldet werden können, finden sich unter
http://man7.org/linux/man\-pages/.

.SH ÜBERSETZUNG
Die deutsche Übersetzung dieser Handbuchseite wurde von
Martin Eberhard Schauer <Martin.E.Schauer@gmx.de>
erstellt.

Diese Übersetzung ist Freie Dokumentation; lesen Sie die
GNU General Public License Version 3 oder neuer bezüglich der
Copyright-Bedingungen. Es wird KEINE HAFTUNG übernommen.

Wenn Sie Fehler in der Übersetzung dieser Handbuchseite finden,
schicken Sie bitte eine E-Mail an <debian-l10n-german@lists.debian.org>.
