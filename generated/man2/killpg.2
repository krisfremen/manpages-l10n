.\" Copyright (c) 1980, 1991 Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)killpg.2	6.5 (Berkeley) 3/10/91
.\"
.\" Modified Fri Jul 23 21:55:01 1993 by Rik Faith <faith@cs.unc.edu>
.\" Modified Tue Oct 22 08:11:14 EDT 1996 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified 2004-06-16 by Michael Kerrisk <mtk.manpages@gmail.com>
.\"     Added notes on CAP_KILL
.\" Modified 2004-06-21 by aeb
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH KILLPG 2 "26. Juli 2007" Linux Linux\-Programmierhandbuch
.SH BEZEICHNUNG
killpg \- sendet ein Signal zu einer Prozessgruppe
.SH ÜBERSICHT
\fB#include <signal.h>\fP
.sp
\fBint killpg(int \fP\fIpgrp\fP\fB, int \fP\fIsig\fP\fB);\fP
.sp
.in -4n
Mit Glibc erforderliche Makros (siehe \fBfeature_test_macros\fP(7)):
.in
.sp
\fBkillpg\fP(): _BSD_SOURCE || _XOPEN_SOURCE\ >=\ 500
.SH BESCHREIBUNG
\fBkillpg\fP() sendet das Signal \fIsig\fP an die Prozessgruppe \fIpgrp\fP. In
\fBsignal\fP(7) finden Sie eine Liste der Signale.

Falls \fIpgrp\fP 0 ist, sendet \fBkillpg\fP() das Signal an die Prozessgruppe des
aufrufenden Prozesses. (POSIX sagt: Falls \fIpgrp\fP kleiner oder gleich 1 ist,
ist das Verhalten undefiniert.)

Damit ein Prozess ein Signal senden darf, muss er entweder privilegiert sein
(unter Linux muss er die \fBCAP_KILL\fP\-Fähigkeit besitzen) oder die echte
beziehungsweise effektive Benutzer\-ID des sendenden Prozesses muss der
realen oder gespeicherten SUID (gesetzte Benutzer\-ID) des Zielprozesses
entsprechen. Im Fall von \fBSIGCONT\fP reicht es, wenn die sendenden und
empfangenden Prozesse zur gleichen Sitzung gehören.
.SH RÜCKGABEWERT
Bei Erfolg wird Null zurückgegeben. Bei einem Fehler wird \-1 zurückgegeben
und \fIerrno\fP entsprechend gesetzt.
.SH FEHLER
.TP 
\fBEINVAL\fP
\fISig\fP ist keine gültige Signalnummer.
.TP 
\fBEPERM\fP
Der Prozess verfügt nicht über das Recht, das Signal an einen der
Zielprozesse zu senden.
.TP 
\fBESRCH\fP
Es kann kein Prozess gefunden werden, der der Prozessgruppe \fIpgrp\fP
angehört.
.TP 
\fBESRCH\fP
Als Prozessgruppe wurde 0 angegeben, der sendende Prozess hat aber keine
Prozessgruppe.
.SH "KONFORM ZU"
SVr4, 4.4BSD (der Funktionsaufruf \fBkillpg\fP() erschien erstmals in 4BSD),
POSIX.1\-2001.
.SH ANMERKUNGEN
Es gibt mehrere Unterschiede zwischen den Rechteprüfungen in Systemen vom
BSD\- und vom System V\-Typ. Siehe das POSIX\-Grundprinzip für \fBkill\fP(). Ein
nicht von POSIX genannter Unterschied betrifft den Rückgabewert \fBEPERM\fP:
BSD beschreibt, dass kein Signal gesandt wird und \fBEPERM\fP zurückgegeben
wird, wenn die Rechteprüfung für mindestens einen Zielprozess fehlschlägt,
während dies bei POSIX \fBEPERM\fP nur der Fall ist, wenn die Rechteprüfung für
alle Zielprozesse fehlschlägt.

Auf Linux ist \fBkillpg\fP() als eine Bibliotheksfunktion implementiert, die
\fIkill(\-pgrp,\ sig)\fP aufruft.
.SH "SIEHE AUCH"
\fBgetpgrp\fP(2), \fBkill\fP(2), \fBsignal\fP(2), \fBcapabilities\fP(7),
\fBcredentials\fP(7)
.SH KOLOPHON
Diese Seite ist Teil der Veröffentlichung 3.25 des Projekts
Linux\-\fIman\-pages\fP. Eine Beschreibung des Projekts und Informationen, wie
Fehler gemeldet werden können, finden sich unter
http://www.kernel.org/doc/man\-pages/.

.SH ÜBERSETZUNG
Die deutsche Übersetzung dieser Handbuchseite wurde von
Patrick Rother <krd@gulu.net>,
Martin Schulze <joey@infodrom.org>
und
Chris Leick <c.leick@vollbio.de>
erstellt.

Diese Übersetzung ist Freie Dokumentation; lesen Sie die
GNU General Public License Version 3 oder neuer bezüglich der
Copyright-Bedingungen. Es wird KEINE HAFTUNG übernommen.

Wenn Sie Fehler in der Übersetzung dieser Handbuchseite finden,
schicken Sie bitte eine E-Mail an <debian-l10n-german@lists.debian.org>.
