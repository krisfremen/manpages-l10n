.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (c) 1992 Drew Eckhardt (drew@cs.colorado.edu), March 28, 1992
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified by Michael Haardt <michael@moria.de>
.\" Modified 1993-07-24 by Rik Faith <faith@cs.unc.edu>
.\" Modified 1995-07-22 by Michael Chastain <mec@duracef.shout.net>
.\" Modified 1995-07-23 by aeb
.\" Modified 1996-10-22 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified 1998-09-08 by aeb
.\" Modified 2004-06-17 by Michael Kerrisk <mtk.manpages@gmail.com>
.\" Modified 2004-10-10 by aeb
.\" 2004-12-14 mtk, Anand Kumria: added new errors
.\" 2007-06-22 Ivana Varekova <varekova@redhat.com>, mtk
.\"     Update text describing limit on number of swap files.
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH SWAPON 2 "15. Juni 2010" Linux Linux\-Programmierhandbuch
.SH BEZEICHNUNG
swapon, swapoff \- Auslagerung von Hauptspeicherbereichen (Swapping) auf ein
Gerät oder in eine Datei starten/beenden
.SH ÜBERSICHT
\fB#include <unistd.h>\fP
.br
\fB#include <asm/page.h> /* zum Bestimmen von PAGE_SIZE */\fP
.br
\fB#include <sys/swap.h>\fP
.sp
\fBint\fP\fIswapon(const\fP\fBchar\fP\fI*\fP\fBpfad\fP\fI,\fP\fBint\fP\fIswap_schalter\fP\fB);\fP
.br
\fBint\fP\fIswapoff(const\fP\fBchar\fP\fI*\fP\fBpfad\fP\fI);\fP
.SH BESCHREIBUNG
\fBswapon\fP weist den Auslagerungsbereich für Hauptspeicherbereiche der Datei
oder dem blockorientierten Gerät zu, das in \fIpfad\fP festgelegt
wurde. \fBswapoff\fP beendet das Auslagern von Hauptspeicherbereichen in der
Datei oder dem blockorientierten Gerät, das in \fIpfad\fP festgelegt wurde.
.PP
\fBswapon\fP nimmt ein \fIswap_schalter\fP\-Argument entgegen. Falls das
\fISWAP_FLAG_PREFER\fP\-Bit von \fIswap_schalter\fP den Wert eins hat, hat der neue
Auslagerungsbereich für Hauptspeicherbereiche eine höhere Priorität als der
vorgegebene. Die Priorität ist in \fIswap_schalter\fP kodiert als:
.br
.sp
\fI(prio << SWAP_FLAG_PRIO_SHIFT) & SWAP_FLAG_PRIO_MASK\fP
.br
.PP
Diese Funktionen können nur von einem privilegierten Prozess (einem, der
über die \fBCAP_SYS_ADMIN\fP\-Fähigkeit verfügt) benutzt werden.
.SS Priorität
Jeder Auslagerungsbereich für Hauptspeicherbereiche hat eine Priorität, hoch
oder niedrig. Die Standardpriorität ist niedrig. Innerhalb der Bereiche
niedriger Priorität erhalten neuere Bereiche eine niedrigere Priorität als
ältere.
.PP
Alle mit \fIswap_schalter\fP gesetzten Prioritäten sind hohe Prioritäten und
höher als die Vorgabe. Sie können einen beliebigen durch den Aufrufenden
gewählten nicht\-negativen Wert haben. Höhere Zahlen entsprechen höheren
Prioritäten.
.PP
Auslagerungsseiten von Hauptspeicherbereichen werden nach Priorität aus den
Bereichen reserviert, die mit der höchsten Priorität zuerst. Bei Bereichen
unterschiedlicher Priorität werden die mit der höheren Priorität zuerst
ausgeschöpt, bevor Bereiche mit niedriger Priorität genutzt werden. Haben
zwei oder mehr Bereiche die gleiche Priorität und diese ist die höchste
verfügbare, dann werden die Seiten reihum nacheinander reserviert.
.PP
Ab Linux 1.3.6 befolgt der Kernel diese Regeln gewöhnlich, aber es gibt auch
Ausnahmen.
.SH RÜCKGABEWERT
Bei Erfolg wird Null zurückgegeben. Bei einem Fehler wird \-1 zurückgegeben
und \fIerrno\fP entsprechend gesetzt.
.SH FEHLER
.TP 
\fBEBUSY\fP
(Für \fBswapon\fP()) Der angegebene \fIpfad\fP wird bereits als
Auslagerungsbereich für Hauptspeicherbereiche benutzt.
.TP 
\fBEINVAL\fP
Die Datei \fIpfad\fP existiert, zeigt aber weder auf eine reguläre Datei noch
auf ein blockorientiertes Gerät. Oder der für \fBswapon\fP() angegebene Pfad
enthält keine gültige Signatur für die Auslagerung von
Hauptspeicherbereichen oder befindet sich auf einen Dateisystem im Speicher,
wie Tmpfs. Oder der \fIpfad\fP für \fBswapoff\fP() ist derzeit nicht in einem
Auslagerungsbereich von Hauptspeicherbereichen.
.TP 
\fBENFILE\fP
Die Systembegrenzung der Gesamtzahl offener Dateien wurde erreicht.
.TP 
\fBENOENT\fP
Die Datei \fIpfad\fP existiert nicht.
.TP 
\fBENOMEM\fP
Das System verfügt nicht über ausreichenden Speicher, um das Auslagern von
Hauptspeicherbereichen zu starten.
.TP 
\fBEPERM\fP
Der Aufrufende verfügt nicht über die Fähigkeit \fBCAP_SYS_ADMIN\fP. Alternativ
wird die maximale Anzahl der Auslagerungsdateien für Hauptspeicherbereiche
benutzt; Lesen Sie die folgenden ANMERKUNGEN.
.SH "KONFORM ZU"
Diese Funktionen sind Linux\-spezifisch und sollte nicht in Programmen
benutzt werden, die portabel gehalten werden sollen. Das zweite
\fIswap_schalter\fP\-Argument wurde mit Linux 1.3.2 eingeführt.
.SH ANMERKUNGEN
Die Partition oder der Pfad müssen mit \fBmkswap\fP(8) vorbereitet werden.

Es gibt eine Obergrenze für die Anzahl der benutzbaren Auslagerungsdateien
von Hauptspeicherbereichen, die in der Kernel\-Konstante \fBMAX_SWAPFILES\fP
definiert wird. Vor Kernel 2.4.10 hatte \fBMAX_SWAPFILES\fP den Wert 8; seit
Kernel 2.4.10 hat sie den Wert 32. Seit Kernel 2.6.18 ist die Grenze um zwei
herabgesetzt (daher: 30) falls der Kernel mit der Option \fBCONFIG_MIGRATION\fP
erstellt wurde (die zwei Einträge in der Auslagerungstabelle von
Hauptspeicherbereichen für die Seiten\-Migrationsfunktionen von \fBmbind\fP(2)
und \fBmigrate_pages\fP(2) reserviert). Seit Kernel 2.6.32 wird die Grenze
ferner um eins herabgesetzt, falls der Kernel mit der Option
\fBCONFIG_MEMORY_FAILURE\fP erstellt wurde.
.SH "SIEHE AUCH"
\fBmkswap\fP(8), \fBswapoff\fP(8), \fBswapon\fP(8)
.SH KOLOPHON
Diese Seite ist Teil der Veröffentlichung 3.27 des Projekts
Linux\-\fIman\-pages\fP. Eine Beschreibung des Projekts und Informationen, wie
Fehler gemeldet werden können, finden sich unter
http://www.kernel.org/doc/man\-pages/.

.SH ÜBERSETZUNG
Die deutsche Übersetzung dieser Handbuchseite wurde von
Ralf Demmer <rdemmer@rdemmer.de>
und
Chris Leick <c.leick@vollbio.de>
erstellt.

Diese Übersetzung ist Freie Dokumentation; lesen Sie die
GNU General Public License Version 3 oder neuer bezüglich der
Copyright-Bedingungen. Es wird KEINE HAFTUNG übernommen.

Wenn Sie Fehler in der Übersetzung dieser Handbuchseite finden,
schicken Sie bitte eine E-Mail an <debian-l10n-german@lists.debian.org>.
