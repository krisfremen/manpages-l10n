.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\" and Copyright (c) 2004 by Michael Kerrisk (mtk.manpages@gmail.com)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" License.
.\"
.\" Modified Sat Jul 24 13:32:44 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Mon Jun 23 14:09:52 1997 by aeb - add EINTR.
.\" Modified Tue Jul  7 12:26:42 1998 by aeb - changed return value wait3
.\" Modified 2004-11-11, Michael Kerrisk <mtk.manpages@gmail.com>
.\"	Rewrote much of this page, and removed much duplicated text,
.\"		replacing with pointers to wait.2
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH WAIT4 2 "20. September 2010" Linux Linux\-Programmierhandbuch
.SH BEZEICHNUNG
wait3, wait4 \- auf die Beendigung eines Prozesses warten nach BSD\-Art
.SH ÜBERSICHT
.nf
\fB#include <sys/types.h>\fP
\fB#include <sys/time.h>\fP
\fB#include <sys/resource.h>\fP
\fB#include <sys/wait.h>\fP
.sp
\fBpid_t wait3(int *\fP\fIstatus\fP\fB, int \fP\fIoptionen\fP\fB,\fP
\fB            struct rusage *\fP\fIrusage\fP\fB);\fP
.sp
\fBpid_t wait4(pid_t \fP\fIpid\fP\fB, int *\fP\fIstatus\fP\fB, int \fP\fIoptionen\fP\fB,\fP
\fB      struct rusage *\fP\fIrusage\fP\fB)\fP
.fi
.sp
.in -4n
Mit Glibc erforderliche Makros (siehe \fBfeature_test_macros\fP(7)):
.in
.sp
.ad l
\fBwait3\fP():
.RS 4
_BSD_SOURCE || _XOPEN_SOURCE\ >=\ 500 || _XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED
.RE
.br
\fBwait4\fP():
.RS 4
_BSD_SOURCE
.RE
.ad
.SH BESCHREIBUNG
Die Systemaufrufe \fBwait3\fP() und \fBwait4\fP() sind \fBwaitpid\fP(2) ähnlich,
geben aber zusätzlich die Aufrufsinformationen über den Kindprozess in der
Struktur zurück, auf die \fIrusage\fP zeigt.
.PP
Im Gegensatz zur Benutzung des Arguments \fIrusage\fP, ist der folgende
\fBwait3\fP()\-Aufruf
.nf

    wait3(status, optionen, rusage);

.fi
äquivalent zu
.nf

    waitpid(\-1, status, optionen);

.fi
Gleichermaßen der folgende \fBwait4\fP()\-Aufruf:
.nf

    wait4(pid, status, optionen, rusage);

.fi
äquivalent zu
.nf

    waitpid(pid, status, optionen);

.fi
In anderen Worten, wartet \fBwait3\fP() auf irgendeinen Kindprozess, während
\fBwait4\fP() zur Auswahl eines oder mehrerer bestimmter Kindprozesse benutzt
werden kann, auf die gewartet werden soll. Lesen Sie \fBwait\fP(2), um weitere
Einzelheiten zu erfahren.
.PP
Wenn \fIrusage\fP nicht NULL ist, wird \fIstruct rusage\fP, auf das es zeigt, mit
Konto\-Informationen über den Kindprozess gefüllt. Lesen Sie \fBgetrusage\fP(2),
um weitere Einzelheiten zu erfahren.
.SH RÜCKGABEWERT
Wie für \fBwaitpid\fP(2).
.SH FEHLER
Wie für \fBwaitpid\fP(2).
.SH "KONFORM ZU"
4.3BSD.
.SH ANMERKUNGEN
Heutzutage ist es nicht nötigt \fI<sys/time.h>\fP einzubinden, es
erhöht aber die Portierbarkeit. (Allerdings definiert
\fI<sys/resource.h>\fP die Struktur \fIrusage\fP mit Feldern des Typs
\fIstruct timeval\fP, die wiederum in \fI<sys/time.h>\fP definiert
werden.)

Auf Linux ist \fBwait3\fP() eine Bibliotheksfunktion, die darüber hinaus im
Systemaufruf \fBwait4\fP() implementiert ist.
.SH "SIEHE AUCH"
\fBfork\fP(2), \fBgetrusage\fP(2), \fBsigaction\fP(2), \fBsignal\fP(2), \fBwait\fP(2),
\fBsignal\fP(7)
.SH KOLOPHON
Diese Seite ist Teil der Veröffentlichung 3.32 des Projekts
Linux\-\fIman\-pages\fP. Eine Beschreibung des Projekts und Informationen, wie
Fehler gemeldet werden können, finden sich unter
http://www.kernel.org/doc/man\-pages/.

.SH ÜBERSETZUNG
Die deutsche Übersetzung dieser Handbuchseite wurde von
Elmar Jansen <ej@pumuckel.gun.de>
und
Chris Leick <c.leick@vollbio.de>
erstellt.

Diese Übersetzung ist Freie Dokumentation; lesen Sie die
GNU General Public License Version 3 oder neuer bezüglich der
Copyright-Bedingungen. Es wird KEINE HAFTUNG übernommen.

Wenn Sie Fehler in der Übersetzung dieser Handbuchseite finden,
schicken Sie bitte eine E-Mail an <debian-l10n-german@lists.debian.org>.
