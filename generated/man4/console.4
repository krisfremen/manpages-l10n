.\" -*- coding: UTF-8 -*-
.\" Copyright (c) 1994 Andries Brouwer (aeb@cwi.nl), Mon Oct 31 21:03:19 MET 1994
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" Modified, Sun Feb 26 14:58:45 1995, faith@cs.unc.edu
.\" Modified, Oct 28 1997, dirson@debian.org
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH CONSOLE 4 "28. Oktober 1997" "Console tools" Linux\-Anwenderhandbuch

.SH BEZEICHNUNG
console \- Konsolen\-Terminal und virtuelle Konsolen

.SH BESCHREIBUNG
Ein Linux\-System besitzt bis zu 63 \fIvirtuelle Konsolen\fP (zeichenorientierte
Geräte mit der Major Number (Hauptnummer) 4 und den Minor Numbers
(Nebennummern) 1 bis 63), die üblicherweise mit \fB/dev/tty\fP\fIn\fP bezeichnet
werden. Es gilt 1 \(<= \fIn\fP \(<= 63. Die aktuelle Konsole kann als
\fB/dev/console\fP oder \fB/dev/tty0\fP angesprochen werden. Sie ist das
zeichenorientierte Gerät mit der Major Number 4 und der Minor Number 0. Die
Gerätedateien /dev/* werden normalerweise mit dem Skript MAKEDEV oder dem
Befehl \fBmknod\fP(1) erstellt. Übliche Werte für den Eigentümer und die
Berechtigung sind »root.tty« und 0622.

Vor der Kernelversion 1.1.54 wurde die Anzahl virtueller Konsolen beim
Erstellen des Kernels festgelegt (in der Header\-Datei tty.h: #define
NR_CONSOLES 8) und konnte nur durch Bearbeiten und erneutes Kompilieren
geändert werden. Seit Version 1.1.54 werden virtuelle Konsolen im laufenden
Betrieb erstellt, sobald sie benötigt werden.

Gebräuchliche Wege für das Starten eines Prozesses auf einer Konsole
sind:(a) mit \fBinit\fP(8) (in der Datei \fBinittab\fP(5)) einen \fBgetty\fP(8) für
diese Konsole starten;(b) mit \fBopen\fP(1) einen Prozess auf der Konsole
starten;(c) X starten \(em es wird die erste freie Konsole suchen und die
Ausgabe darauf anzeigen. (Es gibt auch noch das antiquierte \fBdoshell\fP(8).)

Die üblichen Möglichkeiten für das Umschalten zwischen den Konsolen sind:
(a) Alt+F\fIn\fP oder Strg+Alt+F\fIn\fP für das Umschalten auf Konsole \fIn\fP;
AltGr+F\fIn\fP kann Sie zu Konsole \fIn\fP+12 bringen [Hier entsprechen Alt und
AltGr der linken und der rechten Alt\-Taste.]; (b) mit Alt+PfeilRechts oder
Alt+PfeilLinks der Reihe nach durch die benutzten Konsolen wechseln; (c)
Benutzen des Programms \fBchvt\fP(1). (Die Tastenbelegung kann vom Benutzer
festgelegt werden, siehe \fBloadkeys\fP(1); die oben genannten
Tastenkombinationen entsprechen den Standardwerten.)

Der Befehl \fBdeallocvt\fP(1) (vormals \fBdisalloc\fP) gibt den benutzen Speicher
(Bildschirmpuffer) von Konsolen frei, welche nicht mehr mit einem Prozess
verbunden sind.

.SH EIGENSCHAFTEN
Konsolen besitzen sehr viele Zustände. Ich hoffe, diese eines Tages auch
dokumentieren zu können. Das Wichtigste ist aber die Tatsache, dass alle
Konsolen VT100\-Terminals simulieren. Insbesondere sei noch erwähnt, dass
eine Konsole mit ESC c zurückgesetzt werden kann. Alle Escape\-Sequenzen
finden Sie in \fBconsole_codes\fP(4).

.SH DATEIEN
\fI/dev/console\fP
.br
\fI/dev/tty*\fP

.SH "SIEHE AUCH"
\fBchvt\fP(1), \fBdeallocvt\fP(1), \fBloadkeys\fP(1), \fBmknod\fP(1), \fBopen\fP(1),
\fBcharsets\fP(4), \fBconsole_codes\fP(4), \fBconsole_ioctl\fP(4), \fBtty\fP (4),
\fBttys\fP(4), \fBgetty\fP(8), \fBconsolechars\fP(8), \fBinit\fP(8), \fBmapscrn\fP(8),
\fBresizecons\fP(8)

.SH ÜBERSETZUNG
Die deutsche Übersetzung dieser Handbuchseite wurde von
Martin Eberhard Schauer <Martin.E.Schauer@gmx.de>
erstellt.

Diese Übersetzung ist Freie Dokumentation; lesen Sie die
GNU General Public License Version 3 oder neuer bezüglich der
Copyright-Bedingungen. Es wird KEINE HAFTUNG übernommen.

Wenn Sie Fehler in der Übersetzung dieser Handbuchseite finden,
schicken Sie bitte eine E-Mail an <debian-l10n-german@lists.debian.org>.
