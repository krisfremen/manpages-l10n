.\" Hey Emacs! This file is -*- nroff -*- source.
.\" This man page was written by Jeremy Phelps <jphelps@notreached.net>.
.\" Notes added - aeb
.\" Redistribute and revise at will.
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH PTS 4 "9. Oktober 2002" Linux Linux\-Programmierhandbuch
.SH BEZEICHNUNG
ptmx, pts \- Master\- und Slave\-Pseudoterminal
.SH BESCHREIBUNG
Die Datei \fI/dev/ptmx\fP ist eine zeichenorientierte Datei mit der
Major\-Major\-Nummer 5 und der Minor\-Nummer 2; die Zugriffsrechte sind in der
Regel 0666, Besitzer ist root:root. Mit ihr wird ein Master\-Slave\-Paar von
Pseudoterminals erzeugt.
.PP
When a process opens \fI/dev/ptmx\fP, it gets a file descriptor for a
pseudoterminal master (PTM), and a pseudoterminal slave (PTS) device is
created in the \fI/dev/pts\fP directory.  Each file descriptor obtained by
opening \fI/dev/ptmx\fP is an independent PTM with its own associated PTS,
whose path can be found by passing the descriptor to \fBptsname\fP(3).
.PP
Vor dem Öffnen des Pseudo Terminal Slaves müssen Sie den Dateideskriptor des
Masters an \fBgrantpt\fP(3) und \fBunlockpt\fP(3) übergeben.
.PP
Nachdem sowohl PTM und PTS geöffnet wurden, stellt der Slave Prozessen eine
Schnittstelle bereit, die mit der eines realen Terminals identisch ist.
.PP
In den Slave geschriebene Daten werden dem Master\-Deskriptor als Eingabe
präsentiert; in den Master geschriebene Daten dienen dem Slave als Eingabe.
.PP
In der Praxis werden Pseudoterminals für die Implementierung von
Terminalemulatoren wie \fBxterm\fP(1) und Programmen für Remote\-Logins wie
\fBsshd\fP(8) verwendet. Im Fall von Emulatoren werden vom PTM gelesene Daten
durch die Anwendung in der gleichen Weise ausgewertet, wie das ein reales
Terminal täte. Bei Login\-Programmen werden die vom PTM gelesenen Daten über
das Netzwerk zu  einem Client\-Programm gesendet, das mit einem Terminal oder
einem Terminalemulator verbunden ist.
.PP
Mit Pseudoterminals können Sie auch die Eingabe für Programme (wie \fBsu\fP(1)
und \fBpasswd\fP(1)) realisieren, die normalerweise keine Eingabe aus Pipelines
lesen.
.SH DATEIEN
\fI/dev/ptmx\fP, \fI/dev/pts/*\fP
.SH ANMERKUNGEN
Die Linux\-Unterstützung für das oben Erwähnte (auch als Unix98
Pseudoterminal\-Benennung bekannt) erfolgt mit dem \fIdevpts\fP\-Dateisystem,
welches auf \fI/dev/pts\fP eingehängt werden sollte.
.LP
Vor dieser Unix98\-Regelung hießen Pseudoterminals \fI/dev/ptyp0\fP ... und
Slave\-Pseudoterminals \fI/dev/ttyp0\fP ... Man brauchte viele vorbelegte
Geräteknoten.
.SH "SIEHE AUCH"
\fBgetpt\fP(3), \fBgrantpt\fP(3), \fBptsname\fP(3), \fBunlockpt\fP(3), \fBpty\fP(7)
.SH KOLOPHON
Diese Seite ist Teil der Veröffentlichung 3.35 des Projekts
Linux\-\fIman\-pages\fP. Eine Beschreibung des Projekts und Informationen, wie
Fehler gemeldet werden können, finden sich unter
http://man7.org/linux/man\-pages/.

.SH ÜBERSETZUNG
Die deutsche Übersetzung dieser Handbuchseite wurde von
Martin Eberhard Schauer <Martin.E.Schauer@gmx.de>
erstellt.

Diese Übersetzung ist Freie Dokumentation; lesen Sie die
GNU General Public License Version 3 oder neuer bezüglich der
Copyright-Bedingungen. Es wird KEINE HAFTUNG übernommen.

Wenn Sie Fehler in der Übersetzung dieser Handbuchseite finden,
schicken Sie bitte eine E-Mail an <debian-l10n-german@lists.debian.org>.
