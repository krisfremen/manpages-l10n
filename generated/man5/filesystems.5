.\" -*- coding: UTF-8 -*-
.\" Copyright 1996 Daniel Quinlan (Daniel.Quinlan@linux.org)
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
.\" USA.
.\"
.\" 2007-12-14 mtk Added Reiserfs, XFS, JFS.
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH FILESYSTEMS 5 "24. Mai 2010" Linux Linux\-Programmierhandbuch
.nh
.SH BEZEICHNUNG
filesystems \- Typen von Linux\-Dateisystemen: minix, ext, ext2, ext3, ext4,
Reiserfs, XFS, JFS, xia, msdos, umsdos, vfat, ntfs, proc, nfs, iso9660,
hpfs, sysv, smb, ncpfs
.SH BESCHREIBUNG
Wenn, wie üblich, das \fBproc\fP\-Dateisystem auf \fI/proc\fP eingehängt ist,
können Sie in der Datei \fI/proc/filesystems\fP nachlesen, welche Dateisysteme
ihr Kernel derzeit unterstützt. (Wenn Ihnen eins fehlt, laden Sie das
entsprechende Modul oder kompilieren Sie den Kernel neu.)

Um ein Dateisystem zu verwenden, müssen Sie es einbinden (\fImounten\fP; siehe
\fBmount\fP(8)).

Es folgt eine kurze Beschreibung einiger der verfügbaren Dateisysteme.
.TP  10
\fBminix\fP
Dieses Dateisystem wird vom Betriebssystem Minix verwendet. Es war das erste
Format, das für Linux zur Verfügung stand. Es weist einige Schwächen auf:
maximale Partitionsgröße 64MB, kurze Dateinamen, nur eine Zeitmarkierung
usw. Es bleibt nützlich für Floppies und RAM\-Disks.
.TP 
\fBext\fP
ist eine aufwendige Erweiterung des \fBminix\fP\-Dateisystems. Inzwischen ist es
von der zweiten Version des erweiterten Dateisystems (\fBext2\fP) völlig
ersetzt und seit Version 2.1.21 aus dem Kernel entfernt worden.
.TP 
\fBext2\fP
Dieses Hochleistungs\-Dateisystem wird von Linux für Festplatten und auch
Wechsel\-Medien verwendet. Das zweite erweiterte Dateisystem wurde als
Erweiterung des erweiterten Dateisystems (\fBext\fP) entworfen. Von allen
Linux\-Dateisystemen bietet \fBext2\fP die beste Leistung, sowohl im Hinblick
auf Geschwindigkeit als auch auf CPU\-Last.
.TP 
\fBext3\fP
ist eine protokollierende Version des \fBext2\fP\-Dateisystems. Es ist einfach,
zwischen \fBext2\fP und \fBext3\fP hin\- und her zu schalten.
.TP 
\fBext4\fP
ist ein in einer Reihe von Merkmalen aufgerüstetes ext3. Dazu gehören eine
erhebliche Steigerung von Leistung und Verlässlichkeit sowie beträchtlich
verschobene Grenzen für die Größe von Dateisystemen, Dateien und
Verzeichnissen.
.TP 
\fBReiserfs\fP
Dieses protokollierende Dateisystem wurde von Hans Reiser entwickelt. Seit
Version 2.4.1 ist es Bestandteil des Linux\-Kernels.
.TP 
\fBXFS\fP
Dieses protokollierende Dateisystem wurde von SGI entwickelt und in Version
2.4.20 in den Linux\-Kernel integriert.
.TP 
\fBJFS\fP
Dieses protokollierende Dateisystem wurde von IBM entwickelt und in Version
2.4.24 in den Linux\-Kernel integriert.
.TP 
\fBxiafs\fP
wurde als stabiles und sicheres Dateisystem durch Erweiterung des Codes des
Minix\-Dateisystems entwickelt. Es stellt die grundlegenden, am häufigsten
verlangten Möglichkeiten ohne unnötige Komplexität zur Verfügung. Das
\fBxia\fP\-Dateisystem wird nicht mehr aktiv weiterentwickelt oder gepflegt. Es
war bis Version 2.1.20 Bestandteil des Kernels.
.TP 
\fBmsdos\fP
Dieses Dateisystem wird von DOS\-, Windows\- und einigen OS/2\-Computern
eingesetzt. \fBmsdos\fP\-Dateinamen können nicht länger sein als 8 Zeichen,
gefolgt von einem optionalen Punkt und einer 3 Zeichen langen
Namenserweiterung.
.TP 
\fBumsdos\fP
ist ein erweitertes DOS\-Dateisystem für Linux. Es stellt lange Dateinamen,
UID/GID, Zugriffsrechte nach POSIX und Spezialdateien (Geräte, Named Pipes
usw.) zur Verfügung, ohne die Kompatibilität zu DOS aufzugeben.
.TP 
\fBvfat\fP
ist ein erweitertes DOS\-Dateisystem, das von Microsoft Windows95 und Windows
NT verwendet wird. VFAT ermöglicht die Verwendung langer Dateinamen im
MSDOS\-Dateisystem.
.TP 
\fBntfs\fP
ersetzt die FAT\-Dateisysteme von Microsoft Windows (VFAT,
FAT32). Zuverlässigkeit, Leistung und Raumausnutzung wurden verbessert und
unter Anderem Fähigkeiten wie Zugangskontrolle (Access Control Lists, ACLs),
Protokollierung und Verschlüsselung hinzugefügt.
.TP 
\fBproc\fP
ist ein Pseudo\-Dateisystem und dient als Schnittstelle zu den
Kernel\-Datenstrukturen. So ist es nicht nötig, \fI/dev/kmem\fP auszulesen und
zu interpretieren. Insbesondere belegen die hier abgelegten Dateien keinen
Plattenplatz. Siehe auch \fBproc\fP(5).
.TP 
\fBiso9660\fP
ist das CD\-ROM\-Dateisystem nach dem Standard ISO 9660.
.RS
.TP 
\fBHigh Sierra\fP
Linux unterstützt High Sierra, den Vorläufer des ISO\-9660\-Standards für
CD\-ROM\-Dateisysteme. High Sierra wird automatisch im Rahmen der
Linux\-Unterstützung für das \fBiso9660\fP\-Dateisystem erkannt.
.TP 
\fBRock Ridge\fP
Linux unterstützt auch die im Rock Ridge Interchange Protocol beschriebenen
SUSP\-Datensätze (System Use Sharing Protocol). Diese werden zu einer
weitergehenden Beschreibung der Dateien in einem \fBiso9660\fP\-Dateisystem für
einen Unix\-Rechner eingesetzt und bieten lange Dateinamen, UID/GID,
POSIX\-Zugriffsverwaltung und Gerätedateien. Rock Ridge wird automatisch im
Rahmen der Linux\-Unterstützung für das \fBiso9660\fP\-Dateisystem erkannt.
.RE
.TP 
\fBhpfs\fP
ist das OS/2\-Hochleistungs\-Dateisystem. Mangels verfügbarer Dokumentation
kann es unter Linux nur gelesen werden.
.TP 
\fBsysv\fP
ist die Linux\-Umsetzung des SystemV/Coherent\-Dateisystems. Damit kann auf
die Dateisysteme von Xenix, SystemV/386 und Coherent zugegriffen werden.
.TP 
\fBnfs\fP
ist das Netzwerk\-Dateisystem, mit dem auf Platten nicht lokaler Rechner
zugegriffen wird.
.TP 
\fBsmb\fP
Dieses Netzwerk\-Dateisystem unterstützt das SMB\-Protokoll. Es wird auch von
Windows for Workgroups, Windows NT und Lan Manager eingesetzt.
.sp
Um \fBsmb\fP\-Dateisysteme einzusetzen, brauchen Sie ein spezielles Programm für
deren Einbindung aus dem Paket ksmbfs. Sie finden dieses Paket bei
\fIftp://sunsite.unc.edu/pub/Linux/system/Filesystems/smbfs\fP.
.TP 
\fBncpfs\fP
Dieses Netzwerk\-Dateisystem unterstützt das NCP\-Protokoll. Dieses Protokoll
wird von Novell NetWare eingesetzt.
.sp
Um \fBncpfs\fP einzusetzen, benötigen Sie spezielle Programme. Sie finden diese
bei \fIftp://ftp.gwdg.de/pub/linux/misc/ncpfs\fP.
.SH "SIEHE AUCH"
\fBproc\fP(5), \fBfsck\fP(8), \fBmkfs\fP(8), \fBmount\fP(8)
.SH KOLOPHON
Diese Seite ist Teil der Veröffentlichung 3.35 des Projekts
Linux\-\fIman\-pages\fP. Eine Beschreibung des Projekts und Informationen, wie
Fehler gemeldet werden können, finden sich unter
http://man7.org/linux/man\-pages/.

.SH ÜBERSETZUNG
Die deutsche Übersetzung dieser Handbuchseite wurde von
Mike Fengler <mike@krt3.krt-soft.de>
und
Martin Eberhard Schauer <Martin.E.Schauer@gmx.de>
erstellt.

Diese Übersetzung ist Freie Dokumentation; lesen Sie die
GNU General Public License Version 3 oder neuer bezüglich der
Copyright-Bedingungen. Es wird KEINE HAFTUNG übernommen.

Wenn Sie Fehler in der Übersetzung dieser Handbuchseite finden,
schicken Sie bitte eine E-Mail an <debian-l10n-german@lists.debian.org>.
