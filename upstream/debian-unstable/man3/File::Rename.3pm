.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "File::Rename 3pm"
.TH File::Rename 3pm "2020-06-20" "perl v5.30.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
File::Rename \- Perl extension for renaming multiple files
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  use File::Rename qw(rename);          # hide CORE::rename
\&  rename \e@ARGV, sub { s/\e.pl\ez/.pm/ }, 1;
\&
\&  use File::Rename;
\&  File::Rename::rename \e@ARGV, \*(Aq$_ = lc\*(Aq;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.ie n .IP """rename( FILES, CODE [, VERBOSE])""" 4
.el .IP "\f(CWrename( FILES, CODE [, VERBOSE])\fR" 4
.IX Item "rename( FILES, CODE [, VERBOSE])"
rename \s-1FILES\s0 using \s-1CODE,\s0
if \s-1FILES\s0 is empty read list of files from stdin
.ie n .IP """rename_files( CODE, VERBOSE, FILES)""" 4
.el .IP "\f(CWrename_files( CODE, VERBOSE, FILES)\fR" 4
.IX Item "rename_files( CODE, VERBOSE, FILES)"
rename \s-1FILES\s0 using \s-1CODE\s0
.ie n .IP """rename_list( CODE, VERBOSE, HANDLE [, FILENAME])""" 4
.el .IP "\f(CWrename_list( CODE, VERBOSE, HANDLE [, FILENAME])\fR" 4
.IX Item "rename_list( CODE, VERBOSE, HANDLE [, FILENAME])"
rename a list of file read from \s-1HANDLE,\s0 using \s-1CODE\s0
.SS "\s-1OPTIONS\s0"
.IX Subsection "OPTIONS"
.IP "\s-1FILES\s0" 8
.IX Item "FILES"
List of files to be renamed,
for \f(CW\*(C`rename\*(C'\fR must be an \s-1ARRAY\s0 reference
.IP "\s-1CODE\s0" 8
.IX Item "CODE"
Subroutine to change file names,
for \f(CW\*(C`rename\*(C'\fR can be a string,
otherwise it is a code reference
.IP "\s-1VERBOSE\s0" 8
.IX Item "VERBOSE"
Flag for printing names of files successfully renamed,
optional for \f(CW\*(C`rename\*(C'\fR
.IP "\s-1HANDLE\s0" 8
.IX Item "HANDLE"
Filehandle to read file names to be renames
.IP "\s-1FILENAME\s0 (Optional)" 8
.IX Item "FILENAME (Optional)"
Name of file that \s-1HANDLE\s0 reads from
.SS "\s-1HASH\s0"
.IX Subsection "HASH"
Either \s-1CODE\s0 or \s-1VERBOSE\s0 can be a \s-1HASH\s0 of options.
.PP
If \s-1CODE\s0 is a \s-1HASH, VERBOSE\s0 is ignored 
and \s-1CODE\s0 is supplied by the \fB_code\fR key.
.PP
Other options are
.IP "\fBverbose\fR" 16
.IX Item "verbose"
As \s-1VERBOSE\s0 above, provided by \fB\-v\fR.
.IP "\fBinput_null\fR" 16
.IX Item "input_null"
Input separator \e0 when reading file names from stdin.
.IP "\fBno_action\fR" 16
.IX Item "no_action"
Print names of files to be renamed, but do not rename
(i.e. take no action), provided by \fB\-n\fR.
.IP "\fBover_write\fR" 16
.IX Item "over_write"
Allow files to be over-written by the renaming, provided by \fB\-f\fR.
.IP "\fBfilename_only\fR" 16
.IX Item "filename_only"
Only apply renaming to the filename component of the path, 
provided by \fB\-d\fR.
.IP "\fBshow_help\fR" 16
.IX Item "show_help"
Print help, provided by \fB\-h\fR.
.IP "\fBshow_manual\fR" 16
.IX Item "show_manual"
Print manual page, provided by \fB\-m\fR.
.IP "\fBshow_version\fR" 16
.IX Item "show_version"
Print version number, provided by \fB\-V\fR.
.SS "\s-1EXPORT\s0"
.IX Subsection "EXPORT"
None by default.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
No environment variables are used.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBmv\fR\|(1), \fBperl\fR\|(1), \fBrename\fR\|(1)
.SH "AUTHOR"
.IX Header "AUTHOR"
Robin Barker <RMBarker@cpan.org>
.SH "Acknowledgements"
.IX Header "Acknowledgements"
Based on code from Larry Wall.
.PP
Options \fB\-e\fR, \fB\-f\fR, \fB\-n\fR suggested
by more recent code written by Aristotle Pagaltzis.
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
Errors from the code argument are not trapped.
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2004, 2005, 2006, 2011, 2018 by Robin Barker
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.8.4 or,
at your option, any later version of Perl 5 you may have available.
