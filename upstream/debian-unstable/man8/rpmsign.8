.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "RPMSIGN" "8" "Red Hat, Inc" "" ""
.hy
.SH NAME
.PP
rpmsign - RPM Package Signing
.SH SYNOPSIS
.SS SIGNING PACKAGES:
.PP
\f[B]rpm\f[R] \f[B]--addsign|--resign\f[R] [\f[B]rpmsign-options\f[R]]
\f[I]PACKAGE_FILE ...\f[R]
.PP
\f[B]rpm\f[R] \f[B]--delsign\f[R] \f[I]PACKAGE_FILE ...\f[R]
.PP
\f[B]rpm\f[R] \f[B]--delfilesign\f[R] \f[I]PACKAGE_FILE ...\f[R]
.SS rpmsign-options
.PP
[\f[B]--rpmv3\f[R]] [\f[B]--fskpath \f[R]\f[I]KEY\f[R]]
[\f[B]--signfiles\f[R]]
.SH DESCRIPTION
.PP
Both of the \f[B]--addsign\f[R] and \f[B]--resign\f[R] options generate
and insert new signatures for each package \f[I]PACKAGE_FILE\f[R] given,
replacing any existing signatures.
There are two options for historical reasons, there is no difference in
behavior currently.
.PP
To create a signature rpm needs to verify the package\[aq]s checksum.
As a result packages with a MD5/SHA1 checksums cannot be signed in FIPS
mode.
.PP
\f[B]rpm\f[R] \f[B]--delsign\f[R] \f[I]PACKAGE_FILE ...\f[R]
.PP
Delete all signatures from each package \f[I]PACKAGE_FILE\f[R] given.
.PP
\f[B]rpm\f[R] \f[B]--delfilesign\f[R] \f[I]PACKAGE_FILE ...\f[R]
.PP
Delete all IMA and fsverity file signatures from each package
\f[I]PACKAGE_FILE\f[R] given.
.SS SIGN OPTIONS
.TP
\f[B]--rpmv3\f[R]
Force RPM V3 header+payload signature addition.
These are expensive and redundant baggage on packages where a separate
payload digest exists (packages built with rpm >= 4.14).
Rpm will automatically detect the need for V3 signatures, but this
option can be used to force their creation if the packages must be fully
signature verifiable with rpm < 4.14 or other interoperability reasons.
.TP
\f[B]--fskpath \f[R]\f[I]KEY\f[R]
Used with \f[B]--signfiles\f[R], use file signing key \f[I]Key\f[R].
.TP
\f[B]--certpath \f[R]\f[I]CERT\f[R]
Used with \f[B]--signverity\f[R], use file signing certificate
\f[I]Cert\f[R].
.TP
\f[B]--verityalgo \f[R]\f[I]ALG\f[R]
Used with \f[B]--signverity\f[R], to specify the signing algorithm.
sha256 and sha512 are supported, with sha256 being the default if this
argument is not specified.
This can also be specified with the macro %_verity_algorithm
.TP
\f[B]--signfiles\f[R]
Sign package files.
The macro \f[B]%_binary_filedigest_algorithm\f[R] must be set to a
supported algorithm before building the package.
The supported algorithms are SHA1, SHA256, SHA384, and SHA512, which are
represented as 2, 8, 9, and 10 respectively.
The file signing key (RSA private key) must be set before signing the
package, it can be configured on the command line with
\f[B]--fskpath\f[R] or the macro %_file_signing_key.
.TP
\f[B]--signverity\f[R]
Sign package files with fsverity signatures.
The file signing key (RSA private key) and the signing certificate must
be set before signing the package.
The key can be configured on the command line with \f[B]--fskpath\f[R]
or the macro %_file_signing_key, and the cert can be configured on the
command line with \f[B]--certpath\f[R] or the macro %_file_signing_cert.
.SS USING GPG TO SIGN PACKAGES
.PP
In order to sign packages using GPG, \f[B]rpm\f[R] must be configured to
run GPG and be able to find a key ring with the appropriate keys.
By default, \f[B]rpm\f[R] uses the same conventions as GPG to find key
rings, namely the \f[B]$GNUPGHOME\f[R] environment variable.
If your key rings are not located where GPG expects them to be, you will
need to configure the macro \f[B]%_gpg_path\f[R] to be the location of
the GPG key rings to use.
If you want to be able to sign packages you create yourself, you also
need to create your own public and secret key pair (see the GPG manual).
You will also need to configure the \f[B]rpm\f[R] macros
.TP
\f[B]%_gpg_name\f[R]
The name of the \[dq]user\[dq] whose key you wish to use to sign your
packages.
.PP
For example, to be able to use GPG to sign packages as the user
\f[I]\[dq]John Doe <jdoe\[at]foo.com>\[dq]\f[R] from the key rings
located in \f[I]/etc/rpm/.gpg\f[R] using the executable
\f[I]/usr/bin/gpg\f[R] you would include
.IP
.nf
\f[C]
%_gpg_path /etc/rpm/.gpg
%_gpg_name John Doe <jdoe\[at]foo.com>
%__gpg /usr/bin/gpg
\f[R]
.fi
.PP
in a macro configuration file.
Use \f[I]/etc/rpm/macros\f[R] for per-system configuration and
\f[I]\[ti]/.rpmmacros\f[R] for per-user configuration.
Typically it\[aq]s sufficient to set just %_gpg_name.
.SH SEE ALSO
.IP
.nf
\f[C]
popt(3),
rpm(8),
rpmdb(8),
rpmkeys(8),
rpm2cpio(8),
rpmbuild(8),
rpmspec(8),
\f[R]
.fi
.PP
\f[B]rpmsign --help\f[R] - as rpm supports customizing the options via
popt aliases it\[aq]s impossible to guarantee that what\[aq]s described
in the manual matches what\[aq]s available.
.PP
\f[B]http://www.rpm.org/ <URL:http://www.rpm.org/>\f[R]
.SH AUTHORS
.IP
.nf
\f[C]
Marc Ewing <marc\[at]redhat.com>
Jeff Johnson <jbj\[at]redhat.com>
Erik Troan <ewt\[at]redhat.com>
Panu Matilainen <pmatilai\[at]redhat.com>
Fionnuala Gunter <fin\[at]linux.vnet.ibm.com>
Jes Sorensen <jsorensen\[at]fb.com>
\f[R]
.fi
