'\" et
.TH STRLEN "3P" 2017 "IEEE/The Open Group" "POSIX Programmer's Manual"
.\"
.SH PROLOG
This manual page is part of the POSIX Programmer's Manual.
The Linux implementation of this interface may differ (consult
the corresponding Linux manual page for details of Linux behavior),
or the interface may not be implemented on Linux.
.\"
.SH NAME
strlen, strnlen
\(em get length of fixed size string
.SH SYNOPSIS
.LP
.nf
#include <string.h>
.P
size_t strlen(const char *\fIs\fP);
size_t strnlen(const char *\fIs\fP, size_t \fImaxlen\fP);
.fi
.SH DESCRIPTION
For
\fIstrlen\fR():
The functionality described on this reference page is aligned with the
ISO\ C standard. Any conflict between the requirements described here and the
ISO\ C standard is unintentional. This volume of POSIX.1\(hy2017 defers to the ISO\ C standard.
.P
The
\fIstrlen\fR()
function shall compute the number of bytes in the string to which
.IR s
points, not including the terminating NUL character.
.P
The
\fIstrnlen\fR()
function shall compute the smaller of the number of bytes in the array
to which
.IR s
points, not including any terminating NUL character, or the value of the
.IR maxlen
argument. The
\fIstrnlen\fR()
function shall never examine more than
.IR maxlen
bytes of the array pointed to by
.IR s .
.SH "RETURN VALUE"
The
\fIstrlen\fR()
function shall return the length of
.IR s ;
no return value shall be reserved to indicate an error.
.P
The
\fIstrnlen\fR()
function shall return the number of bytes preceding the first null
byte in the array to which
.IR s
points, if
.IR s
contains a null byte within the first
.IR maxlen
bytes; otherwise, it shall return
.IR maxlen .
.SH ERRORS
No errors are defined.
.LP
.IR "The following sections are informative."
.SH EXAMPLES
.SS "Getting String Lengths"
.P
The following example sets the maximum length of
.IR key
and
.IR data
by using
\fIstrlen\fR()
to get the lengths of those strings.
.sp
.RS 4
.nf

#include <string.h>
\&...
struct element {
    char *key;
    char *data;
};
\&...
char *key, *data;
int len;
.P
*keylength = *datalength = 0;
\&...
if ((len = strlen(key)) > *keylength)
    *keylength = len;
if ((len = strlen(data)) > *datalength)
    *datalength = len;
\&...
.fi
.P
.RE
.SH "APPLICATION USAGE"
None.
.SH RATIONALE
None.
.SH "FUTURE DIRECTIONS"
None.
.SH "SEE ALSO"
.IR "\fIwcslen\fR\^(\|)"
.P
The Base Definitions volume of POSIX.1\(hy2017,
.IR "\fB<string.h>\fP"
.\"
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1-2017, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 7, 2018 Edition,
Copyright (C) 2018 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group.
In the event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
.PP
Any typographical or formatting errors that appear
in this page are most likely
to have been introduced during the conversion of the source files to
man page format. To report such errors, see
https://www.kernel.org/doc/man-pages/reporting_bugs.html .
