'\" t
.TH "SD_BUS_MESSAGE_GET_TYPE" "3" "" "systemd 243" "sd_bus_message_get_type"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
sd_bus_message_get_type, sd_bus_message_is_signal, sd_bus_message_is_method_call, sd_bus_message_is_method_error \- Query bus message addressing metadata
.SH "SYNOPSIS"
.sp
.ft B
.nf
#include <systemd/sd\-bus\&.h>
.fi
.ft
.HP \w'int\ sd_bus_message_get_type('u
.BI "int sd_bus_message_get_type(sd_bus_message\ *" "message" ", uint8_t\ *" "type" ");"
.HP \w'int\ sd_bus_message_is_signal('u
.BI "int sd_bus_message_is_signal(sd_bus_message\ *" "message" ", const\ char\ *" "interface" ", const\ char\ *" "member" ");"
.HP \w'int\ sd_bus_message_is_method_call('u
.BI "int sd_bus_message_is_method_call(sd_bus_message\ *" "message" ", const\ char\ *" "interface" ", const\ char\ *" "member" ");"
.HP \w'int\ sd_bus_message_is_method_error('u
.BI "int sd_bus_message_is_method_error(sd_bus_message\ *" "message" ", const\ char\ *" "name" ");"
.SH "DESCRIPTION"
.PP
\fBsd_bus_message_get_type()\fR
returns the type of a message in the output parameter
\fItype\fR, one of
\fBSD_BUS_MESSAGE_METHOD_CALL\fR,
\fBSD_BUS_MESSAGE_METHOD_RETURN\fR,
\fBSD_BUS_MESSAGE_METHOD_ERROR\fR,
\fBSD_BUS_MESSAGE_SIGNAL\fR\&. This type is either specified as a parameter when the message is created using
\fBsd_bus_set_message_new\fR(3), or is set automatically when the message is created using
\fBsd_bus_set_message_new_signal\fR(3),
\fBsd_bus_set_message_new_method_call\fR(3),
\fBsd_bus_set_message_new_method_error\fR(3)
and similar functions\&.
.PP
\fBsd_bus_message_is_signal()\fR
checks if message
\fIm\fR
is a signal message\&. If
\fIinterface\fR
is non\-null, it also checks if the message has the same interface set\&. If
\fImember\fR
is non\-null, it also checks if the message has the same member set\&. Also see
\fBsd_bus_set_message_new_signal\fR(3)\&. It returns true when all checks pass\&.
.PP
\fBsd_bus_message_is_method_call()\fR
checks if message
\fIm\fR
is a method call message\&. If
\fIinterface\fR
is non\-null, it also checks if the message has the same interface set\&. If
\fImember\fR
is non\-null, it also checks if the message has the same member set\&. Also see
\fBsd_bus_set_message_new_method_call\fR(3)\&. It returns true when all checks pass\&.
.PP
\fBsd_bus_message_is_method_error()\fR
checks if message
\fIm\fR
is an error reply message\&. If
\fIname\fR
is non\-null, it also checks if the message has the same error identifier set\&. Also see
\fBsd_bus_set_message_new_method_error\fR(3)\&. It returns true when all checks pass\&.
.SH "RETURN VALUE"
.PP
On success, those functions return 0 or a positive integer\&. On failure, it returns a negative errno\-style error code\&.
.SS "Errors"
.PP
Returned errors may indicate the following problems:
.PP
\fB\-EINVAL\fR
.RS 4
The
\fImessage\fR
parameter or the output parameter are
\fBNULL\fR\&.
.RE
.SH "NOTES"
.PP
These APIs are implemented as a shared library, which can be compiled and linked to with the
\fBlibsystemd\fR\ \&\fBpkg-config\fR(1)
file\&.
.SH "SEE ALSO"
.PP
\fBsystemd\fR(1),
\fBsd-bus\fR(3),
\fBsd_bus_message_new\fR(3),
\fBsd_bus_message_set_destination\fR(3)
