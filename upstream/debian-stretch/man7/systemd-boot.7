'\" t
.TH "SYSTEMD\-BOOT" "7" "" "systemd 239" "systemd-boot"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
systemd-boot, sd-boot \- A simple UEFI boot manager
.SH "DESCRIPTION"
.PP
\fBsystemd\-boot\fR
(short:
\fBsd\-boot\fR) is a simple UEFI boot manager\&. It provides a graphical menu to select the entry to boot and an editor for the kernel command line\&. systemd\-boot supports systems with UEFI firmware only\&.
.PP
systemd\-boot loads boot entry information from the EFI system partition (ESP), usually mounted at
/boot,
/efi, or
/boot/efi
during OS runtime\&. Configuration file fragments, kernels, initrds and other EFI images to boot generally need to reside on the ESP\&. Linux kernels must be built with
\fBCONFIG_EFI_STUB\fR
to be able to be directly executed as an EFI image\&. During boot systemd\-boot automatically assembles a list of boot entries from the following sources:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Boot entries defined with
\m[blue]\fBBoot Loader Specification\fR\m[]\&\s-2\u[1]\d\s+2
description files located in
/loader/entries/
on the ESP\&. These usually describe Linux kernel images with associated initrd images, but alternatively may also describe arbitrary other EFI executables\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Unified kernel images following the
\m[blue]\fBBoot Loader Specification\fR\m[]\&\s-2\u[1]\d\s+2, as executable EFI binaries in
/EFI/Linux/
on the ESP\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
The Microsoft Windows EFI boot manager, if installed
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
The Apple MacOS X boot manager, if installed
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
The EFI Shell binary, if installed
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
A reboot into the UEFI firmware setup option, if supported by the firmware
.RE
.PP
\fBkernel-install\fR(8)
may be used to copy kernel images onto the ESP and to generate description files compliant with the Boot Loader Specification\&.
\fBbootctl\fR(1)
may be used from a running system to locate the ESP, list available entries, and install systemd\-boot itself\&.
.PP
systemd\-boot will provide information about the time spent in UEFI firmware using the
\m[blue]\fBBoot Loader Interface\fR\m[]\&\s-2\u[2]\d\s+2\&. This information can be displayed using
\fBsystemd-analyze\fR(1)\&.
.SH "KEY BINDINGS"
.PP
The following keys may be used in the boot menu:
.PP
↑ (Up), ↓ (Down), j, k, PageUp, PageDown, Home, End
.RS 4
Navigate up/down in the entry list
.RE
.PP
↵ (Enter)
.RS 4
Boot selected entry
.RE
.PP
d
.RS 4
Make selected entry the default
.RE
.PP
e
.RS 4
Edit the kernel command line for selected entry
.RE
.PP
+, t
.RS 4
Increase the timeout before default entry is booted
.RE
.PP
\-, T
.RS 4
Decrease the timeout
.RE
.PP
v
.RS 4
Show systemd\-boot, UEFI, and firmware versions
.RE
.PP
P
.RS 4
Print status
.RE
.PP
Q
.RS 4
Quit
.RE
.PP
h, ?
.RS 4
Show a help screen
.RE
.PP
Ctrl + l
.RS 4
Reprint the screen
.RE
.PP
The following keys may be used during bootup or in the boot menu to directly boot a specific entry:
.PP
l
.RS 4
Linux
.RE
.PP
w
.RS 4
Windows
.RE
.PP
a
.RS 4
OS X
.RE
.PP
s
.RS 4
EFI shell
.RE
.PP
1, 2, 3, 4, 5, 6, 7, 8, 9
.RS 4
Boot entry number 1 \&... 9
.RE
.PP
In the editor, most keys simply insert themselves, but the following keys may be used to perform additional actions:
.PP
← (Left), → (Right), Home, End
.RS 4
Navigate left/right
.RE
.PP
Esc
.RS 4
Abort the edit and quit the editor
.RE
.PP
Ctrl + k
.RS 4
Clear the command line
.RE
.PP
Ctrl + w, Alt + Backspace
.RS 4
Delete word backwards
.RE
.PP
Alt + d
.RS 4
Delete word forwards
.RE
.PP
↵ (Enter)
.RS 4
Boot entry with the edited command line
.RE
.PP
Note that unless configured otherwise in the UEFI firmware, systemd\-boot will use the US keyboard layout, so key labels might not match for keys like +/\-\&.
.SH "FILES"
.PP
The files systemd\-boot reads generally reside on the UEFI ESP which is usually mounted to
/boot/,
/efi/
or
/boot/efi
during OS runtime\&. systemd\-boot reads runtime configuration such as the boot timeout and default entry from
/loader/loader\&.conf
on the ESP (in combination with data read from EFI variables)\&. See
\fBloader.conf\fR(5)\&. Boot entry description files following the
\m[blue]\fBBoot Loader Specification\fR\m[]\&\s-2\u[1]\d\s+2
are read from
/loader/entries/
on the ESP\&. Unified kernel boot entries following the
\m[blue]\fBBoot Loader Specification\fR\m[]\&\s-2\u[1]\d\s+2
are read from
/EFI/Linux/
on the ESP\&.
.SH "SEE ALSO"
.PP
\fBbootctl\fR(1),
\fBloader.conf\fR(5),
\m[blue]\fBBoot Loader Specification\fR\m[]\&\s-2\u[1]\d\s+2,
\m[blue]\fBBoot Loader Interface\fR\m[]\&\s-2\u[2]\d\s+2
.SH "NOTES"
.IP " 1." 4
Boot Loader Specification
.RS 4
\%https://github.com/systemd/systemd/blob/master/doc/BOOT_LOADER_SPECIFICATION.md
.RE
.IP " 2." 4
Boot Loader Interface
.RS 4
\%https://www.freedesktop.org/wiki/Software/systemd/BootLoaderInterface
.RE
