.\"
.TH proc_scsi_register 9 "July 1997" "Linux 2.0.30" "/proc Functions"
.LO 9
.hlm 0
.na
.SH NAME
proc_scsi_register, proc_scsi_unregister \- register SCSI entries in the /proc filesystem
.SH SYNOPSIS
.B #include <linux/proc_fs.h>
.TP
.BI "int\ proc_scsi_register(\%struct\ proc_dir_entry\ *\ " "driver" ", struct\ proc_dir_entry\ *\ " "child");
.TP
.BI "int\ proc_scsi_unregister(\%struct\ proc_dir_entry\ *\ " "driver" ", int\ " "inode");
.ad

.SH DESCRIPTION
These are wrapper functions around
.B proc_register
and
.BR proc_unregister .
.PP
.B proc_scsi_register
always sets the
.I ops
field of
.B child
to proc_scsi_inode_operations.  If the child inode number is less than
PROC_SCSI_FILE, the child is registered with a parent of proc_scsi and
.B driver
is ignored.
Otherwise the child is registered with a parent of
.BR driver .
.PP
.BR proc_scsi_unregister .
If the child inode number is less than PROC_SCSI_FILE, the child is
unregistered with a parent of proc_scsi and
.B driver
is ignored.
Otherwise the child is unregistered with a parent of
.B driver
and scsi_init_free is called on the child.
.SH "RETURN VALUE"
As for
.B proc_register
and
.BR proc_unregister .
.SH "SEE ALSO"
.BR proc_register "(9), " proc_unregister "(9)"
.SH AUTHOR
Keith Owens <kaos@ocs.com.au>
