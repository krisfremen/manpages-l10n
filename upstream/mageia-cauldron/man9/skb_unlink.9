.\" -*- nroff -*-
.\"
.\" copyright (C) 1997 Cyrus Durgin <cider@speakeasy.org>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.TH SKB_UNLINK 9 "November 24, 1997" "Linux DDI" "Networking Functions"
.hlm 0
.na
.SH NAME
__skb_unlink, skb_unlink \- remove an sk_buff from its list
.SH SYNOPSIS
.B #include <linux/skbuff.h>
.HP
.BI "void __skb_unlink(struct sk_buff " *skb ", struct sk_buff_head " *list ");"
.TP
.BI "void skb_unlink(struct sk_buff " *skb ");"
.hlm 1
.ad
.SH DESCRIPTION
The \fBskb_unlink\fP function is a wrapper for \fB__skb_unlink\fP.
\fB__skb_unlink\fP removes \fIskb\fP from its sk_buff_head.
It decrements the list qlen pointer, and cleanly detaches the sk_buff
from its queue.  This function should always be used instead of
performing this task manually, as it provides a clean, standardized
way of manipulating an sk_buff_head, and provides interrupt disabling (see
\fBNOTES\fP below.)  Most users will not call \fB__skb_unlink\fP
directly, as it requires that two arguments be supplied and does not
provide any interrupt handling.  \fBskb_unlink\fP determines the list
from which \fIskb\fP should be detached, and disables interrupts.
.SH "RETURN VALUE"
None.
.SH NOTES
It is important to note the difference between not only \fB__skb_unlink\fP
and \fBskb_unlink\fP, but all the \fB__skb_\fP functions and their
\fBskb_\fP counterparts.  Essentially, the \fB__skb_\fP functions are
non-atomic, and should only be used with interrupts disabled.  As a convenience,
the \fBskb_\fP functions are provided, which perform interrupt disable /
enable wrapper functionality in addition to performing their specific tasks.
.SH AVAILABILITY
Linux 1.0+
.SH "SEE ALSO"
.hlm 0
.na
.BR intro "(9), " skb_dequeue "(9), " skb_insert "(9), " skb_queue_head "(9), " skb_queue_tail "(9)"
.ad
.hlm 1
.PP
/usr/src/linux/net/core/skbuff.c /usr/src/linux/net/ipv4/af_inet.c /usr/src/linux/net/ipv4/ip_output.c /usr/src/linux/net/ipv4/tcp.c
.SH AUTHOR
Cyrus Durgin <cider@speakeasy.org>
