'\" et
.TH CLOCK "3P" 2017 "IEEE/The Open Group" "POSIX Programmer's Manual"
.\"
.SH PROLOG
This manual page is part of the POSIX Programmer's Manual.
The Linux implementation of this interface may differ (consult
the corresponding Linux manual page for details of Linux behavior),
or the interface may not be implemented on Linux.
.\"
.SH NAME
clock
\(em report CPU time used
.SH SYNOPSIS
.LP
.nf
#include <time.h>
.P
clock_t clock(void);
.fi
.SH DESCRIPTION
The functionality described on this reference page is aligned with the
ISO\ C standard. Any conflict between the requirements described here and the
ISO\ C standard is unintentional. This volume of POSIX.1\(hy2017 defers to the ISO\ C standard.
.P
The
\fIclock\fR()
function shall return the implementation's best approximation to the
processor time used by the process since the beginning of an
implementation-defined era related only to the process invocation.
.SH "RETURN VALUE"
To determine the time in seconds, the value returned by
\fIclock\fR()
should be divided by the value of the macro CLOCKS_PER_SEC.
CLOCKS_PER_SEC is defined to be one million in
.IR <time.h> .
If the processor time used is not available or its value cannot be
represented, the function shall return the value (\c
.BR clock_t )\-1.
.SH ERRORS
No errors are defined.
.LP
.IR "The following sections are informative."
.SH EXAMPLES
None.
.SH "APPLICATION USAGE"
In programming environments where
.BR clock_t
is a 32-bit integer type and CLOCKS_PER_SEC is one million,
\fIclock\fR()
will start failing in less than 36 minutes of processor time for
signed
.BR clock_t ,
or 72 minutes for unsigned
.BR clock_t .
Applications intended to be portable to such environments should use
\fItimes\fR()
instead (or
\fIclock_gettime\fR()
with CLOCK_PROCESS_CPUTIME_ID, if supported).
.P
In order to measure the time spent in a program,
\fIclock\fR()
should be called at the start of the program and its return value
subtracted from the value returned by subsequent calls. The value
returned by
\fIclock\fR()
is defined for compatibility across systems that have clocks with
different resolutions. The resolution on any particular system need
not be to microsecond accuracy.
.SH RATIONALE
None.
.SH "FUTURE DIRECTIONS"
None.
.SH "SEE ALSO"
.IR "\fIasctime\fR\^(\|)",
.IR "\fIclock_getres\fR\^(\|)",
.IR "\fIctime\fR\^(\|)",
.IR "\fIdifftime\fR\^(\|)",
.IR "\fIgmtime\fR\^(\|)",
.IR "\fIlocaltime\fR\^(\|)",
.IR "\fImktime\fR\^(\|)",
.IR "\fIstrftime\fR\^(\|)",
.IR "\fIstrptime\fR\^(\|)",
.IR "\fItime\fR\^(\|)",
.IR "\fItimes\fR\^(\|)",
.IR "\fIutime\fR\^(\|)"
.P
The Base Definitions volume of POSIX.1\(hy2017,
.IR "\fB<time.h>\fP"
.\"
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1-2017, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 7, 2018 Edition,
Copyright (C) 2018 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group.
In the event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
.PP
Any typographical or formatting errors that appear
in this page are most likely
to have been introduced during the conversion of the source files to
man page format. To report such errors, see
https://www.kernel.org/doc/man-pages/reporting_bugs.html .
