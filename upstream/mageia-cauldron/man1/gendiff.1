.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "GENDIFF" "1" "Mon Jan 10 2000" "" ""
.hy
.SH NAME
.PP
gendiff - utility to aid in error-free diff file generation
.SH SYNOPSIS
.PP
\f[B]gendiff\f[R] <directory> <diff-extension>
.SH DESCRIPTION
.PP
\f[B]gendiff\f[R] is a rather simple script which aids in generating a
diff file from a single directory.
It takes a directory name and a \[dq]diff-extension\[dq] as its only
arguments.
The diff extension should be a unique sequence of characters added to
the end of all original, unmodified files.
The output of the program is a diff file which may be applied with the
\f[B]patch\f[R] program to recreate the changes.
.PP
The usual sequence of events for creating a diff is to create two
identical directories, make changes in one directory, and then use the
\f[B]diff\f[R] utility to create a list of differences between the two.
Using gendiff eliminates the need for the extra, original and unmodified
directory copy.
Instead, only the individual files that are modified need to be saved.
.PP
Before editing a file, copy the file, appending the extension you have
chosen to the filename.
I.e.
if you were going to edit somefile.cpp and have chosen the extension
\[dq]fix\[dq], copy it to somefile.cpp.fix before editing it.
Then edit the first copy (somefile.cpp).
.PP
After editing all the files you need to edit in this fashion, enter the
directory one level above where your source code resides, and then type
.IP
.nf
\f[C]
    $ gendiff somedirectory .fix > mydiff-fix.patch
\f[R]
.fi
.PP
You should redirect the output to a file (as illustrated) unless you
want to see the results on stdout.
.SH SEE ALSO
.PP
\f[B]diff\f[R](1), \f[B]patch\f[R](1)
.SH AUTHOR
.IP
.nf
\f[C]
Marc Ewing <marc\[at]redhat.com>
\f[R]
.fi
