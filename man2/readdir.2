.\" Copyright (C) 1995 Andries Brouwer (aeb@cwi.nl)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Written 11 June 1995 by Andries Brouwer <aeb@cwi.nl>
.\" Modified 22 July 1995 by Michael Chastain <mec@duracef.shout.net>:
.\"   In 1.3.X, returns only one entry each time; return value is different.
.\" Translated into german 02 June 1996 by Markus Kaufmann
.\"                                        <markus.kaufmann@gmx.de>
.\" 
.TH READDIR 2  "2. Juni 1996" "Linux 1.3.6" "Systemaufrufe"
.SH BEZEICHNUNG
readdir \- liest einen Verzeichniseintrag
.PP
Diese Handbuchseite ist veraltet. Im Zweifelsfall ziehen Sie
die englischsprachige Handbuchseite zu Rate, indem Sie
.IP
man -LC 2 readdir
.PP
eingeben.
.SH ÜBERSICHT
.nf
.B #include <unistd.h>
.B #include <linux/dirent.h>
.B #include <linux/unistd.h>
.sp
.B _syscall3(int, readdir, uint, fd, struct dirent *, dirp, uint, count);
.sp
.BI "int readdir(unsigned int " fd ", struct dirent *" dirp ", unsigned int " count );
.fi
.SH BESCHREIBUNG
Dies ist nicht die Funktion, an der sie interessiert sind.
Unter
.BR readdir (3)
finden sie eine POSIX-konforme C-Funktion.
Diese Seite beschreibt den rohen Kernelsystemaufruf, der sich jederzeit
ändern kann und durch 
.BR getdents (2)
ersetzt wurde.
.PP
.B readdir
liest eine
.IR dirent \-Struktur
von dem Verzeichnis auf das die Variable 
.I fd
zeigt in den Speicher an die Stelle auf die 
.IR dirp 
zeigt.
Der Parameter 
.I count
wird ignoriert; es wird höchstens eine dirent-Struktur gelesen.
.PP
Die
.IR dirent -Struktur 
ist wie folgt deklariert:
.PP
.RS
.nf
struct dirent
{
    long d_ino;                 /* inode Nummer */
    off_t d_off;                /* Offset zu diesem \fIdirent\fP */
    unsigned short d_reclen;    /* Länge von \fId_name\fP */
    char d_name [NAME_MAX+1];   /* Dateiname (Null-terminiert) */
}
.fi
.RE
.PP
.I d_ino
ist eine Inode-Nummer.
.I d_off
ist der Abstand zwischen dem Beginn des Verzeichnisses und diesem 
.IR dirent .
.I d_reclen
ist die Länge von 
.IR d_name,
den abschließenden Null-terminator nicht mitgezählt.
.I d_name
ist ein Null-terminierter Dateiname.
.PP
.SH "RÜCKGABEWERT"
Bei Erfolg wird eine 1 zurückgeliefert.
Beim Ende eines Verzeichnisses wird eine 0 zurückgeliefert.
Beim Auftreten eines Fehlers wird \-1 zurückgeliefert und
.I errno
entsprechend gesetzt.
.SH "FEHLER"
.TP
.B EBADF
Ungültiger Dateideskriptor
.IR fd .
.TP
.B ENOTDIR
Dateideskriptor zeigt nicht auf ein Verzeichnis.
.SH "KONFORM ZU"
Dieser Systemaufruf ist Linuxspezifisch.
.SH "SIEHE AUCH"
.BR getdents (2),
.BR readdir (3).
