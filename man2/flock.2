.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright 1993 Rickard E. Faith (faith@cs.unc.edu)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified Fri Jan 31 16:26:07 1997 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified Fri Dec 11 17:57:27 1998 by Jamie Lokier <jamie@imbolc.ucc.ie>
.\" Translated into German by Dennis Stampfer <kontakt@dstampfer.de>
.\"
.TH FLOCK 2 "28. August 2002" "" "Systemaufrufe"
.SH BEZEICHNUNG
flock \- sperrt und entsperrt Dateien
.SH "ÜBERSICHT"
.B #include <sys/file.h>
.sp
.BR "int flock(int " fd ", int " operation );
.SH BESCHREIBUNG
flock sperrt oder entsperrt eine geöffnete Datei.  Der Dateideskriptor wird
mittels
.I fd
übergeben.  Gültige Operationen sind:
.RS
.sp
.TP 1.0i
LOCK_SH
Gemeinsames Sperren.  Mehrere Prozesse können eine Datei zur selben Zeit sperren.
.TP
LOCK_EX
Alleiniges Sperren.  Nur ein Prozess kann zu einer Zeit eine Datei sperren.
.TP
LOCK_UN
Entsperren.
.TP
LOCK_NB
Die Operation blockiert nicht bis die Sperre gesetzt werden kann,
sondern übergibt die Kontrolle sofort wieder an das aufrufende Programm.
Diese Option kann durch Bitweises 
.B ODER 
mit anderen Operationen verknüpft werden.
.sp
.RE
.PP
Eine einzelne Datei kann nicht gleichzeitig gemeinsame und alleinige
Sperren enthalten.
.PP
Es ist nur die Datei (Inode) gesperrt, 
.BI nicht
aber der Dateideskriptor.  Dadurch entstehen bei der Benutzung von
.BR dup (2)
und
.BR fork (2)
keine Mehrfachsperrungen.
.SH RÜCKGABEWERT
Bei Erfolg gibt die Funktion 0 zurück. Bei Fehlern wird \-1 zurückgegeben und
.I errno
entsprechend gesetzt.
.SH FEHLER
.TP
.B EWOULDBLOCK
Die Datei ist gesperrt und es ist
.B LOCK_NB
gesetzt.
.SH KONFORM ZU
4.4BSD (Der
.BR flock (2)
Aufruf ist erstmals in 4.2BSD zu finden).
.SH ANMERKUNGEN
.BR flock (2)
funktioniert nicht über NFS.  Benutzen Sie stattdessen
.BR fcntl (2).
Das funktioniert auch über NFS, wenn eine hinreichend aktuelle Version
von Linux installiert ist und der Server Sperren unterstützt.
.PP
.BR flock (2)
und
.BR fcntl (2)
Sperrungen haben unterschiedliche Auswirkungen auf Prozesse, die
.BR fork (2)
und
.BR dup (2)
benutzen.
.SH SIEHE AUCH
.BR open (2),
.BR close (2),
.BR dup (2),
.BR execve (2),
.BR fcntl (2),
.BR fork (2),
.BR lockf (3).
.PP
Weiterhin gibt es
.I locks.txt 
und
.I mandatory.txt 
im Verzeichnis
.IR /usr/src/linux/Documentation .
