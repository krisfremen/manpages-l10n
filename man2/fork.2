.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (c) 1992 Drew Eckhardt (drew@cs.colorado.edu), March 28, 1992
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified by Michael Haardt (u31b3hs@pool.informatik.rwth-aachen.de)
.\" Modified Sat Jul 24 13:22:07 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified 21 Aug 1994 by Michael Chastain (mec@shell.portal.com):
.\"   Referenced 'clone(2)'.
.\" Modified 10 June 1995 by Andries Brouwer (aeb@cwi.nl)
.\" Translated into german by Martni Schulze (joey@infodrom.north.de)
.\"
.TH FORK 2 "29. März 1996" "Linux 1.2.9" "Linux Programmer's Manual"
.SH NAME
fork, vfork \- erzeuge ein Kindprozeß
.SH SYNTAX
.B #include <unistd.h>
.sp
.B pid_t fork(void);
.br
.B pid_t vfork(void);
.SH DESCRIPTION
.B fork
erzeugt einen Kindprozeß, der sich vom Vaterprozeß nur durch die
.BR PID " und " PPID
unterscheidet und darin, daß die Verwendung von Resourcen auf 0
gesetzt ist. File locks und noch ausstehende Signale werden nicht
vererbt.
.PP
Unter Linux ist
.B fork
unter Benutzung von copy-on-write Seiten implementiert, so dass der
einzige Nachteil von
.B fork
die Zeit und der Speicher ist, der benötigt wird, um den die
Page-Tables des Vaterprozesses zu kopieren und einen Task-Record für
den Kindprozeß anzulegen.
.SH "RUECKGABEWERT"
Bei Erfolg wird dem Vaterprozess die
.B PID
des Kindes zurückgegeben und 0 dem Kindprozess. Bei Fehlern wird dem
Vaterprozess \-1 zurückgegeben und
.I errno
entsprechend gesetzt. Ein Kindprozess wird nicht generiert.
.SH FEHLER
.TP
.B EAGAIN
.B fork
kann nicht ausreichend Speicher alloziieren, um die Page-Tables des
Vaterprozesses zu kopieren und einen Task-Record für den Kindprozess
anzulegen.
.SH BUGS
Unter Linux ist
.B vfork
nichts anderes als ein Alias für
.BR fork .
.br
.B fork
gibt niemals den Fehler
.B ENOMEM 
zurück.
.SH "KONFORM ZU"
SVID, AT&T, POSIX, X/OPEN, BSD 4.3
.SH "SIEHE AUCH"
.BR clone "(2), " execve "(2), " wait (2).

