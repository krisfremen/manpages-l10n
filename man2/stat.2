.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (c) 1992 Drew Eckhardt (drew@cs.colorado.edu), March 28, 1992
.\" Parts Copyright (c) 1995 Nicolai Langfeldt (janl@ifi.uio.no), 1/1/95
.\" Deutsche Uebersetzung 1995 by Jonas Rovan
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified by Michael Haardt (u31b3hs@pool.informatik.rwth-aachen.de)
.\" Modified Sat Jul 24 10:54:27 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Thu May 18 11:00:31 1995 by Rik Faith (faith@cs.unc.edu)
.\"          to add comments suggested by Todd Larason (jtl@molehill.org)
.\" Modified Thu Feb 08 00:19:35 1996 by Jonas Rovan (jonas@blitz.de) 
.\" Modified Mon Jun 10 23:33:05 1996 by Martin Schulze (joey@linux.de)
.\" 
.TH STAT 2 "6. Februar 1996" "Linux 1.2.13" "Systemaufrufe"
.SH BEZEICHNUNG
stat, fstat, lstat \- Ermittle Dateistatus
.SH ÜBERSICHT
.B #include <sys/stat.h>
.br
.B #include <unistd.h>
.sp
.BI "int stat(const char *" file_name ", struct stat *" buf );
.br
.BI "int fstat(int " filedes ", struct stat *" buf );
.br
.BI "int lstat(const char *" file_name ", struct stat *" buf );
.SH UEBERBLICK
.PP
Beim Aufruf geben diese Funktionen Informationen über die angegebene Datei
zurück.  Dazu benötigt man keinerlei Rechte an der angegebene Datei, sehr
wohl aber die ''Search''-Rechte im rekursiven Pfad zu dieser Datei.
.PP
.B stat
liefert die Informationen zu der in  
.I file_name
angegebenen Datei und übergibt diese an
.IR buf .

.B lstat
ist ähnlich 
.BR stat ,
nur dass, bei Links, Informationen zum Link und nicht der bezogenen Datei an
.IR buf 
übergeben werden.

.B fstat
ist wie 
.BR stat ,
doch wird statt 
.IR file_name 
die, von
-I fopen(3)
übergebene 
.I filedes
verwendet.

.PP
Alle Aufrufe geben eine Struktur vom Typ
.I stat
zurück, die folgendermassen aufgebaut ist:
.PP
.RS
.nf
struct stat
{
    dev_t         st_dev;      /* Device */
    ino_t         st_ino;      /* INode */
    umode_t       st_mode;     /* Protection */
    nlink_t       st_nlink;    /* Anzahl d. Hard_Links */
    uid_t         st_uid;      /* UID des Besitzers */
    gid_t         st_gid;      /* GID des Besitzers */
    dev_t         st_rdev;     /* Typ (wenn INode-Device) */
    off_t         st_size;     /* Grösse in Bytes*/
    unsigned long st_blksize;  /* Blockgrösse */
    unsigned long st_blocks;   /* Allozierte Blocks */
    time_t        st_atime;    /* Letzter Zugriff */
    time_t        st_mtime;    /* Letzte Modifikation */
    time_t        st_ctime;    /* Letzte Aenderung */
};
.fi
.RE
.PP
CAVEAT:

.I st_blocks
muss nicht unbedingt die Blockgrösse darstellen und
.IR st_blksize 
kann auch die optimale Blockgrösse für die Dateioperationen
angeben.
.PP
Nicht alle, von Linux unterstützte, Dateisysteme verwenden alle Felder.
Normalerweise ändert sich
.I st_atime
durch den Einsatz von
.BR mknod "(2), " utime "(2), " read "(2), " write "(2), und " truncate (2).

.I st_mtime
verändert sich beim Einsatz von
.BR mknod "(2), " utime "(2), und " write (2).

.I st_mtime
wird 
.I nicht
durch Ändern von Besitzer, Gruppe, Hardlink-Count, oder Mode verändert.

.I st_ctime
wird durch das Aendern der INode-Informationen neu gesetzt.

.PP
Folgende Makros sind für den Dateityp definiert:
.RS
.TP 1.2i
S_ISLNK(m)
Testet auf einen Symbolischen Link,
.TP
S_ISREG(m)
auf reguläre Dateien,
.TP
S_ISDIR(m)
auf Verzeichnisse,
.TP
S_ISCHR(m)
checkt auf Character-Devices,
.TP
S_ISBLK(m)
auf Block-Devices, während
.TP
S_ISFIFO(m)
auf FiFos und
.TP
S_ISSOCK(m)
auf Sockets überprüft.
.RE
.PP
Folgende Flags sind für
.I st_mode
definiert:
.RS
.TP 0.9i
S_IFMT
00170000 Bitmaske für den Dateityp
.TP
S_IFSOCK 
0140000 Sockets
.TP
S_IFLNK
0120000 Symbolische Links
.TP
S_IFREG
0100000 reguläre Dateien
.TP
S_IFBLK
0060000 Block-Devices
.TP
S_IFDIR
0040000 Verzeichnisse
.TP
S_IFCHR
0020000 Char-Devices
.TP
S_IFIFO
0010000 FIFOs
.TP
S_ISUID
0004000 SUID-bit
.TP
S_ISGID
0002000 SGID-bit
.TP
S_ISVTX
0001000 Stickybit ( Wer's braucht :) )
.TP
S_IRWXU
00700 rwx für (u)ser
.TP
S_IRUSR (S_IREAD)
00400 r-- für (u)ser
.TP
S_IWUSR (S_IWRITE)
00200 -w- für (u)ser
.TP
S_IXUSR (S_IEXEC)
00100 --x für (u)ser
.TP
S_IRWXG
00070 rwx für (g)roup
.TP
S_IRGRP
00040 r-- für (g)roup
.TP
S_IWGRP
00020 -w- für (g)roup
.TP
S_IXGRP
00010 --x für (g)roup
.TP
S_IRWXO
00007 rwx für (o)thers
.TP
S_IROTH
00004 r-- für (o)thers
.TP
S_IWOTH
00002 -w- für (o)thers
.TP
S_IXOTH
00001 --x für (o)thers
.RE
.SH "RETURN VALUE"
Erfolg gibt 0, ein Fehler gibt \-1 zurück und setzt
.I errno
entsprechend.
.SH FEHLER
.TP
.B EBADF
.I filedes
falsch oder nicht vorhanden.
.TP
.B ENOENT
Datei existiert nicht.
.SH "KONFORM ZU"
SVID (not \fBlstat()\fP), AT&T (not \fBlstat()\fP), POSIX (not
\fBlstat()\fP), X/OPEN (not \fBlstat()\fP), BSD 4.3
.SH "SIEHE AUCH"
.BR chmod "(2), " chown "(2), " readlink "(2), " utime (2)
.SH "DEUTSCH VON"
Jonas Rovan
.BR <jonas@blitz.de> , 
der das GerMan-Projekt für eine der besten Ideen hält, die
jemals gehabt wurden und Andries Brouwer
.BR <aeb@win.tue.nl> 
für dessen Engagement herzlichst dankt.
