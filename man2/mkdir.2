.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" This manpage is Copyright (C) 1992 Drew Eckhardt;
.\"                               1993 Michael Haardt
.\"                               1993,1994 Ian Jackson.
.\" You may distribute it under the terms of the GNU General
.\" Public Licence. It comes with NO WARRANTY.
.\" Translated into german by Ralf Baumert <bau@heineken.chemie.uni-dortmund.de>
.\" Finished by Martin Schulze (joey@finlandia.infodrom.north.de)
.\"
.TH MKDIR 2 "29. Dezember 1996" "Linux 1.0" "Systemaufrufe"
.SH BEZEICHNUNG
mkdir \- Erzeugen eines Verzeichnisses
.SH "ÜBERSICHT"
.nf
.B #include <sys/types.h>
.B #include <fcntl.h>
.B #include <unistd.h>
.sp
.BI "int mkdir(const char *" pathname ", mode_t " mode );
.fi
.SH BESCHREIBUNG
.B mkdir
versucht eine Directory mit dem angegebenem Namen zu erzeugen.
.I mode
legt die Zugriffsrechte fest, die wie üblich noch von der
.BR umask
des Prozesses verändert werden: Die Zugriffsrechte des Verzeichnisses
ist
.BR "(mode & ~umask)" .

Die effektive uid des Prozesses ist der Besitzer des so erzeugten
Verzeichnisses.  Wenn das das neue Verzeichnis enthaltene Verzeichnis
set-group-id gesetzt hat, oder wenn das Dateisystem mit den BSD
Gruppen-Eigenschaften gemountet wurde, erbt das neue Verzeichnis die
Gruppen-ID.  Anderenfalls wird die Gruppe des erzeugenden Prozesses
Besitzer des Verzeichnisses.

Wenn das beinhaltende Verzeichnis set-group-id gesetzt hat, wird das
neue Verzeichnis dieses ebenfalls haben.

.SH "RÜCKGABEWERT"
.BR mkdir
gibt bei Erfolg 0 zurück und \-1, wenn ein Fehler aufgetreten ist,
.I errno
wird dabei entsprechend gesetzt.
.SH FEHLER
.TP
.B EEXIST
.I pathname
existiert bereits (jedoch nicht notwendigerweise als Verzeichnis).
.TP
.B EFAULT
.I pathname
zeigt auf Speicher außerhalb des adressierbaren Bereichs.
.TP
.B EACCES
Das beinhaltende Verzeichnis gibt dem Prozeß keine
Schreibberechtigung oder eines der Verzeichnisse in
.IR pathname
erlaubt keine Suche (-x-).
.TP
.B ENAMETOOLONG
.I pathname
ist zu lang.
.TP
.B ENOENT
Eine Verzeichniskomponente von
.I pathname
existiert nicht oder ist ein zirkulierender symbolischer Link.
.TP
.B ENOTDIR
Eine Komponente von
.IR pathname ,
die als Verzeichnis benutzt werden sollte, ist keines.
.TP
.B ENOMEM
Im Kernel ist zuwenig Speicher vorhanden.
.TP
.B EROFS
.I pathname
zeigt auf eine Datei auf einem Dateisystem, das schreibgeschützt ist,
es wurde jedoch Schreibzugriff gefordert.
.TP
.B ELOOP
.I pathname
enthält einen Verweis auf einen zirkulierenden symbolischen Link, also
einen symbolischen Link, der im Endeffekt wieder auf sich selbst
zeigt.
.TP
.B ENOSPC
Das Gerät, das
.I pathname
enthält, hat keinen Platz mehr für ein neues Verzeichnis.
.B ENOSPC
Das neue Verzeichnis kann nicht erzeugt werden, da der Disk-Quota des
Users erschöpft ist
.\".SH "KONFORM ZU"
.SH BUGS
In einigen älteren Versionen von Linux (zum Beispiel 0.99pl7)
erlaubten alle normalen Dateisysteme ab und zu die Erzeugung von zwei
Dateien im gleichen Verzeichnis mit dem gleichen Namen.  Dieses tritt
nur selten auf und nur auf Systemen mit hoher Systemlast.  Es wird
angenommen, daß dieser Fehler im Minix-Dateisystem im Pre-Release von
Linux 0.99pl8 behoben wurde und man hofft, daß er anschließend in den
anderen Dateisystemen gefixt wurde.

Es gibt noch viele Ungereimtheiten im NFS zugrundeliegenden Protokoll.

.SH "SIEHE AUCH"
.BR read (2),
.BR write (2),
.BR fcntl (2),
.BR close (2),
.BR unlink (2),
.BR open (2),
.BR mknod (2),
.BR stat (2),
.BR umask (2),
.BR mount (2),
.BR socket (2),
.BR socket (2),
.BR fopen (3).
