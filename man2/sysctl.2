.\" Copyright (C) 1996 Andries Brouwer (aeb@cwi.nl)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Written 11 April 1996 by Andries Brouwer (aeb@cwi.nl)
.\" 960412: Added comments from Stephen Tweedie
.\" Translated to German Mon Jun 24 13:15:00 1996 by Patrick Rother
.\"                                                  (krd@burn.rhein-ruhr.de)
.\"
.TH SYSCTL 2 "24. Juni 1996" "Linux 1.3.85" "Bibliotheksfunktionen"
.SH NAME
sysctl \- lese/schreibe Systemparameter
.SH ÜBERSICHT
.B #include <unistd.h>
.sp
.B #include <linux/unistd.h>
.sp
.B #include <linux/sysctl.h>
.sp
.B _syscall1(int, _sysctl, struct __sysctl_args *, args);
.sp
.BI "int _sysctl(struct __sysctl_args *" args );
.SH BESCHREIBUNG
Der Aufruf
.B _sysctl
liest und/oder schreibt Kernel-Parameter, zum Beispiel den Rechnernamen
oder die maximale Anzahl geo^ffneter Dateien.  Das Argument hat die Form
.PP
.nf
struct __sysctl_args {
        int *name;        /* ganzzahliger Vektor, der eine Variable
                             beschreibt */
        int nlen;         /* Länge dieses Vektors */
        void *oldval;     /* 0 oder Adresse, wo der alte Wert gespeichert
                             werden soll */
        size_t *oldlenp;  /* freier Raum für den alten Wert, überschrieben
                             durch die aktuelles Größe des alten Wertes */
        void *newval;     /* 0 oder Adresse des neuen Wertes */
        size_t newlen;    /* Länge des neuen Wertes */
};
.fi
.PP
Dieser Aufruf sucht in einer Baumstruktur, die möglicherweise 
einer Verzeichnisstruktur unter
.BR /proc/sys
ähnelt, und ruft, wenn der geforderte Punkt gefunden wird, eine entsprechende
Routine auf, um den Wert zu lesen oder zu verändern.

.SH "BEISPIEL"
.nf
#include <linux/unistd.h>
#include <linux/types.h>
#include <linux/sysctl.h>

_syscall1(int, _sysctl, struct __sysctl_args *, args);
int sysctl(int *name, int nlen, void *oldval, size_t *oldlenp,
           void *newval, size_t newlen)
{
        struct __sysctl_args args={name,nlen,oldval,oldlenp,newval,newlen};
        return _sysctl(&args);
}

#define SIZE(x) sizeof(x)/sizeof(x[0])
#define OSNAMESZ 100

char osname[OSNAMESZ];
int osnamelth;
int name[] = { CTL_KERN, KERN_OSTYPE };

main(){
        osnamelth = SIZE(osname);
        if (sysctl(name, SIZE(name), osname, &osnamelth, 0, 0))
                perror("sysctl");
        else
                printf("This machine is running %*s\en", osnamelth, osname);
        return 0;
}
.fi

.SH "RÜCKGABEWERTE"
Bei erfolgreicher beendigung gibt
.B _sysctl
0 zurück. Anderenfalls wird ein Wert von \-1 zurückgegeben und
.I errno
gesetzt, um den Fehler anzuzeigen.
.SH FEHLER
.TP
.B ENOTDIR
.I name
wurde nicht gefunden.
.TP
.B EPERM
Keine Such-Berechtigung für eines der auftretenden `Verzeichnisse',
oder keine Leseberechtigung wenn
.I oldval
nicht null war, oder keine Schreibberechtigung wenn
.I newval
nicht null war.
.TP
.B EFAULT
Der Aufruf fragte nach dem vorherigen Wert durch setzen von
.I oldval
auf nicht null, aber erlaubte Null Raum in
.IR oldlenp .
.SH "KONFORM ZU"
Dieser Aufruf ist Linux-spezifisch.
.SH GESCHICHTE
Einen Aufruf
.B sysctl
gibt es in Linux seit Version 1.3.57.  Er entstand in BSD-4.4.
Ausschlies^lich Linux hat das Abbild
.IR /proc/sys .
Schemata der Objektbenennung unterscheiden sich in Linux und BSD 4.4,
aber die Deklaration der Funktion
.BR sysctl (2)
sind in beiden die gleiche.
.SH BUGS
Nicht alles verfügbaren Objekte sind richtig dokumentiert.
.br
Es ist noch nicht möglich, das Betriebssystem durch schreiben nach
.IR /proc/sys/kernel/ostype
zu ändern.
.SH "SIEHE AUCH"
.BR proc (5).
