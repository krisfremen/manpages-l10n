.\" Copyright (c) 1983, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)readlink.2	6.8 (Berkeley) 3/10/91
.\"
.\" Modified Sat Jul 24 00:10:21 1993 by Rik Faith (faith@cs.unc.edu)
.\" Translated into german 06 June 1996 by Markus Kaufmann
.\"                                        (kaufmann@zebra.fh-weingarten.de)
.\"
.TH READLINK 2 "24 July 1993" "BSD" "Systemaufrufe"
.SH NAME
readlink \- Ermittelt das Ziel eines symbolischen Links
.SH ÜBERSICHT
.B #include <unistd.h>
.sp
.BI "int readlink(const char *" path ", char *" buf ", size_t " bufsiz );
.SH BESCHREIBUNG
.B Readlink
ermittelt den Pfad, auf den der symbolische Link
.I path
zeigt. 
Das Ergebnis wird in den Puffer
.IR buf 
geschrieben, der die Größe
.IR bufsiz 
hat.
.B Readlink
schreibt kein 
.BR NUL -Zeichen,
d.h. in 
.IR buf
steht nicht unbedingt ein gültiger C-String.
.SH "RÜCKGABEWERTE"
Der Aufruf gibt die Anzahl der in den Puffer geschriebenen Bytes zurück.
Trat ein Fehler auf, dann wird \-1 zurückgeliefert und die globale
Variable
.IR errno 
entsprechend gesetzt.
.SH FEHLER
.TP 0.8i
.B ENOTDIR
Eine Komponente des Pfades ist kein Verzeichnis.
.TP
.B EINVAL
Der Pfadname enthält ein Zeichen, bei dem das "high-order" Bit gesetzt ist.
.TP
.B ENAMETOOLONG
Eine Komponente des Pfades ist länger als 255 Zeichen, oder der gesamte Pfad
ist länger als 1023 Zeichen.  
.TP
.B ENOENT
Der angegebene Dateiname existiert nicht.
.TP
.B EACCES
Für ein Teil des Pfades fehlt die Sucherlaubnis.
.TP
.B ELOOP
Beim Ermitteln des Originalpfades wurden zu viele symbolische Links
festgestellt.
.TP
.B EINVAL
Die angegebene Datei ist kein symbolischer Link.
.TP
.B EIO
Beim Lesen vom Dateisystem trat ein E/A-Fehler ("I/O-error") auf.
.TP
.B EFAULT
.I Buf
überschreitet den Adressbereich dieses Prozesses.
.SH HERKUNFT
Der
.BR readlink -Funktionsaufruf
erschien in BSD 4.2.
.SH "SIEHE AUCH"
.BR stat (2),
.BR lstat (2), 
.BR symlink (2).
