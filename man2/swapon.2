.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (c) 1992 Drew Eckhardt (drew@cs.colorado.edu), Märzch 28, 1992
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified by Michael Haardt <u31b3hs@pool.informatik.rwth-aachen.de>
.\" Modified Sat Juli 24 11:47:53 1993 by Rik Faith <faith@cs.unc.edu>
.\" Modified 22 Juliy 1995 by Michael Chastain <mec@duracef.shout.net>:
.\"   Added 'swapflags' argument.
.\" Added historical remark, aeb, 950723.
.\" Modified Tue Oktober 22 22:23:50 1996 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified 980908, aeb.
.\"
.\" Translated into German by Ralf Demmer, Translation & Consulting
.\" rdemmer@rdemmer.de, http://www.rdemmer.de, Berlin, 24.5.1999
.\"
.TH SWAPON 2 "20. April 1999" "Linux" "Systemaufrufe"
.SH BEZEICHNUNG
swapon, swapoff \- Starten/Beenden des Swapping auf ein Gerät oder in eine Datei
.SH ÜBERSICHT
.B #include <unistd.h>
.br
.B #include <asm/page.h>  /* zum Bestimmen von PAGE_SIZE */
.br
.B #include <sys/swap.h>
.sp
.BI int swapon(const char * path , int  swapflags );
.br
.BI int swapoff(const char * path );
.SH BESCHREIBUNG
.B swapon
weist den Swap-Bereich der Datei oder dem Block-Gerät zu, dass in 
.IR path 
festgelegt wurde.
.B swapoff
beendet das Swapping in die Datei oder das Block-Gerät zu, dass in 
.IR path 
festgelegt wurde.
.PP
.B swapon
verwendet ein Argument vom Typ
.IR swapflags .
Wenn
.I swapflags
mit aktiviertem 
.I SWAP_FLAG_PREFER
-Bit übergeben wird, hat der neue Swap-Bereich eine höhere Priorität als der
vorgegebene.  Die Priorität ist kodiert als:
.br
.sp
.I     (prio << SWAP_FLAG_PRIO_SHIFT) & SWAP_FLAG_PRIO_MASK
.br
.PP
Diese Funktionen können nur vom Superuser verwendet werden.
.SH PRIORITY
Jeder Swap-Bereich hat eine Priorität, hoch oder niedrig.  Die
Vorgabe-Priorität ist niedrig.  Innerhalb der Bereich mit niedriger
Priorität erhalten neuere Bereich eine niedrigere Priorität als ältere.
.PP
Alle mit 
.I swapflags
gesetzten Prioritäten sind hohe Prioritäten, und höher als die Vorgabe.  Sie
können einen beliebigen durch den Aufrufenden gewählten nicht-negativen Wert
haben.  Höhere Zahlen entsprechen höheren Prioritäten.
.PP
Swap-Seiten werden nach Priorität aus den Bereichen zugeordnet, die mit der
höchsten Priorität zuerst.  Bei Bereichen mit unterschiedlichen Prioritäten
werden die mit der höheren Priorität zuerst ausgeschöpt, bevor Bereiche mit
niedriger Priorität genutzt werden.  Haben zwei oder mehr Bereiche die gleiche
Priorität und diese ist die höchste verfügbare, dann werden die Seiten
nacheinander im Wechsel verwendet.
.PP
In Linux 1.3.6 beispielsweise befolgt der Kernel diese Regeln gewöhnlich,
aber es gibt auch Ausnahmen.
.SH RÜCKGABEWERT
Bei Erfolg wird NULL zurückgegeben. Tritt ein Fehler auf, wird \-1
zurückgegeben und 
.I errno
entsprechend gesetzt.
.SH FEHLER
Es können viele weitere Fehler auftreten, wenn 
.I path
ungültig ist.

.TP 0.8i
.B EPERM
Der Anwender ist nicht der Superuser oder mehr als 
.B MAX_SWAPFILES
(Vorgabe unter Linux 1.3.6 ist 8) verwendet werden.
.TP
.B EINVAL
wird zurückgegeben, wenn 
.I path 
vorhanden ist, aber weder ein gültiger Pfad noch eine Block-Gerät ist.
.TP
.B ENOENT
wird zurückgegeben, wenn
.I path 
nicht existiert.
.TP
.B ENOMEM 
wird zurückgegeben, wenn nicht genügen Speicher für den Start des Swapping
vorhanden ist.
.SH KONFORM ZU
Diese Funktionen sind spezifisch für Linux und sollten deshalb nicht in
Programmen verwendet werden, die portierbar sein sollen.  Das zweite
`swapflags'-Argument wurde mit Linux 1.3.2 eingeführt.
.SH ANMERKUNGEN
Die Partition oder der Pfad müssen mit 
.BR mkswap (8)
vorbereitet werden.
.SH SIEHE AUCH
.BR mkswap (8),
.BR swapon (8),
.BR swapoff (8).

