#!/bin/bash
#
# Copyright Â© 2020 Dr. Helge Kreutzmann <debian@helgefjell.de>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# This script finds all FIXMEs in manpages and prepeares as much as possible an output suitable for bug reporting

# An example of only upstream is man2/wait.2.po
# An example of both upstream and ours is man4/vcs.4.po

# CONFIG
DCSBASE=/scr/build/src/DCS/manpages-l10n/
CONFIGBASE=$DCSBASE/upstreambug/CONFIG
DIALOG=/usr/bin/dialog
sk_temp=$((tempfile) 2>/dev/null)

cd $DCSBASE/po

# Find all PO files with FIXME in them
for pofile in $(find . -name "*.po"  -exec grep FIXME "{}" -ls ";"  | cut -d/ -f4 | LC_ALL=C sort -u); do 
    # Now look at them for each language
    for lang in de fr nl pl ro; do
	for checkfile in $(find $lang -name $pofile); do
#    echo $checkfile $lang $pofile
	    grep FIXME $checkfile > /tmp/ssF.FIX.$lang.$pofile
	    md5sum /tmp/ssF.FIX.$lang.$pofile | cut -d " " -f1 > /tmp/ssF.md5.$lang.$pofile
	done
    done
    mdnumtotal=$(cat /tmp/ssF.md5.*.$pofile| wc -l)
    mdunique=$(cat /tmp/ssF.md5.*.$pofile| sort -u | wc -l)
#   echo "Md5total: $mdnumtotal Md5unique: $mdunique"
#   if [ $mdnumtotal -ge 2 ] ; then 
#if [ $mdunique -eq 1 ] ; then
    if [ $mdnumtotal -ge 2 -a $mdunique -eq 1 ] ; then
#    echo "Blacklist-Kandidat $pofile"
	echo $pofile >> /tmp/ssF.BLACKLIST
    else
	echo $pofile >> /tmp/ssF.WHITELIST
	let cfcounter=0
        cfilename=""
        for cfile in $CONFIGBASE/CONFIG.*; do
	   #echo "grep -x $pofile $cfile"
	    if [ $(grep -x $pofile $cfile) ] ; then
	    let cfcounter=$cfcounter+1
	    finalfilename=$(basename $cfile)
	    fi
	done
	if [ $cfcounter -eq 0 ] ; then
	    echo "ERROR: $pofile not in any CONFIG file, please add and rerun the script"
	fi
	if [ $cfcounter -gt 1 ] ; then
	    echo "ERROR: $pofile is in serveral ($cfcounter) CONFIG files, please fix them and rerun the script"
	fi
	if [ $cfcounter -eq 1 ] ; then
	    echo $pofile >> /tmp/ssF.REPORT.$finalfilename
	fi
    fi
done

# The following line does not work, the first (largest) item is ignored??
#ls -lhS /tmp/ssF.REPORT.*| awk '{print $9}'|awk 'FS="." {print $4}'

# This is not very elegant, but works around the issue of skipping the first entry
echo "Dummy" > /tmp/ssF.list.Dummy
ls -lhS /tmp/ssF.REPORT.*| awk '{print $9}' >> /tmp/ssF.list.Dummy
ssf_ANZAHL=$(ls -l /tmp/ssF.REPORT.* |wc -l)

ssf_STOP=0
while [ $ssf_STOP -eq 0 ]; do
    echo -n "$DIALOG --clear --title \"Reporting upstream\" --menu \"Choose which package to report for\" 20 51 $ssf_ANZAHL " > /tmp/ssf.menu
    for i in $(cat /tmp/ssF.list.Dummy|awk 'FS="." {print $4}'|grep -v -E "^$"); do
	ssF_date="not reported yet"
	if [ -f $CONFIGBASE/LAST.$i ]; then
	    ssF_date=$(tail -n1 $CONFIGBASE/LAST.$i)
	fi
	echo "Entry: $i (Last reported: $ssF_date)"
	echo -n "\"$i\" \"$i (Last reported: $ssF_date)\" " >> /tmp/ssf.menu
    done
    chmod +x /tmp/ssf.menu
    bash /tmp/ssf.menu 2> $sk_temp
    retval=$?

    if [ $retval == 0 ]; then
	ssf_SELCTION=$(cat $sk_temp)

	echo $ssf_SELCTION
	bugtype=$(grep Bugtype $CONFIGBASE/CONFIG.$ssf_SELCTION)
	bfound=$?

	if [ $bfound == 0 ]; then
	    echo "Reporting bugs as $bugtype"
	else
	    echo "Reporting bugs unkown, check $CONFIGBASE/CONFIG.$ssf_SELCTION for the field \"bugtype\""
	fi
	read
    else
	ssf_STOP=1
    fi
done

# A10 is not enough :-((
#for i in $(cat /tmp/ssF.REPORT.CONFIG.linuxmanpages); do find . -name $i -exec grep -A10 FIXME "{}" ";" -print ; done
