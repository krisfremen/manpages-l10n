.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified 1993-07-24 by Rik Faith (faith@cs.unc.edu)
.\" Modified 1995-08-14 by Arnt Gulbrandsen <agulbra@troll.no>
.\" Modified 2002-07-27 by Walter Harms
.\" (walter.harms@informatik.uni-oldenburg.de)
.\" Translated into German by Maik Messerschmidt (Maik.Messerschmidt@gmx.net)
.\"
.TH POW 3 "6. April 2006" "" "Bibliotheksfunktionen"
.SH BEZEICHNUNG
pow, powf, powl \- Potenzfunktionen
.SH "ÜBERSICHT"
.nf
.B #include <math.h>
.sp
.BI "double pow(double " x ", double " y );
.br
.BI "float powf(float " x ", float " y );
.br
.BI "long double powl(long double " x ", long double " y );
.fi
.sp
Mit der Option \-lm linken.
.SH BESCHREIBUNG
Die
.BR pow()
Funktion gibt die
.IR y \-te
Potenz der Zahl
.IR x
zurück.
.SH FEHLER
Die
.BR pow()
Funktion kann folgenden Fehler zurückgeben:
.TP
.B EDOM
Das Argument
.IR x
ist negativ und
.IR y
ist keine ganze Zahl.  Das Ergebnis wäre eine komplexe Zahl.
.SH "KONFORM ZU"
SVID 3, POSIX, BSD 4.3, ISO 9899.  
Die float und long double Varianten werden vom C99-Standard verlangt.
.SH "SIEHE AUCH"
.BR cbrt (3),
.BR sqrt (3).
