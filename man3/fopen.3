.\" Copyright (c) 1990, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)fopen.3	6.8 (Berkeley) 6/29/91
.\"
.\" Converted for Linux, Mon Nov 29 15:22:01 1993, faith@cs.unc.edu
.\" Translated to German Mon Jul 29 18:00:00 1996 by Patrick Rother <krd@gulu.net>
.\"
.TH FOPEN 3  "29. Juli 1996" "BSD" "Bibliotheksfunktionen"
.SH BEZEICHNUNG
fopen, fdopen, freopen \- Funktionen zum Öffnen von Streams
.SH ÜBERSICHT
.B #include <stdio.h>
.sp
.BI "FILE *fopen( char *" path ", char *" mode );
.br
.BI "FILE *fdopen( int " fildes ", char *" mode );
.br
.BI "FILE *freopen( char *" path ", char *" mode ", FILE *" stream );
.SH BESCHREIBUNG
Die Funktion
.B fopen
öffnet die Datei, dessen Name der String ist, auf den
.I path
zeigt, und verbindet einen Stream damit.
.PP
Das Argument
.I mode
zeigt auf einen String, der mit einer der folgenden Sequenzen beginnt
(Zusätzliche Zeichen dürfen diesen Sequenzen folgen.):
.TP
.B r
Öffne die Textdatei zum Lesen.  Der Stream wird auf den Dateianfang positioniert.
.TP
.B r+
Öffne die Textdatei zum Lesen und Schreiben.  Der Stream wird auf den Dateianfang
positioniert.
.TP
.B w
Verkürze die Datei auf die Länge Null oder erzeuge eine Textdatei zum
Schreiben.  Der Stream wird auf den Dateianfang positioniert.
.TP
.B w+
Öffne die Datei zum Lesen und Schreiben.  Die Datei wird erzeugt, wenn sie nicht
existiert, ansonsten abgeschnitten.  Der Stream wird auf den Dateianfang
positioniert.
.TP
.B a
Öffne die Datei zum Schreiben.  Die Datei wird erzeugt, wenn sie nicht existiert.
Der Stream wird auf das Dateiende positioniert.
.TP
.B a+
Öffne zum Lesen und Schreiben.  Die Datei wird erzeugt, wenn sie nicht
existiert.  Der Stream wird auf das Dateiende positioniert.
.PP
Der String
.I mode
kann auch das Zeichen ``b'' enthalten, entweder als ein drittes Zeichen
oder als ein Zeichen in einem der oben beschriebenen Zwei-Zeichen-Strings.
Dies ist ausschließlich Aus Kompatibilitätsgründen zu ANSI
C3.159-1989 (``ANSI C'') und hat keinen Effekt; das ``b'' wird
ignoriert.  Linux verhält sich evtl. nicht so.
.PP
Jede erzeugte Datei hat den Modus
.BR S_IRUSR \&| S_IWUSR \&|  S_IRGRP \&|  S_IWGRP \&| S_IROTH \&| S_IWOTH
(0666), modifiziert durch den umask-Werk des Prozesses (siehe
.BR umask (2).
.PP
Lese- und Schreibzugriffe dürfen in Schreib-/lese - Streams in jeder
Reihenfolge gemischt verwendet werden und benötigen kein zwischenzeitliches
seek wie in früheren Versionen von
.IR stdio .
Dieses Verhalten ist nicht portabel mit anderen Systemen, und muss
unter Linux nicht funktionieren (irgendjemand sollte das testen und diese Manpage berichtigen);
ANSI C verlangt, dass eine Dateizeiger-Positionierfunktion zwischen Aus-
und Eingabe aufgerufen wird, solange nicht eine Eingabeoperation ein
Dateiende vorfindet.
.PP
Die Funktion
.B fdopen
verbindet einen Stream mit einem existierenden Dateideskriptor
.IR fildes .
Der
.I mode
des Stream muss kompatibel zu dem Modus des Dateideskriptors sein.
Der Dateideskriptor wird nicht ge-dup't.
.PP
Die Funktion
.B freopen
öffnet eine Datei, deren Name der String ist, auf den
.I path
zeigt, und verbindet den Stream, auf den 
.I stream
zeigt, damit.  Der originale Stream (wenn er existiert) wird
geschlossen.  Das Argument
.I mode
wird genauso wie in der Funktion
.B fopen
benutzt.  Der primäre Nutzen der Funktion
.B freopen
ist es, die Datei zu ändern, die mit einem standard Text-Stream
.IR "" ( stderr ", " stdin ", oder " stdout )
verbunden ist.
.SH "RÜCKGABEWERT"
Bei erfolgreicher Beendigung geben
.BR fopen ,
.B fdopen
und
.B freopen
einen Dateideszeiger
.B FILE
zurück.  Anderenfalls wird
.B NULL
zurückgegeben und die globale Variable
.I errno
gesetzt um den Fehler anzuzeigen.
.SH FEHLER
.TP
.B EINVAL
Der
.I mode
für
.BR fopen ,
.BR fdopen ,
oder
.B freopen
war ungültig.
.PP
Die Funktionen
.BR fopen ,
.B fdopen
und
.B freopen
können auch fehlschlagen und
.I errno
setzen für Fehler, die für die Routine
.BR malloc (3)
spezifiziert sind.
.PP
Die Funktion
.B fopen
kann auch fehlschlagen und
.I errno
für Fehler, die für die Routine
.BR open (2)
spezifiziert sind, setzen.
.PP
Die Funktion
.B fdopen
kann auch fehlschlagen und
.I errno
für Fehler, die für die Routine
.BR fcntl (2)
spezifiziert sind, setzen.
.PP
Die Funktion
.B freopen
kann auch fehlschlagen und
.I errno
für Fehler, die für die Routinen
.BR open (2),
.BR fclose (3)
und
.BR fflush (3)
spezifiziert sind, setzen.
.SH "SIEHE AUCH"
.BR open (2),
.BR fclose (3).
.SH STANDARDS
Die Funktionen
.B fopen
und
.B freopen
sind konform zu ANSI C3.159-1989 (``ANSI C'').  Die Funktion
.B fdopen
ist konform zu IEEE Std1003.1-1988 (``POSIX'').
