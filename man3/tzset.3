.\" im code geht UTC und GMT froehlich durcheindander 
.\" was soll wall clock time sein ? (local time ?)
.\" warum benutzen die "Coordinated Universal Time" ?
.TH TZSET 3
.SH NAME
tzset \- initialisiere Zeitzonen Daten
.SH SYNOPSIS
.B #include <time.h>
.nf
.B void tzset (void);
.sp
.B extern char *tzname[2];          /* Zeitzonenname */
.B extern int daylight;		/* Sommerzeit Indikator */
.B extern long int timezone;	/* Abstand zu UTC */
.fi

.SH DESCRIPTION
Die Funktion  
.I tzset(3)
initialisiert 
.B tzname[] ,
.B daylight 
und 
.B timezone 
abhängig
von der Umgebungsvariable 
.I TZ. 
Diese Funktion wird von anderen Zeitroutinen
benutzt die Informationen zur Zeitzone benötigen.
Sollte die TZ Varibale nicht gesetzt sein, wird tzname[] mit best möglicher
Näherung aus der lokal "Wall Clock"-Zeit gesetzt.
An dieser Stelle wird oft auf 
.I/etc/localtime
zurückgegriffen. Das File ist normalerweise ein Link auf 
das korrekte Zeitzonen File.

Sollte die TZ Variable gesetzt sein aber der Wert ist Null oder der Wert
hat ein Format (siehe unten), welches nicht interpretiert werden kann, so
wird "Coordinated Universal Time" (UTC) benutzt.

Das Programm kennt drei verschiede Formate für TZ. Das erste Format wird
benutzt wenn in der Zeitzone keine Sommerzeit vorgesehen ist.
.sp
.B  TZ = STD(+|-)Offset
.sp
Der String STD definiert den Namen der Zeitzone. Er besteht auf wenigstens 
drei Buchstaben. Der Offset-String folgt unmittelbar und spezifiziert den
Abstand zwischen der örtlichen Zeit und UTC (Also: localtime=UTC-Offset 
und Achtung Vorzeichenwechsel).
Der Offset ist positiv für Zeitzonen westlich Greenwich. Er kann als
HH.MM.SS angegeben werden. Die Stunde muss zwischen 0 und 24 liegen, 
die Minuten zwischen 0 und 59, die Sekunden ebenfalls.
(Nicht alle Systeme machen das so: AIX kenn auch HH >> 24 )

.PP
Das Zweite Format ermöglicht es die Sommerzeit mit zu definieren.
.sp
.B std offset dst [offset],start[/time],end[/time]
.sp
Es sind keine Leerzeichen zwischen den Elementen vorgesehen. STD und
Offset definert wie Oben. DST und Offset bezeichen den Namen 
und Offset der Sommerzeit. Ist der Offset weggelassen wird angenommen, 
daß die Sommerzeit eine Stunde in der Zukunft liegt.

Das START definiert den Beginn der Sommerzeit. END bezeichnet das 
zurückschalten in Normalzeit. Die Felder können das folgende Format haben:
.sp
.TP
.I Jn 
        Dieses definiert einen Julianischen Tag n (1 <= n <= 365).
	Der 29. Februar wir niemals gezaehlt, auch nicht in Schaltjahren.
.TP
.I Mm.w.d  
Das definiert 
.RS
   \- den Tag d (0 <=d <=6)    0 ist ein Sonntag,
.RE
.RS
   \- der Woche w (1<=w<=5)    in welcher der Tag d liegt 
.RE
.RS
   \- des Monats m (1<=m<=12).
.RE
.TP
.I TIME   
 Das definiert den Zeitpunt an dem Umgeschaltet wird. Wenn hier 
 nicht anders definert gilt die Voreinstellung 02:00:00.
.PP
Das dritte Format besagt, daß die Zeitzonen Information aus einem File
gelesen werden soll.
.sp
.TP
.I	:[file]
.sp
Wird hier kein File angegeben, so wird das File "localtime" im Verzeichnis
für die Zeitzonenfiles gelesen. Die Zeitzonenfile finden sich im
Verzeichnis /usr/share/zoneinfo. Das Fileformat ist in tzfile(5) dokumentiert.
Sollte [file] aber mit einem '/' beginnen so wird nicht in /usr/share/zoneinfo
gesucht. Mit der Glibc kann auf den Doppelpunkt verzichtet werden.

.SH FILES
Wo die Daten für die Zeitzonen gesucht werden, sind von der (g)libc Version
abhängig. Libc4/5 benutzen 
.I /usr/lib/zoneinfo, 
seit libc-5.4.6 befinden sie sich in 
.I/usr/share/zoneinfo. 
Seit Glibc2 gilt: wenn die Variable TZDIR existiert, wird sie als 
Basisverzeichnis benutzt.
.BR
Das Verzeichnis beinhaltet normalerweise folgende Files:
.TP
.B localtime  
 \- lokale Zeitzonendaten
.TP
.B posixrules 
 \- Regeln für TZ nach POSIX

Zu dem sollte 
.I /etc/localtime
 ein Link auf localtime oder das korrekte Zonenfile sein.

.SH CONFORMING TO
.BR SVID 3,
.BR POSIX,
.BR BSD 4.3

.SH SEE ALSO
.BR date(1),
.BR gettimeofday(2), 
.BR time(2), 
.BR ctime(3), 
.BR getenv(3),
.BR tzfile(5)
 