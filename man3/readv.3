.\" (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" License.
.\" Modified Sat Jul 24 18:34:44 1993 by Rik Faith (faith@cs.unc.edu)
.\" Translated into german by Martin Schulze (joey@finlandia.infodrom.north.de)
.\"
.TH READV 3 "27. Mai 1996" "GNU" "Bibliotheksfunktionen"
.SH BEZEICHNUNG
readv, writev \- lese bzw. schreibe Daten in mehrere Puffer
.SH "ÜBERSICHT"
.nf
.B #include <sys/uio.h>
.sp
.BI "int readv(int " filedes ", const struct iovec *" vector ","
.BI "          size_t " count ");"
.sp
.BI "int writev(int " filedes ", const struct iovec *" vector ","
.BI "          size_t " count ");"
.fi
.SH BESCHREIBUNG
Die Funktion
.B readv()
liest
.I count
Blöcke aus der Datei, die mit dem Dateidescriptor
.I filedes
verbunden ist, in die verschiedenen Puffer, die durch
.I vector
beschrieben sind.
.PP
Die Funktion
.B writev()
schreibt höchstens
.I count
Blöcke, die durch 
.I vector
beschrieben sind, in die Datei, die mit dem Dateidescriptor
.I filedes
verbunden ist.
.PP
Der Zeiger
.I vector
zeigt auf einen
.BR "struct iovec" ,
der in
.B <sys/uio.h>
wie folgt definiert ist.
.PP
.br
.nf
.ta 8n 16n 32n
struct iovect {
	void *iovbase;     /* Anfangsadresse */
	size_t iov_len;    /* Anzahl der Bytes */
};
.ta
.fi
.PP
Die Puffer werden in folgender Reihenfolge abgearbeitet:
.IR "vector[0]" ", " vector[1] ", ... " "vector[count]" 
.PP
Die Funktion
.B readv()
arbeitet genauso wie
.BR read (2)
mit der Ausnahme, dass in verschiedene Puffer geschrieben wird.
.PP
Die Funktion
.B writev()
arbeitet genauso wie
.BR write (2)
mit der Ausnahme, dass verschiedene Puffer geschrieben werden.
.PP
.SH "RÜCKGABEWERT"
Die Funktion
.B readv()
gibt die Anzahl der gelesenen Bytes oder \-1 im Fehlerfall zurück,
die Funktion
.B writev()
gibt die Anzahl der geschriebenen Bytes zurück
.SH FEHLER
Wenn die Funktionen
.B readv()
und 
.B writev()
fehlschlagen, setzen sie
.I errno
entsprechend:
.TP
.B EBADF
.I fd
ist kein gültiger Dateideskriptor.
.TP
.B EINVAL
Von
.I fd
kann nicht gelesen (bei
.BR readv() )
bzw. geschrieben (bei
.BR writev() )
werden.
.TP
.B EFAULT
.I buf
befindet sich außerhalb des vom Prozess erreichbaren
Speicherbereiches.
.TP
.B EAGAIN
Nicht blockierende E/A wurde beim Aufruf von
.B open()
gewählt, aber der Lese- oder Schreibvorgang konnte nicht sofort
erledigt werden.
.TP
.B EINTR
Der Lese- oder Schreibvorgang wurde unterbrochen bevor Daten
übertragen werden konnten.
.SH "KONFORM ZU"
unbekannt
.SH BUGS
Es ist nicht ratsam, Aufrufe von Funktionen wie
.BR readv() " oder " writev() ,
die direkt mit den Dateideskriptoren agieren, mit Funktionen aus der
stdio Bibliothek zu mischen.  Die Ergebnisse sind undefiniert und sehr
wahrscheinlich nicht die gewünschten.
.SH "SIEHE AUCH"
.BR read (2),
.BR write (2).
