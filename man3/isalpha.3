.\" (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" License.
.\"
.\" Modified Sat Jul 24 19:10:00 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Sun Aug 21 17:51:50 1994 by Rik Faith (faith@cs.unc.edu)
.\" Modified Sat Sep  2 21:52:01 1995 by Jim Van Zandt <jrv@vanzandt.mv.com>
.\" Modified Mon May 27 22:55:26 1996 by Martin Schulze (joey@linux.de)
.\" Translated into german by Martin Schulze (joey@finlandia.infodrom.north.de)
.\"
.TH ISALPHA 3 "27. Mai 1996" "GNU" "Bibliotheksfunktionen"
.SH BEZEICHNUNG
isalnum, isalpha, isascii, isblank, iscntrl, isdigit, isgraph, islower, 
isprint, ispunct, isspace, isupper, isxdigit \- Zeichenklassifizierungs-Funktionen
.SH "ÜBERSICHT"
.nf
.B #include <ctype.h>
.sp
.BI "int isalnum (int " "c" ");"
.nl
.BI "int isalpha (int " "c" ");"
.nl
.BI "int isascii (int " "c" ");"
.nl
.BI "int isblank (int " "c" ");"
.nl
.BI "int iscntrl (int " "c" ");"
.nl
.BI "int isdigit (int " "c" ");"
.nl
.BI "int isgraph (int " "c" ");"
.nl
.BI "int islower (int " "c" ");"
.nl
.BI "int isprint (int " "c" ");"
.nl
.BI "int ispunct (int " "c" ");"
.nl
.BI "int isspace (int " "c" ");"
.nl
.BI "int isupper (int " "c" ");"
.nl
.BI "int isxdigit (int " "c" ");"
.fi
.SH BESCHREIBUNG
Diese Funktionen prüfen, ob das Zeichen
.IR c ,
das den Wert eines
.B unsigned char
haben oder
.B EOF 
sein muss, in eine Zeichenklasse entsprechend den aktuellen
Einstellungen für die Spracherweiterungen (locale)
passt.
.TP 
.B "isalnum()"
prüft auf alphanumerische Zeichen, es ist äquivalent zu
.BI "(isalpha(" c ") || isdigit(" c "))" \fR.
.TP
.B "isalpha()"
prüft auf Buchstaben, in der standard \fB"C"\fP Spracherweiterung ist es
äquivalent zu
.BI "(isupper(" c ") || islower(" c "))" \fR.
In anderen Spracherweiterungen können weitere Zeichen sein, für die
.B isalpha()
wahr ist - Zeichen, die weder Groß- noch Kleinbuchstaben sind.
.TP
.B "isascii()"
prüft, ob
.I c
ein 7-bit
.I unsigned char
ist, das dem ASCII Zeichensatz entspricht.  Diese Funktion ist eine
BSD-und auch SVID-Erweiterung.
.TP
.B "isblank()"
prüft auf Leerzeichen, also ein Space oder ein Tab.  Diese Funktion
ist eine GNU-Erweiterung.
.TP
.B "iscntrl()"
prüft auf Kontrollzeichen.
.TP
.B "isdigit()"
prüft auf Ziffern ab.
.TP
.B "isgraph()"
prüft auf druckbare Zeichen außer Leerzeichen ab.
.TP
.B "islower()"
prüft, ob
.I c
ein Kleinbuchstabe ist.
.TP
.B "isprint()"
prüft auf druckbare Zeichen inklusive Leerzeichen ab.
.TP
.B "ispunct()"
prüft auf druckbare Zeichen, das kein Leerzeichen und kein
alphanumerisches Zeichen ist.
.TP
.B "isspace()"
prüft auf Freizeichen.  In den
.B """C"""
and
.B """POSIX"""
Spracherweiterung sind dies: Leerzeichen, Seitenvorschub
.RB ( '\ef' ),
Zeilenumbruch
.RB ( '\en' ),
Carriage Return
.RB ( '\er' ),
Horizontaler Tabulator
.RB ( '\et' ),
und verticaler Tabulator
.RB ( '\ev' ).
.TP
.B "isupper()"
prüft auf Großbuchstaben ab.
.TP
.B "isxdigit()"
prüft, ob
.I c
eine hexadezimales Ziffer ist, also eine von
.nl
.BR "0 1 2 3 4 5 6 7 8 9 0 a b c d e f A B C D E F" .
.SH "RÜCKGABEWERT"
Wenn das Zeichen
.I c
in eine der entsprechenden Kategorien fällt, wird eine Zahl ungleich
null zurückgegeben, ansonsten null.
.SH "KONFORM ZU"
ANSI - C, BSD 4.3.
.B isascii()
ist sowohl eine BSD- als auch eine SVID-Erweiterung.
.B isblank()
ist eine GNU-Erweiterung.
.SH BUGS
Die Details, welche Zeichen zu welcher Klasse gehören, sind von der
aktuellen Spracherweiterung abhängig.  Zum Beispiel wird
.B isupper()
in der standard
.B "C"
Spracherweiterung kein Ä erkennen.
.SH "SIEHE AUCH"
.BR tolower (3),
.BR toupper (3),
.BR setlocale (3),
.BR ascii (7),
.BR locale (7).
