.\" Copyright (c) 1990, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)fflush.3	5.4 (Berkeley) 6/29/91
.\"
.\" Converted for Linux, Mon Nov 29 15:22:01 1993, faith@cs.unc.edu
.\" Translated into german by Martin Schulze (joey@finlandia.infodrom.north.de)
.\"
.TH FFLUSH 3 "17. August 1996" "BSD" "Bibliotheksfunktionen"
.SH BEZEICHNUNG
fflush, fpurge \- leere einen Dateistrom
.SH "ÜBERSICHT"
.B #include <stdio.h>
.sp
.BI "int fflush( FILE *" stream );
.br
.BI "int fpurge( FILE *" stream );
.SH BESCHREIBUNG
Die Funktion
.B fflush
bewirkt, dass alle gepufferten Daten des angegebenen 
.I stream
mittels der zugrundeliegenden write-Funktion geschrieben werden.  Der
Status des
.I stream
wird dabei nicht berührt.

Wenn der 
.IR stream \-Parameter
.B NULL
ist, leert
.B fflush
.I alle
geöffneten Ausgabe-Ströme.  (Gilt das auch für Linux?)

Die Funktion
.B fpurge
löscht jeden In- oder Output, der für den angegebenen
.I stream
gepuffert wird.  Dieses verwirft alle noch nicht geschriebenen Daten eines
Ausgabestroms.  Bei Eingabeströmen verwirft dieses alle Eingaben, die zwar
vom zugrundeliegenden Objekt gelesen wurden, auf die jedoch noch nicht mittels
.BR getc (3)
zugegriffen wurde.  Dieses schließt auch Text mit ein, der mit
.B ungetc
zurückgegeben wurde.
.SH "RÜCKGABEWERT"
Bei erfolgreicher Ausführung wird 0 zurückgegeben, ansonsten
.B EOF
und die globale Variable
.I errno
wird so gesetzt, dass sie den Fehler anzeigt.
.SH FEHLER
.TP
.B EBADF
Der
.I stream
ist kein geöffneter Datenstrom oder, im Fall von
.BR fflush ,
kein Datenstrom, der zum Schreiben geöffnet ist.

Die Funktion
.B fflush
kann ebenfalls fehlschlagen, setzt jedoch
.I errno
entsprechend des Fehlers, der für die Routine
.BR write (2)
definiert wurde.
.SH BUGS
Linux unterstützt eventuell nicht
.BR fpurge .
.SH "KONFORM ZU"
Die
.B fflush
Routine ist konform zu ANSI C3.159-1989 (``ANSI C'').
.SH "SIEHE AUCH"
.BR write (2),
.BR fopen (3),
.BR fclose (3),
.BR setbuf (3).
